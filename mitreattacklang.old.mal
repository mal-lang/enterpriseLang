category Person {
    asset User {
        | userRights
            ->  os.accountDiscovery,
                os.domainDiscovery,
                os.applicationWindowDiscovery,
                os.bruteForce,
                os.passwordPolicyDiscovery,
                os.runningProcessDiscovery,
                os.remoteSystemDiscovery,
                os.userCommandLineInterface,
                os.processInjection,
                computer.userDataDestruction,
                computer.fileDiscovery,
                computer.directoryDiscovery,
                computer.fileDeletion,
                computer.uploadRemoteFile, 
                computer.downloadRemoteFile,
                computer.collectAudio,
                adminLogin,
                macOS.appleScript

        | userCredentials
            ->  userRights
        | adminLogin
            ->  adminCheck
        & adminCheck
            ->  administrator.adminRights
        # adminAccess
            ->  adminCheck

        | connectToVpn
            ->  externalNetwork.connectToVpn 
    }

    asset Administrator {
        | adminRights
            ->  user.userRights,
                windows.createService,
                computer.adminDataDestruction,
                os.detailedRunningProcessDiscovery,
                os.detailedRemoteSystemDiscovery,
                os.adminCommandLineInterface,
                windows.bootkit,
                linux.bootkit,
                createUserAccount,
                windows.appInitDLLs 
        & createUserAccount 
            ->  os.persistance
        # multiFactorAuthentication
            ->  createUserAccount
    }
    asset WindowsAdmin extends Administrator{
        | systemRights
            ->  windows.executeService
        | adminRights
            +>  accountManipulation,
                computer.windowsAdminShares
        & accountManipulation
            ->  user.adminLogin,
                user.userCredentials
        # multiFactorAuthentication
            +> accountManipulation
    }
    asset Root extends Administrator{

    }
    asset Employee {
        & spearphishingLinkClicked [UniformDistribution(20,1)]
            rationale: "20 % link https://faui1-files.cs.fau.de/filepool/publications/zina/2017-benenson-unpacking-spear-phishing.pdf"
            -> browser.spearphishingLink

        | pageVisited
            -> browser.maliciousWebsite
        | adLinkClicked
            -> browser.maliciousAds
        | maliciousContentClicked
            -> browser.maliciousContent

        & spearphishingAttachmentDownload
            -> browser.spearphishingAttachments // added s !!! 
        # trainedEmployee 
            -> spearphishingAttachmentDownload, 
               spearphishingLinkClicked, 
               _userExecution,
               manualManipulation
        | bypassTrainedEmployee
            
        | Timestomp
            -> bypassTrainedEmployee
        | Masquerading
            -> bypassTrainedEmployee
        |   userExecution
            ->  _userExecution   

        &   _userExecution
            -> computer.infectedComputer,
               computer.infectedWindowsComputer
        | insertMedia
            -> userExecution,
               manualManipulation
        & manualManipulation // why not trainedEmployee defens
            -> user.userRights
        |   socialEngineering
            -> _socialEngineering
        &   _socialEngineering 
            ->  computer.infectedComputer,
                user.userCredentials
        # restrictSiteAndPrograms
            -> _socialEngineering

    }
    asset Adversary {
        | maliciousWebsite
            -> browser.maliciousWebsite, 
               employee.pageVisited
        | maliciousAds
            -> browser.maliciousAds, 
               employee.adLinkClicked
        | maliciousContent
            -> os.codeDelivered, 
               employee.maliciousContentClicked
        | thirdPartySystemAccess
            -> networkUnitThirdParty.connectedToLocalNetwork
        | useHardwareTool
            -> adversaryHardwareTool.networkTapping 
        | spearphishingViaService
            -> employee.socialEngineering 
        | supplyChainCompromiseAttack
            -> supplyChain.supplyChainCompromise
    }
}

category Software {
    asset Services {
        | informationRepositories
            -> computer.dataCollected
    }
    abstractAsset OS{
        & accountDiscovery
            info: "get account names and information"

        & domainDiscovery
            info: "get domain names and information"

        & applicationWindowDiscovery
            info: "get a listing of opened application windows"

        & runningProcessDiscovery
            info: "Adversaries may attempt to get information about running processes on a system.
             Information obtained could be used to gain an understanding of common software running on systems within the network."
            -> processInjection

        & detailedRunningProcessDiscovery
            info: "Adversaries with admin rights may get better process ownership details"

        & remoteSystemDiscovery
            info: "Adversaries will likely attempt to get a listing of other systems by IP address, hostname,
             or other logical identifier on a network that may be used for Lateral Movement from the current system."

        & detailedRemoteSystemDiscovery
            info: "Adversaries with admin rights may get better details of the hosts enumerated"
        
        & adminCommandLineInterface
            //-> // entrypoints of attacks that can be done with command line interface under admin rights
        
        & userCommandLineInterface
           // -> // entrypoints of attacks that can be done with command line interface under user rights
    

        # whitelisting
            -> accountDiscovery,
                domainDiscovery,
                applicationWindowDiscovery,
                runningProcessDiscovery,
                detailedRunningProcessDiscovery,
                remoteSystemDiscovery,
                detailedRemoteSystemDiscovery,
                adminCommandLineInterface, 
                userCommandLineInterface,
                clipboardData,
                screenCapture   

        & processInjection
            -> administrator.adminRights //, // administrator added att start !!!
               //bypassAntivirus, // don't known where it should gove !!!
              // bypassWhitelisting  // don't known where it should gove !!!
        
        
        | passwordPolicyDiscovery
            -> bruteForceWithPasswordPolicy
        & bruteForceWithPasswordPolicy
            -> user.userCredentials //the probability distribution should be so that it has higher chance of success than the bruteforce attack

        & bruteForce
            info: "Adversaries may use brute force techniques to attempt access to accounts when passwords are unknown or when password hashes are obtained."
            -> user.userCredentials
        # lockoutPolicies
            -> bruteForce

        | codeDelivered
            -> antivirusCheck
        & antivirusCheck
            -> runCode
        # antivirus
            -> antivirusCheck,
                spearphishingAttachmentDownload,
                spearphishingLinkDownload

        | runCode
            -> computer.infectedComputer

        & spearphishingAttachmentDownload
            -> employee.userExecution

        & spearphishingLinkDownload
            -> employee.userExecution

        & clipboardData
            ->  user.adminLogin,
                user.userRights
                // data copromos or data collect?

        & screenCapture
            -> computer.downloadRemoteFile 
        
        | persistance

    }
    asset Linux extends OS {
        & bootkit
            -> persistance
        # secureBootProcess
            -> bootkit
        //| persistance

        &  bashHistory 
            ->  linxUser.adminLogin,
                linxUser.userCredentials
        # turnOfBashHistory
            ->  bashHistory

    }
    asset MacOS extends OS{
        &  bashHistory 
            ->  macUser.adminLogin,
                macUser.userCredentials
        # turnOfBashHistory
            -> bashHistory 
        & appleScript
            -> runCode
        # trustedDeveloperID 
            -> appleScript

    }
    asset Windows extends OS{
        | windowsManagementInstrumentation 
            ->  windowsUser.userRights
        & createService
            -> executeService
        # whitelisting
            +>  createService,
                appInitDLLs
        & executeService
            ->  persistance
        | persistance
        
        & bootkit
            ->  persistance
        # secureBootProcess
            ->  bootkit
        & appInitDLLs 
            ->  persistance 
        # secureBoot
            +>  appInitDLLs

    }
}

category Network {
    abstractAsset Network{
        //-> firewall
    }
    asset Browser {
        | manInTheBrowser
            -> internalNetwork.connectedToNetwork
        | maliciousWebsite
            -> checkPlugin, checkBrowser
        & checkBrowser
            -> os.codeDelivered
        # nonVulnerableBrowser
            -> checkBrowser
        & checkPlugin
            -> os.codeDelivered
        # nonVulnerablePlugin
            -> checkPlugin

        | maliciousAds
            -> compromisedBrowser
        & compromisedBrowser
            -> os.codeDelivered
        # adblocker
            -> compromisedBrowser
        
        & spearphishingLink
            ->  os.spearphishingLinkDownload,
                user.userCredentials
        & spearphishingAttachments // added s !!!
            -> os.spearphishingAttachmentDownload
        # blockAttachmentsCheck 
            info: "Block unknown or unused attachments by default that should not be transmitted over email "
            -> spearphishingAttachments
        # phishingdetection
            -> spearphishingAttachments, 
               spearphishingLink
        | maliciousContent // temp to make it run !!!

        | accessWebServer
            -> server.webServer
    }
    asset ExternalNetwork extends Network{
        # intrusionDetecion

        # signatureIdentification

        | bypassNetwordDetection

        | vpnExternalConnection
            -> internalNetwork.vpnInternalConnection
        & connectToVpn
            -> vpnExternalConnection
        # multiFactorAuthentication
            -> connectToVpn
        | wirelessAccessAndPassiveNetworkTapping 
    }
    asset InternalNetwork extends Network {
        | connectedToNetwork
            ->  computer.infectedComputer,
                server.infectedServer,
                networkSharedDrive.connectToDrive

        | vpnInternalConnection

    }
    asset C2Server extends ExternalNetwork {
        # intrusionDetecion
            +> _obfuscatedData
        # signatureIdentification
            +> _obfuscatedData
        | c2Connexion
            -> obfuscatedData
        | obfuscatedData
            -> _obfuscatedData
        & _obfuscatedData
            -> bypassNetwordDetection
    }

    asset AdversaryHardwareTool {
        | networkTapping
            -> externalNetwork.wirelessAccessAndPassiveNetworkTapping
    }

    asset NetworkSharedDrive {
        | data
            -> c2Server.obfuscatedData
        & connectToDrive
            -> data
        # whitelisting
            -> connectToDrive
    }

}

category Hardware {
    asset Computer {
        | infectedComputer
            ->  linux.bashHistory,
                macOS.bashHistory,
                os.screenCapture,
                internalNetwork.connectedToNetwork,
                systemNetworkConfigurationDiscovery,
                systemNetworkConnectionsDiscovery,
                SystemOwnerUserDiscovery,
                dataFromRemovableMedia,
                dataFromInformationRepositories,
                inputCapture
        
        &  windowsAdminShares 
            -> windows.windowsManagementInstrumentation
        | dataFromInformationRepositories 
            -> services.informationRepositories
        | inputCapture //keylogger
            -> user.userCredentials 
        & dataFromRemovableMedia
            -> removableMedia.data
        &  systemNetworkConfigurationDiscovery 
            info: "Examples include Arp, ipconfig/ifconfig, nbtstat, and route."
        &  systemNetworkConnectionsDiscovery 
            info: "Examples windows netstat, net use, and net session with Net, macOS and linux netstat and lsof."
        &  SystemOwnerUserDiscovery
            -> user.userRights 
        & fileDiscovery
            info: "Adversaries may enumerate files and directories or may search in specific
             locations of a host or network share for certain information within a file system. "

        & directoryDiscovery
            info: "Adversaries may enumerate files and directories or may search in specific 
            locations of a host or network share for certain information within a file system. "

        & fileDeletion
            info: "Adversaries may remove traces (files) over the course of an intrusion to keep
             their footprint low or remove them at the end as part of the post-intrusion cleanup process"
            -> bypassHostForensicAnalysisDetection
        | bypassHostForensicAnalysisDetection

        # whitelisting
            -> fileDiscovery, 
               directoryDiscovery,
               fileDeletion,
               userDataDestruction,
               adminDataDestruction, 
               compressData, 
               _collectAudio,
               systemNetworkConfigurationDiscovery,
               systemNetworkConnectionsDiscovery,
               SystemOwnerUserDiscovery,
               dataFromRemovableMedia,
               windowsAdminShares

        | uploadRemoteFile
            -> _uploadRemoteFile
            
        & _uploadRemoteFile
            // leads to file execution attacks
            -> employee.userExecution

        | downloadRemoteFile
            info: "data collection from the user"
            -> _downloadRemoteFile
        & _downloadRemoteFile

        # networkIntrusionDetection
             info : "Network intrusion detection and prevention systems that use network signatures to
              identify traffic for specific adversary malware or unusual data transfer over known tools
               and protocols like FTP can be used to mitigate activity at the network level"
            -> _uploadRemoteFile, _downloadRemoteFile

        & userDataDestruction

        & adminDataDestruction

        # backup
            -> userDataDestruction,
               adminDataDestruction

        | dataCollected
            -> compressData

        & compressData
            //-> // exfiltration attack entry points

        | infectedWindowsComputer

        E microphoneExists  
            <- microphone
            -> microphone.collectAudio

        |  collectAudio
            //-> _collectAudio
        & _collectAudio
            -> dataCollected
        

    }
    asset RemovableMedia {
        | infectedMedia
            -> employee.insertMedia
        | data

    }
    asset Microphone {
        | collectAudio
            -> computer._collectAudio
    }

    asset Server {
        | infectedServer
            ->  webShell,
                internalNetwork.connectedToNetwork,
                webServer
        & webShell
            ->  c2Server.obfuscatedData
        # separateAccountForServerAndNormalUser
            ->  webShell
        & webServer
            -> sharedWebroot
        & sharedWebroot 
            ->  internalNetwork.connectedToNetwork
        # sharedWebrootDefens
            info: "Limit privileged account use, unauthenticated network share access, and network/system isolation."
            -> sharedWebroot
    }
}

category ThirdParty {
    asset NetworkUnitThirdParty{
        | connectedToLocalNetwork
            -> internalNetwork.connectedToNetwork 
    }  
    asset EmployeeThirdParty {
        | infectedMedia
            -> removableMedia.infectedMedia
    }
    asset SupplyChain {
        &  supplyChainCompromise
            -> computer.infectedComputer
        # supplyChainRiskManagementSCRM
            -> supplyChainCompromise
    }
}

associations {
    
    RemovableMedia [removableMedia] 1-* <-- ui --> 1 [employee] Employee
    
    Adversary [adversary] 1 <-- attack --> 1-* [employee] Employee 
    Adversary [adversary] 1 <-- attack --> 1-* [browser] Browser 
    Adversary [adversary] 1 <-- attack --> 1-* [os] OS 

    User [user] 1 <-- ui--> 1-* [os] OS
    User [user] 1 <-- ui--> 1 [computer] Computer

    Administrator [administrator] 1 <--ui--> 1-* [user] User
    Administrator [administratorWin] 1 <--ui--> 1-* [windows] Windows
    Administrator [administratorLinux] 1 <--ui--> 1-* [linux] Linux
    Administrator [administrator] 1 <--ui--> 1-* [computer] Computer
    Administrator [administrator] 1 <--ui--> 1-* [os] OS

    //ExternalNetworkWindowsAdmin [windowsAdmin] 1 <--ui--> 1 [windows] Windows

    Employee [employee] 1 <--use--> 1-* [browser] Browser
    Employee [employee] 1 <--use--> 1-* [computer] Computer
    Employee [employee] 1 <--use--> 1-* [user] User

    Browser [browser] 1-* <-- software --> 1 [os] OS
    ExternalNetwork [externalNetwork] 1 <--system--> 1 [c2Server] C2Server
    OS [os] 1-* <-- system --> 1-* [computer] Computer // added !!!
    OS [os] 1-* <-- system --> 1-* [employee] Employee // added !!!
    Computer [computer]  1-* <-- system --> 1-*  [microphone] Microphone // added !!!


      
    Computer [computer] 1-* <-- system --> 1-* [internalNetwork] InternalNetwork
    NetworkUnitThirdParty [networkUnitThirdParty] 1-* <-- system --> 1-* [internalNetwork] InternalNetwork
    SupplyChain [supplyChain] 1-* <-- system --> 1-* [computer] Computer
    Linux [linux] 1-* <-- system --> 1-* [linuxComputer] Computer
    Windows [windows] 1-* <-- system --> 1-* [windowsComputer] Computer
    MacOS [macOS] 1-* <-- system --> 1-* [macComputer] Computer
    ExternalNetwork [externalNetwork] 1-* <-- ui --> 1-* [adversaryHardwareTool] AdversaryHardwareTool
    ExternalNetwork [externalNetwork] 1-* <-- ui --> 1-* [internalNetwork] InternalNetwork
    RemovableMedia [removableMedia] 1-* <-- ui --> 1-* [employeeThirdParty] EmployeeThirdParty
    User [macUser] 1-* <-- ui --> 1-* [macOS] MacOS
    User [user] 1-* <-- ui --> 1-* [externalNetwork] ExternalNetwork 
    Adversary [adversary] 1-* <-- ui --> 1-* [computer] Computer
    Adversary [adversary] 1-* <-- ui --> 1-* [networkUnitThirdParty] NetworkUnitThirdParty
    Adversary [adversary] 1-* <-- ui --> 1-* [adversaryHardwareTool] AdversaryHardwareTool
    EmployeeThirdParty [employeeThirdParty] 1-* <-- use --> 1-* [adversary] Adversary
    Adversary [adversary] 1-* <-- attack --> 1-* [supplyChain] SupplyChain
    Adversary [adversary] 1-* <-- attack --> 1-* [removableMedia] RemovableMedia
    User [linxUser] 1-* <-- ui --> 1-* [linux] Linux  
    User [windowsUser] 1-* <-- ui --> 1-* [windows] Windows  
    User [user] 1-* <-- ui --> 1-* [browser] Browser
    Server [server] 1-* <-- system --> 1-* [internalNetwork] InternalNetwork
    Server [server] 1-* <-- system --> 1-* [c2Server] C2Server
    NetworkSharedDrive [networkSharedDrive] 1-* <-- system --> 1-* [internalNetwork] InternalNetwork
    NetworkSharedDrive [networkSharedDrive] 1-* <-- system --> 1-* [c2Server] C2Server
    RemovableMedia [removableMedia] 1-* <-- ui --> 1-* [computer] Computer
    Computer [computer]  1-* <-- ui --> 1-* [services] Services
    Browser [browser] 1-* <-- system --> 1-* [internalNetwork] InternalNetwork
    Server [server] 1-* <-- system --> 1-* [browser] Browser

}