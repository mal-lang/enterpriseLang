package org.mal_lang.enterpriselang.test;

import core.Attacker;
import org.junit.jupiter.api.Test;

public class TestVPNVulnerability extends EnterpriseLangTest {
    private static class VPNVulnerabilityModel {

        /*
        attack scenario source: https://us-cert.cisa.gov/ncas/alerts/aa20-107a
               
        Service ---- OS ----- Computer ----- Router ----- InternalNetwork

        Attacker's entry point: OS.attemptValidAccounts
        */

        public final Service vpn = new Service("VPN");
        public final OS os = new OS("os");
        public final Computer computer = new Computer("computer");
        public final InternalNetwork victimNetwork = new InternalNetwork("victimNetwork");
        public final Router router = new Router("router");         

        public VPNVulnerabilityModel() {
            os.addService(vpn);
            os.addComputer(computer);
            computer.addRouter(router);
            router.addInternalNetwork(victimNetwork);
        }
    }

    @Test // Test attack path Valid Accounts -> External Remote Services -> Remote Services -> Data Encrypted for Impact, Exfiltration Over C2 Channel
    public void testVPNWithVulnerability() {
            var model = new VPNVulnerabilityModel();

            Attacker attacker = new Attacker();
            attacker.addAttackPoint(model.os.validAccounts);
            attacker.attack();

            model.os.domainAccounts.assertCompromisedInstantaneously();
            model.vpn.externalRemoteServices.assertCompromisedInstantaneously();
            model.vpn.remoteServices.assertCompromisedInstantaneously();
            model.victimNetwork.c2Connected.assertCompromisedInstantaneously();
            model.victimNetwork.dataEncryptedForImpact.assertCompromisedInstantaneously();
            model.victimNetwork.exfiltrationOverC2Channel.assertCompromisedInstantaneously();
    }  
}