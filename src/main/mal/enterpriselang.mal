// enterpriseLang
// Authors: Wenjun Xiong (wenjx@kth.se), Emeline Legrand, Oscar Åberg
// Probability distributions: Quentin Biharé, Love Wessman, Lina Evensjö

#id: "org.mal_lang.attacklang"
#version: "1.0.0"

category Person {
    asset User {
        | attemptMaliciousLink @hidden
            ->  maliciousLink    

        & maliciousLink //(0.712)*Exponential(1)]
            developer info: "Sources for distribution result: https://arxiv.org/pdf/1606.00887; https://dl.acm.org/doi/fullHtml/10.1145/1290958.1290968"
            ->  computer.os.service.attemptExploitationForClientExecution,
                attemptMaliciousFile, // links may lead users to download files that require execution via Malicious File
                computer.os.executeCode

        | attemptMaliciousFile @hidden
            ->  maliciousFile

        & maliciousFile //(0.93)*Exponential(1)]
            developer info: "Sources for distribution result: Based on attack step spearphishingLinkClicked and https://doi.org/10.1016/j.cose.2006.10.009"
            ->  computer.os.attemptDynamicDataExchange,
                computer.os.executeCode

        | attemptUserExecution @hidden
            ->  userAccount.userExecution

        | mediaInserted //(0.3)*Exponential(48)]
            user info: "People work in the targeted entreprise have physical access to the network and can thus easily use an infected USB device for the adversary to get initial compromise."
            developer info: "Sources for distribution result: https://www.supplychaindive.com/news/internal-actors-cyberattacks-manufacturing/572832/#:~:text=External%20actors%20account%20for%20the,2019%20Data%20Breach%20Investigations%20Report"
            ->  computer.os.replicationThroughRemovableMedia,
                computer.peripheralDevice.dataExfiltration

        # userTraining //(0.22)]
            user info: "https://attack.mitre.org/mitigations/M1017/"
            developer info: "Sources for distribution result: https://www.tandfonline.com/doi/abs/10.1080/10919392.2019.1552745; https://doi.org/10.1145/1572532.1572536; https://ieeexplore.ieee.org/abstract/document/6585241" 
            ->  maliciousFile,
                maliciousLink,
                userAccount.userExecution
    }
}

category Software {
    asset UserAccount {
        | userRights
            ->  os.abuseElevationControlMechanism,
                os.accountAccessRemoval,
                os.accountDiscovery,
                os.applicationWindowDiscovery,
                os.attemptAccessTokenManipulation,
                os.attemptAutomatedCollection,
                os.attemptBITSJobs,
                os.attemptDataEncryptedForImpact,
                os.attemptExecutionThroughAPI,
                os.attemptLaunchAgent,
                os.attemptLogonScripts,
                os.attemptPlistModification,
                os.attemptSetuidAndSetgid,
                os.attemptShortcutModification,
                os.attemptSSHAuthorizedKeys,
                os.attemptTaintSharedContent,
                os.bash_profileAndBashrc,
                os.bashHistory,
                os.bruteForce,
                os.bypassUserAccessControl,
                os.changeDefaultFileAssociation,
                os.clearCommandHistory,
                os.cmstp,
                os.commandAndScriptingInterpreter,
                os.compileAfterDelivery,
                os.compiledHTMLFile,
                os.componentObjectModelHijacking,
                os.controlPanel,
                os.cOR_PROFILER,
                os.credentialsInFiles,
                os.credentialsInRegistry,
                os.credentialStuffing,
                os.cron,
                os.dataDestruction,
                os.dataEncoding,
                os.dataFromInformationRepositories,
                os.dataManipulation,
                os.defaultAccounts,
                os.deobfuscateOrDecodeFilesOrInformation,
                os.disableOrModifyTools,
                os.diskWipe,
                os.dLLSearchOrderHijacking,
                os.domainAccounts,
                os.domainDiscovery,
                os.domainGroups,
                os.domainTrustDiscovery,
                os.dynamicDataExchange,
                os.dynamicResolution,
                os.elevatedExecutionWithPrompt,
                os.emailCollection,
                os.executableInstallerFilePermissionsWeakness,
                os.executionGuardrails,
                os.executionThroughModuleLoad,
                os.fileAndDirectoryDiscovery,
                os.fileAndDirectoryPermissionsModification,
                os.fileDeletion,
                os.forcedAuthentication,
                os.gatekeeperBypass,
                os.groupPolicyModification,
                os.groupPolicyPreferences,
                os.gUIInputCapture,
                os.hiddenFilesAndDirectories,
                os.hiddenFileSystem,
                os.hiddenWindow,
                os.hISTCONTROL,
                os.indicatorRemovalOnHost,
                os.indirectCommandExecution,
                os.inhibitSystemRecovery,
                os.installRootCertificate,
                os.installUtil,
                os.internalSpearphishing,
                os.lateralToolTransfer,
                os.launchctl,
                os.lC_LOAD_DYLIB_Addition,
                os.lLMNR_NBT_NS_PoisoningAndSMBRelay,
                os.localAccounts,
                os.localGroups,
                os.manInTheMiddle,
                os.masqueradeTaskOrService,
                os.modifyRegistry,
                os.mshta,
                os.msiexec,
                os.networkShareConnectionRemoval,
                os.networkShareDiscovery,
                os.odbcconf,
                os.goldenTicket,
                os.parentPIDSpoofing,
                os.passwordCracking,
                os.passwordGuessing,
                os.passwordPolicyDiscovery,
                os.passwordSpraying,
                os.pathInterceptionBySearchOrderHijacking,
                os.peripheralDeviceDiscovery,
                os.portableExecutableInjection,
                os.portKnocking,
                os.powerShellUserProfile,
                os.privateKeys,
                os.processDiscovery,
                os.processDoppelganging,
                os.processHollowing,
                os.pubPrn,
                os.registryRunKeysOrStartupFolder,
                os.regsvcsOrRegasm,
                os.regsvr32,
                os.remoteDesktopProtocol,
                os.remoteFileCopy, 
                os.remoteSystemDiscovery,
                os.reopenedApplications,
                os.resourceHijacking,
                os.rootkit,
                os.rundll32,
                os.runVirtualInstance,
                os.screensaver,
                os.securitySoftwareDiscovery,
                os.servicesFilePermissionsWeakness,
                os.servicesRegistryPermissionsWeakness,
                os.serviceStop,
                os.signedScriptProxyExecution,
                os.silverTicket,
                os.sIPAndTrustProviderHijacking,
                os.softwareDiscovery,
                os.source,
                os.spaceAfterFileName,
                os.sudoAndSudoCaching,
                os.systemdService,
                os.systemInformationDiscovery,
                os.systemNetworkConfigurationDiscovery,
                os.systemNetworkConnectionsDiscovery,
                os.systemOwnerOrUserDiscovery,
                os.systemServiceDiscovery,
                os.systemShutdownOrReboot,
                os.templateInjection,
                os.threadExecutionHijacking,
                os.timestomp,
                os.trap,
                os.trustedDeveloperUtilities,
                os.videoCapture,
                os.windowsAdminShares,
                os.windowsManagementInstrumentation,
                os.windowsRemoteManagement,
                os.xslScriptProcessing,
                os.service.attemptExploitationForCredentialAccess,
                os.service.attemptExploitationForDefenseEvasion,
                os.service.attemptExploitationForPrivilegeEscalation,
                os.service.attemptExploitationOfRemoteServices,
                os.service.attemptExternalRemoteServices,
                os.service.implantContainerImage,
                os.service.remoteAccessSoftware,
                os.service.cloudAccounts,
                os.service.cloudGroups,
                os.service.cloudServiceDiscovery,
                os.service.cloudServiceDashboard,
                os.service.disableOrModifyCloudFirewall,
                os.service.modifyCloudComputeInfrastructure,
                os.service.officeTemplateMacros,
                os.service.officeTest,
                os.service.outlookForms,
                os.service.outlookHomePage,
                os.service.outlookRules,
                os.service.addIns,
                os.service.stealApplicationAccessToken,
                os.service.attemptUseThirdpartySoftware,
                os.service.browser.browserBookmarkDiscovery,
                os.service.browser.driveByCompromise,
                os.service.browser.installExtensions,
                os.service.browser.stealWebSessionCookie,
                os.computer.router.internalNetwork.transmittedDataManipulation,
                os.computer.router.externalNetwork.bidirectionaCommunication,
                os.computer.router.externalNetwork.dataFromCloudStorageObject,
                os.computer.router.externalNetwork.deadDropResolver,
                os.computer.router.externalNetwork.oneWayCommunication,
                os.computer.router.externalNetwork.transmittedDataManipulation

        | userCredentials
            ->  userRights,
                os.validAccounts,
                os.computer.router.internalNetwork.exchangeServerCollection,
                os.service.remoteServices

        & userExecution
            developer info: "Binary probability relation."
            ->  user.maliciousFile,
                user.maliciousLink

        | userInformation

        # userTraining //(0.22)]
            user info: "https://attack.mitre.org/mitigations/M1017/"
            developer info: "Sources for distribution result: https://www.tandfonline.com/doi/abs/10.1080/10919392.2019.1552745; https://doi.org/10.1145/1572532.1572536; https://ieeexplore.ieee.org/abstract/document/6585241"      
            ->  os.cachedDomainCredentials,
                os.confluence,
                os.credentialsInFiles,
                os.gUIInputCapture,
                os.lSASecrets,
                os.lSASSMemory,
                os.manInTheBrowser,
                os.nTDS,
                os.plistModification,
                os.reopenedApplications,
                os.securityAccountManager,
                os.sharepoint,
                os.templateInjection,
                os.twoFactorAuthenticationInterception, // remove smart cards when not in use
                os.service.browser.browserExtensions,
                os.service.browser.stealWebSessionCookie,
                os.service.stealApplicationAccessToken,
                os.service.spearphishingViaService,
                os.service.useThirdpartySoftware

        # userAccountManagement //(0.30)] 
            developer info: "Sources for distribution results : https://lp.alpha-gen.co.uk/2018-global-state-of-pam/"
            user info: "https://attack.mitre.org/mitigations/M1018/"     
            ->  os.accessTokenManipulation,
                os.at,
                os.attemptStartupItems,
                os.bITSJobs,
                os.computer.router.externalNetwork.dataFromCloudStorageObject,
                os.confluence,
                os.cOR_PROFILER,
                os.credentialStuffing,
                os.cron,
                os.disableOrModifySystemFirewall,
                os.disableOrModifyTools,
                os.disableWindowsEventLogging,
                os.executableInstallerFilePermissionsWeakness,
                os.indicatorBlocking,
                os.launchAgent,
                os.launchctl,
                os.launchd,
                os.launchDaemon,
                os.manInTheBrowser,
                os.passTheHash,
                os.passTheTicket,
                os.rc_common,
                os.rDPHijacking,
                os.remoteDesktopProtocol,
                os.remoteScheduledTask,
                os.scheduledTask,
                os.servicesFilePermissionsWeakness,
                os.serviceStop,
                os.sharepoint,
                os.shortcutModification,
                os.systemdService,
                os.windowsManagementInstrumentation,
                os.windowsManagementInstrumentationEventSubscription,
                os.windowsService,
                os.winlogonHelperDLL,
                os.service.remoteServices,
                os.service.createSnapshot,
                os.service.cloudServiceDashboard,
                os.service.createCloudInstance,
                os.service.deleteCloudInstance,
                os.service.disableOrModifyCloudFirewall,
                os.service.stealApplicationAccessToken,
                os.service.useThirdpartySoftware
    } 

    asset RemoteDesktopUser extends UserAccount {
        | userCredentials

        # multiFactorAuthentication //(0.99325)]
            developer info: "Sources for distribution result: https://security.googleblog.com/2019/05/new-research-how-effective-is-basic.html, https://www.zdnet.com/article/microsoft-using-multi-factor-authentication-blocks-99-9-of-account-hacks/"
            ->  os.remoteDesktopProtocol
    }     

    asset AdminAccount {
        | adminRights
            user info: "Administrator is an actual account."
            ->  userAccount.userRights,
                createAccount, 
                os.abuseElevationControlMechanism,
                os.accessibilityFeatures,
                os.accountAccessRemoval,
                os.appCertDLLs,
                os.appInitDLLs,
                os.applicationShimming,
                os.at,
                os.attemptAccessTokenManipulation,
                os.attemptAutomatedCollection,
                os.attemptBITSJobs,
                os.attemptCredentialsInFiles,
                os.attemptDataDestruction,
                os.attemptDataEncryptedForImpact,
                os.attemptExecutionThroughAPI,
                os.attemptServiceRegistryPermissionsWeakness,
                os.attemptServicesFilePermissionsWeakness,
                os.attemptServiceStop,
                os.attemptShortcutModification,
                os.attemptSIDHistoryInjection,
                os.attemptTimeProviders,
                os.attemptWindowsAdminShares,
                os.attemptWindowsManagementInstrumentationEventSubscription,
                os.attemptWinlogonHelperDLL,             
                os.authenticationPackage,
                os.bootkit,   
                os.clearWindowsEventLogs,
                os.credentialAPIHooking,
                os.credentialsFromPasswordStores,
                os.dCShadow,
                os.dCSync,
                os.detailedRemoteSystemDiscovery,
                os.disableWindowsEventLogging,
                os.distributedComponentObjectModel,
                os.domainControllerAuthentication,
                os.exchangeEmailDelegatePermissions,
                os.fileAndDirectoryDiscovery,
                os.fileSystemLogicalOffsets,
                os.firmwareCorruption, 
                os.groupPolicyModification,
                os.imageFileExecutionOptionsInjection,
                os.inhibitSystemRecovery,
                os.lSASSDriver,
                os.lSASSMemory,
                os.manInTheBrowser,
                os.masqueradeTaskOrService,
                os.modifyRegistry,
                os.netshHelperDLL,
                os.networkServiceScan,
                os.networkShareConnectionRemoval,
                os.networkSniffing,
                os.oSCredentialDumping,
                os.parentPIDSpoofing,
                os.passwordFilterDLL,
                os.portMonitors,
                os.powerShell,
                os.powerShellAdminProfile,
                os.processDiscovery,
                os.queryRegistry,
                os.registryRunKeysOrStartupFolder,
                os.remoteScheduledTask,
                os.resourceHijacking,
                os.scheduledTask,
                os.securitySupportProvider,
                os.serviceExecution,
                os.sQLStoredProcedures,
                os.systemFirmware,
                os.systemNetworkConnectionsDiscovery,
                os.systemOwnerOrUserDiscovery,
                os.systemServiceDiscovery,
                os.systemShutdownOrReboot,
                os.transportAgent,
                os.twoFactorAuthenticationInterception,
                os.windowsManagementInstrumentation,
                os.windowsRemoteManagement,
                os.service.applicationDeploymentSoftware,
                os.service.attemptUseThirdpartySoftware,
                os.service.additionalAzureServicePrincipalCredentials,
                os.service.exchangeEmailDelegatePermissions,
                os.service.addOffice365GlobalAdministratorRole
             
        | adminCredentials
            ->  adminRights,
                os.validAccounts,
                os.service.remoteServices

        | attemptCreateAccount @hidden
            ->  createAccount

        & createAccount //(0.05665)*Exponential(1440)]
            developer info: "Sources for distribution result: https://www.fireeye.com/current-threats/annual-threat-report/mtrends.html, https://www.crowdstrike.com/resources/reports/observations-from-the-front-lines-of-threat-hunting/, https://support.microsoft.com/en-us/help/4026923/windows-10-create-a-local-user-or-administrator-account, https://www.youtube.com/watch?v=Ym0JJ5NGdrA, https://www.youtube.com/watch?v=SRqxIb_ETEQ"
            ->  os.service.cloudAccount,
                os.domainAccount,
                os.localAccount

        # privilegedAccountManagement //(0.30)]
            developer info: "Sources for distribution results : https://lp.alpha-gen.co.uk/2018-global-state-of-pam/"
            user info: "https://attack.mitre.org/mitigations/M1026/"
            ->  os.accessTokenManipulation,
                os.domainAccount,
                os.firmwareCorruption,
                os.kernelModulesAndExtensions,
                os.localAccount,
                os.modifyRegistry,
                os.passTheTicket,
                os.powerShell,
                os.remoteDesktopProtocol,
                os.serviceExecution,
                os.sudoAndSudoCaching,
                os.systemdService,
                os.systemFirmware,
                os.windowsAdminShares,
                os.windowsManagementInstrumentation,
                os.windowsManagementInstrumentationEventSubscription,
                os.windowsRemoteManagement,
                os.service.applicationDeploymentSoftware,
                os.service.exploitationOfRemoteServices,
                os.service.cloudAccount,
                os.service.useThirdpartySoftware, // grant access to application deployment systems only to a limited number of authorized administrators
                os.service.exploitHighVulnerabilityPublicFacingApplication,
                os.service.exploitMediumVulnerabilityPublicFacingApplication,
                os.service.exploitLowVulnerabilityPublicFacingApplication
    }

    asset Service {
        | attemptTrustedRelationship @hidden

        & trustedRelationship //(0.40)*TruncatedNormal(0.042,0.021)]
            user info: "Access through trusted third party relationship exploits an existing connection that may not be protected or receives less scrutiny than standard mechanisms of gaining access to a network." 
            developer info: "Sources for distribution result: accenture.com/_acnmedia/PDF-116/Accenture-Cybersecurity-Report-2020.pdf, https://enterprise.verizon.com/resources/reports/DBIR_2018_Report_execsummary.pdf" 

        | attemptUseThirdpartySoftware @hidden //(0.70)]
            user info: "Adversaries may gain access to and use third-party application deployment systems installed within an enterprise network." 
            developer info: "Sources for distribution result: https://www.infoworld.com/article/2626167/third-party-code-putting-companies-at-risk.html, https://threatpost.com/third-party-applications-blame-87-percent-vulnerabilities-last-year-031513/77633/, https://www.helpnetsecurity.com/2018/11/20/third-party-risks/"

        & useThirdpartySoftware

        | collectVideo @hidden

        | applicationAccessToken
            developer info: "Binary probability distribution. Once stolen or gathered, token can be used instantly."
            user info: "Adversaries may use application access tokens to bypass the typical authentication process and access restricted accounts, information, or services on remote systems. These tokens are typically stolen from users and used in lieu of login credentials."

        | accessCloudBasedServiceResources

        | persistence

        | sensitiveDataCollected

        | cloudServiceInformationCollected

        | cloudAccount

        & cloudAccounts
            user info: "Adversaries may obtain and abuse credentials of a cloud account as a means of gaining Initial Access, Persistence, Privilege Escalation, or Defense Evasion."

        & cloudGroups
            user info: "Adversaries may attempt to find cloud groups and permission settings. The knowledge of cloud permission groups can help adversaries determine the particular roles of users and groups within an environment, as well as which users are associated with a particular group."

        & cloudInstanceMetadataAPI
            user info: "Adversaries may attempt to access the Cloud Instance Metadata API to collect credentials and other sensitive data."
 
        | cloudServiceDiscovery
            developer info: "Binary probability distribution, TTC assumed instant (few seconds) : https://www.etasr.com/index.php/ETASR/article/view/1577"
            user info: "An adversary may attempt to enumerate the cloud services running on a system after gaining access." 

        & cloudServiceDashboard //(1)]
            developer info: "Binary probability distribution (stolen credentials). TTC assumed arbitrarily based on findings from dataFromCloudStorageObject : Exploring a cloud service manually to find sensitive data would take some time"
            user info: "An adversary may use a cloud service dashboard GUI with stolen credentials to gain useful information from an operational cloud environment, such as specific services, resources, and features."

        & disableOrModifyCloudFirewall
            user info: "Adversaries may disable or modify a firewall within a cloud environment to bypass controls that limit access to cloud resources."

        | emailAccount
            user info: "Adversaries may attempt to get a listing of email addresses and accounts."

        | emailAddressCollected

        & additionalAzureServicePrincipalCredentials
            user info: "Adversaries may add adversary-controlled credentials for Azure Service Principals in addition to existing legitimate credentials to maintain persistent access to victim Azure accounts."         

        & exchangeEmailDelegatePermissions
            user info: "Adversaries may grant additional permission levels, such as ReadPermission or FullAccess, to maintain persistent access to an adversary-controlled email account."

        & addOffice365GlobalAdministratorRole
            user info: "An adversary may add the Global Administrator role to an adversary-controlled account to maintain persistent access to an Office 365 tenant."

        | modifyCloudComputeInfrastructure
            user info: "An adversary may attempt to modify a cloud account's compute service infrastructure to evade defenses."

        & createSnapshot
            user info: "An adversary may create a snapshot or data backup within a cloud account to evade defenses."

        & createCloudInstance
            user info: "An adversary may create a new instance or virtual machine (VM) within the compute service of a cloud account to evade defenses."

        & deleteCloudInstance
            user info: "An adversary may delete a cloud instance after they have performed malicious activities in an attempt to evade detection and remove evidence of their presence. An adversary may also Create Cloud Instance and later terminate the instance after achieving their objectives."

        | revertCloudInstance
            user info: "An adversary may revert changes made to a cloud instance after they have performed malicious activities in attempt to evade detection and remove evidence of their presence."

        & remoteEmailCollection //(0.892)*Exponential(35.19)]
            developer info: "Sources for distribution results: https://www.lifewire.com/what-is-the-average-size-of-an-email-message-1171208#:~:text=Email%20size%20is%20determined%20by%20much%20more%20than%20just%20the%20message&text=The%20average%20size%20of%20an,text%20or%20about%2037.5%20pages., https://www.litmus.com/blog/the-2017-email-client-market-share-infographic/, more in emailCollection.md"
            user info: "Adversaries may target an Exchange server or Office 365 to collect sensitive information."

        & emailForwardingRule //(0.00061)]
            developer info: "Sources for distribution results: https://www.textrequest.com/blog/how-many-emails-do-people-get-every-day/, more in emailCollection.md"
            user info: "Adversaries may setup email forwarding rules to collect sensitive information."

        | applicationExhaustionFlood //}
            user info: "Adversaries may target resource intensive features of web applications to cause a denial of service (DoS)." 
 
        | serviceExhaustionFlood //}
            user info: "Adversaries may target the different network services provided by systems to conduct a DoS."

        | applicationOrSystemExploitation //}
            user info: "Adversaries may exploit software vulnerabilities that can cause an application or system to crash and deny availability to users."

        & officeTemplateMacros
            user info: "Adversaries may abuse Microsoft Office templates to obtain persistence on a compromised system."

        & officeTest
            user info: "Adversaries may abuse the Microsoft Office Office Test Registry key to obtain persistence on a compromised system."

        & outlookForms
            user info: "Adversaries may abuse Microsoft Outlook forms to obtain persistence on a compromised system."

        & outlookHomePage
            user info: "Adversaries may abuse Microsoft Outlook's Home Page feature to obtain persistence on a compromised system."

        & outlookRules
            user info: "Adversaries may abuse Microsoft Outlook rules to obtain persistence on a compromised system."

        | addIns
            user info: "Adversaries may abuse Microsoft Office add-ins to obtain persistence on a compromised system."

        & stealApplicationAccessToken
            user info: "Adversaries may gain access to and use third-party application deployment systems installed within an enterprise network." 

        & applicationDeploymentSoftware
            user info: "Adversaries may deploy malicious software to systems within a network using application deployment systems employed by enterprise administrators."
            ->  os.executeCode

        | applicationHighVulnerability //(24)]
            developer info: "Sources for distribution results : https://cdn2.hubspot.net/hubfs/4595665/Acunetix_web_application_vulnerability_report_2019.pdf; https://www.ptsecurity.com/ww-en/analytics/web-vulnerabilities-2020/#:~:text=The%20average%20number%20of%20vulnerabilities,five%20vulnerabilities%20has%20high%20severity"              
            ->  exploitHighVulnerabilityPublicFacingApplication

        | applicationMediumVulnerability //(2)]
            developer info: "Sources for distribution results : https://cdn2.hubspot.net/hubfs/4595665/Acunetix_web_application_vulnerability_report_2019.pdf; https://www.ptsecurity.com/ww-en/analytics/web-vulnerabilities-2020/#:~:text=The%20average%20number%20of%20vulnerabilities,five%20vulnerabilities%20has%20high%20severity"              
            ->  exploitMediumVulnerabilityPublicFacingApplication

        | applicationLowVulnerability //(1)]
            developer info: "Sources for distribution results : https://cdn2.hubspot.net/hubfs/4595665/Acunetix_web_application_vulnerability_report_2019.pdf; https://www.ptsecurity.com/ww-en/analytics/web-vulnerabilities-2020/#:~:text=The%20average%20number%20of%20vulnerabilities,five%20vulnerabilities%20has%20high%20severity"              
            ->  exploitLowVulnerabilityPublicFacingApplication

        & exploitHighVulnerabilityPublicFacingApplication //(0.5)*Exponential(2)]
            user info: "The use of software, data, or commands to take advantage of a weakness in an Internet-facing computer system or program in order to cause unintended or unanticipated behavior."
            developer info: "Sources for distribution results : https://cdn2.hubspot.net/hubfs/4595665/Acunetix_web_application_vulnerability_report_2019.pdf; https://www.ptsecurity.com/ww-en/analytics/web-vulnerabilities-2020/#:~:text=The%20average%20number%20of%20vulnerabilities,five%20vulnerabilities%20has%20high%20severity"              
            ->  attemptExploitationForDefenseEvasion, // leads to exploitation for defense evasion attack
                os.systemAccess
                
        & exploitMediumVulnerabilityPublicFacingApplication //(0.87)*Exponential(0.5)]
            user info: "The use of software, data, or commands to take advantage of a weakness in an Internet-facing computer system or program in order to cause unintended or unanticipated behavior."
            developer info: "Sources for distribution results : https://cdn2.hubspot.net/hubfs/4595665/Acunetix_web_application_vulnerability_report_2019.pdf; https://www.ptsecurity.com/ww-en/analytics/web-vulnerabilities-2020/#:~:text=The%20average%20number%20of%20vulnerabilities,five%20vulnerabilities%20has%20high%20severity"              
            ->  attemptExploitationForDefenseEvasion, // leads to exploitation for defense evasion attack
                os.systemAccess
                
        & exploitLowVulnerabilityPublicFacingApplication //(0.89)*Exponential(0.143)]
            user info: "The use of software, data, or commands to take advantage of a weakness in an Internet-facing computer system or program in order to cause unintended or unanticipated behavior."
            developer info: "Sources for distribution results : https://cdn2.hubspot.net/hubfs/4595665/Acunetix_web_application_vulnerability_report_2019.pdf; https://www.ptsecurity.com/ww-en/analytics/web-vulnerabilities-2020/#:~:text=The%20average%20number%20of%20vulnerabilities,five%20vulnerabilities%20has%20high%20severity"              
            ->  attemptExploitationForDefenseEvasion, // leads to exploitation for defense evasion attack
                os.systemAccess
                
        | blockUserAccess  

        & implantContainerImage //(0.60)*Exponential(180)]
            user info: "Amazon Web Service (AWS) Amazon Machine Images (AMI), Google Cloud Platform (GCP) Images, and Azure Images as well as popular container runtimes such as Docker can be implanted or backdoored to include malicious code."
            developer info: "Sources for distribution result: https://www.eweek.com/security/five-security-defenses-every-containerized-application-needs, https://github.com/RhinoSecurityLabs/ccat, https://www.youtube.com/watch?v=12zEXfCxIrk&feature=youtu.be"
            ->  os.persistence

        | serviceInformation 

        | remoteServices //(0.04346)]
            developer info: "Sources used for distribution result: https://www.fireeye.com/current-threats/annual-threat-report/mtrends.html, https://www.crowdstrike.com/resources/reports/observations-from-the-front-lines-of-threat-hunting-2019/"
            user info: "An adversary may use Valid Accounts to log into a service specifically designed to accept remote connections."
            ->  os.vNC,
                os.attemptRemoteDesktopProtocol,
                os.attemptWindowsAdminShares,
                os.attemptDistributedComponentObjectModel,
                os.attemptWindowsRemoteManagement,
                os.sSH

        | remoteServiceSessionHijacking
            user info: "Adversaries may take control of preexisting sessions with remote services to move laterally in an environment."
            ->  os.sSHHijacking,
                os.rDPHijacking

        & transmittedDataManipulation //} //(24)]
            user info: "By manipulating transmitted data, adversaries may attempt to affect a business process, organizational understanding, and decision making."

        | informationRepositories
            ->  os.dataCollected,
                os.sensitiveDataCollected

        | remoteAccessSoftware //(0.0789)*Exponential(106.67)]
            developer info: "https://www.fireeye.com/current-threats/annual-threat-report/mtrends.html, https://www.crowdstrike.com/resources/reports/observations-from-the-front-lines-of-threat-hunting/, https://www.proofpoint.com/us/threat-insight/post/proofpoint-q3-2019-threat-report-emotets-return-rats-reign-supreme-and-more, https://www.youtube.com/watch?v=RzVtc9i3mzs, https://www.youtube.com/watch?v=om3OJWpZDGU"
            ->  os.computer.router.internalNetwork.c2Connexion

        | attemptSpearphishingViaService @hidden
            ->  spearphishingViaService

        & spearphishingViaService
            user info: "Adversaries send messages through various social media services, personal webmail, and other non-enterprise controlled services."
            ->  spearphishingViaPersonalEmail,
                spearphishingViaSocialMedia
        
        | spearphishingViaPersonalEmail //(0.712)*Exponential(1)]
            developer info: "Sources for distribution result: https://ieeexplore.ieee.org/abstract/document/5665797; https://www.sans.org/reading-room/whitepapers/analyst/endpoint-protection-response-survey-38460; https://www.businesswire.com/news/home/20100804005348/en/Cyveillance-Testing-Finds-AV-Vendors-Detect-Average; https://academic.oup.com/jcmc/article/20/1/83/4067561; https://www.blackhat.com/docs/us-16/materials/us-16-Seymour-Tully-Weaponizing-Data-Science-For-Social-Engineering-Automated-E2E-Spear-Phishing-On-Twitter-wp.pdf"
            ->  browser.attemptSpearphishingAttachment,
                browser.attemptSpearphishingLink
        
        | spearphishingViaSocialMedia //(0.4475)*Exponential(0.286)]
            developer info: "Sources for distribution result: https://ieeexplore.ieee.org/abstract/document/5665797; https://www.sans.org/reading-room/whitepapers/analyst/endpoint-protection-response-survey-38460; https://www.businesswire.com/news/home/20100804005348/en/Cyveillance-Testing-Finds-AV-Vendors-Detect-Average; https://academic.oup.com/jcmc/article/20/1/83/4067561; https://www.blackhat.com/docs/us-16/materials/us-16-Seymour-Tully-Weaponizing-Data-Science-For-Social-Engineering-Automated-E2E-Spear-Phishing-On-Twitter-wp.pdf"
            ->  browser.attemptSpearphishingAttachment,
                browser.attemptSpearphishingLink,
                os.bruteForce // https://www.us-cert.gov/ncas/alerts/TA18-086A

        | supplyChainCompromise //(0.70)*(Uniform(8,30)+TruncatedNormal(0.042,0.021))]
            developer info: "Sources for distribution result: https://savvyapps.com/blog/how-often-should-you-update-your-app#:~:text=Most%20successful%20apps%20release%201,updates%20with%20longer%20feature%20releases"
            user info: "Adversaries may manipulate products or product delivery mechanisms prior to receipt by a final consumer for the purpose of data or system compromise."
            ->  compromiseSoftwareDependenciesAndDevelopmentTools,
                compromiseSoftwareSupplyChain,
                compromiseHardwareSupplyChain

        & compromiseSoftwareDependenciesAndDevelopmentTools
            user info: "Adversaries may manipulate software dependencies and development tools prior to receipt by a final consumer for the purpose of data or system compromise."
            ->  os.compromisedDataOrSystem

        & compromiseSoftwareSupplyChain
            user info: "Adversaries may manipulate application software prior to receipt by a final consumer for the purpose of data or system compromise."
            ->  os.compromisedDataOrSystem

        & compromiseHardwareSupplyChain
            user info: "Adversaries may manipulate hardware components in products prior to receipt by a final consumer for the purpose of data or system compromise."
            ->  os.compromisedDataOrSystem

        | attemptExploitationForClientExecution @hidden
            ->  exploitationForClientExecution

        & exploitationForClientExecution
            developer info: "Binary probability distribution."
            user info: "Adversaries can take advantage of certain vulnerabilities through targeted exploitation for the purpose of arbitrary code execution."
            ->  os.computer.user.attemptUserExecution

        | attemptExploitationForCredentialAccess @hidden
            ->  exploitationForCredentialAccess

        & exploitationForCredentialAccess
            user info: "Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Exploitation for credential access may also result in Privilege Escalation depending on the process targeted or credentials obtained."
            ->  exploitationOfSQLInjection,
                exploitationOfNTLMAuthentication         

        | exploitationOfSQLInjection //(0.14)*Exponential(0.746)]   
            developer info: "Sources used for distribution result: https://cdn2.hubspot.net/hubfs/4595665/Acunetix_web_application_vulnerability_report_2019.pdf, https://www.akamai.com/us/en/multimedia/documents/state-of-the-internet/soti-security-web-attacks-and-gaming-abuse-report-2019.pdf, https://trends.builtwith.com/websitelist/Akamai/Historical, https://www.imperva.com/docs/HII_Web_Application_Attack_Report_Ed6.pdf, https://www.cc.gatech.edu/fac/Alex.Orso/papers/halfond.viegas.orso.ISSSE06.pdf"
            ->  os.executeCode,
                attemptExploitationForPrivilegeEscalation
                
        | exploitationOfNTLMAuthentication //(0.23346)*TruncatedNormal(0.011,0.00214)]
            developer info: "Sources used for distribution result: https://www.csoonline.com/article/3333916/i-can-get-and-crack-your-password-hashes-from-email.html, https://netmarketshare.com/operating-system-market-share.aspx?, https://resources.infosecinstitute.com/beyond-password-length-complexity/, https://spycloud.com/how-long-would-it-take-to-crack-your-password/, https://spycloud.com/2020-annual-credential-exposure-report/"
            ->  os.executeCode,
                attemptExploitationForPrivilegeEscalation

        | attemptExploitationForDefenseEvasion @hidden
            ->  exploitationForDefenseEvasion

        & exploitationForDefenseEvasion
            user info: "Adversaries may have prior knowledge through reconnaissance that security software exists within an environment or they may perform checks during or shortly after the system is compromised for Security Software Discovery."
            ->  os.bypassAntivirus,
                os.bypassSystemAccessControls

        | attemptExploitationForPrivilegeEscalation @hidden
            ->  exploitationForPrivilegeEscalation

        & exploitationForPrivilegeEscalation
            developer info: "Binary probability distribution."
            user info: "This could enable someone to move from unprivileged or user level permissions to SYSTEM or root permissions depending on the component that is vulnerable."
            ->  os.adminAccount.adminRights,
                attemptUseThirdpartySoftware

        | attemptExploitationOfRemoteServices @hidden
            user info: "An adversary may need to determine if the remote system is in a vulnerable state, which may be done through Network Service Scanning or other Discovery methods."
            ->  exploitationOfRemoteServices

        & exploitationOfRemoteServices
            ->  attemptExploitationForPrivilegeEscalation,
                os.computer.infectedComputer
                
        | attemptExternalRemoteServices @hidden 
            ->  externalRemoteServices

        & externalRemoteServices //(0.19)*Exponential(3)]
            user info: "Adversaries may use remote services to initially access and/or persist within a network."
            developer info: "Sources for distribution result: https://www.securitymetrics.com/blog/remote-access-attacks-how-protect-against-malware, https://cdn2.hubspot.net/hubfs/4595665/Acunetix_web_application_vulnerability_report_2019.pdf, https://securitybrief.com.au/story/15-000-companies-still-critically-vulnerable-from-citrix-security-flaws-report"
            ->  os.computer.router.internalNetwork.persistence,
                os.computer.router.internalNetwork.remoteAccess,
                os.attemptSystemFirmware,
                remoteServices, // https://us-cert.cisa.gov/ncas/alerts/aa20-107a
                attemptExploitationOfRemoteServices

        # audit 
            user info: "https://attack.mitre.org/mitigations/M1047/"
            ->  implantContainerImage

        # applicationIsolationAndSandboxing
            user info: "https://attack.mitre.org/mitigations/M1048/"
            ->  exploitationForClientExecution,
                exploitationForCredentialAccess,
                exploitationForDefenseEvasion,
                exploitationForPrivilegeEscalation,
                exploitationOfRemoteServices,
                exploitHighVulnerabilityPublicFacingApplication,
                exploitMediumVulnerabilityPublicFacingApplication,
                exploitLowVulnerabilityPublicFacingApplication

        # privilegedAccountManagement //(0.30)]
            developer info: "Sources for distribution results : https://lp.alpha-gen.co.uk/2018-global-state-of-pam/"
            user info: "https://attack.mitre.org/mitigations/M1026/"
            ->  implantContainerImage

        # disableOrRemoveFeatureOrProgram
            user info: "https://attack.mitre.org/techniques/T1064/"
            ->  exploitationOfRemoteServices,
                externalRemoteServices

        # encryptSensitiveInformation
            user info: "https://attack.mitre.org/mitigations/M1041/"
            ->  transmittedDataManipulation

        # executionPrevention
            user info: "https://attack.mitre.org/mitigations/M1038/"
            ->  remoteAccessSoftware

        # exploitProtection
            user info: "https://attack.mitre.org/mitigations/M1050/"
            ->  exploitationForClientExecution,
                exploitationForCredentialAccess,
                exploitationForDefenseEvasion,
                exploitationForPrivilegeEscalation,
                exploitationOfRemoteServices,
                exploitHighVulnerabilityPublicFacingApplication,
                exploitMediumVulnerabilityPublicFacingApplication,
                exploitLowVulnerabilityPublicFacingApplication

        # networkSegmentation // Properly configure firewalls and proxies to limit outgoing traffic to only necessary ports for that particular network segment.
            user info: "https://attack.mitre.org/mitigations/M1030/"
            ->  exploitationOfRemoteServices,
                exploitHighVulnerabilityPublicFacingApplication,
                exploitMediumVulnerabilityPublicFacingApplication,
                exploitLowVulnerabilityPublicFacingApplication,
                externalRemoteServices

        # threatIntelligenceProgram
            user info: "https://attack.mitre.org/mitigations/M1019/"
            ->  exploitationForCredentialAccess,
                exploitationForPrivilegeEscalation,
                exploitationForDefenseEvasion,
                exploitationOfRemoteServices  

        # passwordPolicies 
            user info: "https://attack.mitre.org/mitigations/M1027/" 

        # updateSoftware //(0.567125)]
            developer info: "Sources for distribution result: https://www.usenix.org/system/files/conference/soups2015/soups15-paper-ion.pdf, https://www.computerweekly.com/news/252462476/Most-businesses-vulnerable-to-supply-chain-cyber-attacks#:~:text=Seven%20in%2010%20businesses%20may,to%20research%20commissioned%20by%20Accenture, https://www.bitsight.com/press-releases/thousands-organizations-run-majority-of-computers-onoutdated-operating-systems, https://cdn2.hubspot.net/hubfs/486579/Avast_PC_Trends_Report_2019.pdf, https://netmarketshare.com/operating-system-market-share.aspx?, https://gs.statcounter.com/windows-version-market-share/desktop/worldwide/#monthly-201906-202006, https://www.darkreading.com/mobile/more-than-half-of-android-devices-run-outdated-browsers/d/d-id/1327483, https://www.pcworld.com/article/2013737/out-of-date-vulnerable-browsers-put-users-at-risk.html"
            user info: "https://attack.mitre.org/mitigations/M1051/"
            ->  applicationDeploymentSoftware,
                compromiseSoftwareDependenciesAndDevelopmentTools,
                compromiseSoftwareSupplyChain,
                exploitationForCredentialAccess,
                exploitationForDefenseEvasion,
                exploitationForPrivilegeEscalation,
                exploitationOfRemoteServices,
                exploitHighVulnerabilityPublicFacingApplication,
                exploitLowVulnerabilityPublicFacingApplication,
                exploitMediumVulnerabilityPublicFacingApplication,
                os.computer.router.internalNetwork.remoteAccess

        # softwareConfiguration
            user info: "https://attack.mitre.org/mitigations/M1054/"

        # activeDirectoryConfiguration
            user info: "https://attack.mitre.org/mitigations/M1015/"

        # vulnerabilityScanning //(0.653)]
            user info: "https://attack.mitre.org/mitigations/M1016/"
            developer info: "Sources for distribution result : https://static.tenable.com/marketing/research-reports/Research-Report-Ponemon-Institute-Measuring_and_Managing_the_Cyber_Risks_to_Business_Operations.pdf, https://www.scmagazineuk.com/one-fourth-global-organisations-faced-breaches-unpatched-vulnerabilities/article/1586349#:~:text=Vulnerability%20management%20starts%20with%20visibility,networks%20within%20minutes%20or%20hours., https://www.zdnet.com/article/zero-days-fileless-attacks-are-now-the-most-dangerous-threats-to-the-enterprise/, https://liu.diva-portal.org/smash/get/diva2:1348588/FULLTEXT01.pdf, https://pdfs.semanticscholar.org/775d/ed35d7940b94b5bc01d568d472e59fd24775.pdf, "
            ->  compromiseSoftwareDependenciesAndDevelopmentTools,
                compromiseSoftwareSupplyChain,
                exploitHighVulnerabilityPublicFacingApplication,
                exploitMediumVulnerabilityPublicFacingApplication,
                exploitLowVulnerabilityPublicFacingApplication,
                exploitationOfRemoteServices

        # multiFactorAuthentication //(0.99325)]
            developer info: "Sources for distribution result: https://security.googleblog.com/2019/05/new-research-how-effective-is-basic.html, https://www.zdnet.com/article/microsoft-using-multi-factor-authentication-blocks-99-9-of-account-hacks/"
            ->  applicationDeploymentSoftware,
                remoteServices,
                cloudAccount,
                additionalAzureServicePrincipalCredentials
    }

    asset ThirdpartySoftware extends Service {  
        | attemptTrustedRelationship @hidden
            +>  trustedRelationship

        & trustedRelationship //(0.40)*TruncatedNormal(0.042,0.021)]
            user info: "Access through trusted third party relationship exploits an existing connection that may not be protected or receives less scrutiny than standard mechanisms of gaining access to a network." 
            developer info: "Sources for distribution result: accenture.com/_acnmedia/PDF-116/Accenture-Cybersecurity-Report-2020.pdf, https://enterprise.verizon.com/resources/reports/DBIR_2018_Report_execsummary.pdf" 
            +>  os.validAccounts // Valid Accounts used by the other party for access to internal network systems may be compromised

        | attemptUseThirdpartySoftware @hidden //(0.70)]
            user info: "Adversaries may gain access to and use third-party application deployment systems installed within an enterprise network." 
            developer info: "Sources for distribution result: https://www.infoworld.com/article/2626167/third-party-code-putting-companies-at-risk.html, https://threatpost.com/third-party-applications-blame-87-percent-vulnerabilities-last-year-031513/77633/, https://www.helpnetsecurity.com/2018/11/20/third-party-risks/"
            +>  useThirdpartySoftware

        & useThirdpartySoftware
            +>  os.executeCode 

        # updateSoftware //(0.567125)]
            developer info: "Sources for distribution result: https://www.usenix.org/system/files/conference/soups2015/soups15-paper-ion.pdf, https://www.computerweekly.com/news/252462476/Most-businesses-vulnerable-to-supply-chain-cyber-attacks#:~:text=Seven%20in%2010%20businesses%20may,to%20research%20commissioned%20by%20Accenture, https://www.bitsight.com/press-releases/thousands-organizations-run-majority-of-computers-onoutdated-operating-systems, https://cdn2.hubspot.net/hubfs/486579/Avast_PC_Trends_Report_2019.pdf, https://netmarketshare.com/operating-system-market-share.aspx?, https://gs.statcounter.com/windows-version-market-share/desktop/worldwide/#monthly-201906-202006, https://www.darkreading.com/mobile/more-than-half-of-android-devices-run-outdated-browsers/d/d-id/1327483, https://www.pcworld.com/article/2013737/out-of-date-vulnerable-browsers-put-users-at-risk.html"
            user info: "https://attack.mitre.org/mitigations/M1051/"
            +>  useThirdpartySoftware

        # multiFactorAuthentication //(0.99325)]
            developer info: "Sources for distribution result: https://security.googleblog.com/2019/05/new-research-how-effective-is-basic.html, https://www.zdnet.com/article/microsoft-using-multi-factor-authentication-blocks-99-9-of-account-hacks/"
            +>  useThirdpartySoftware

        # passwordPolicies 
            user info: "https://attack.mitre.org/mitigations/M1027/" 
            +>  useThirdpartySoftware

        # activeDirectoryConfiguration
            user info: "https://attack.mitre.org/mitigations/M1015/"
            +>  useThirdpartySoftware

        # networkSegmentation // Properly configure firewalls and proxies to limit outgoing traffic to only necessary ports for that particular network segment.
            user info: "https://attack.mitre.org/mitigations/M1030/"
            +>  trustedRelationship,
                useThirdpartySoftware
    }

    asset VideoCallApplication extends Service { 
        | collectVideo @hidden
            +>  os.computer.collectVideo
    }

    asset CloudService extends Service {
        | applicationAccessToken
            developer info: "Binary probability distribution. Once stolen or gathered, token can be used instantly."
            user info: "Adversaries may use application access tokens to bypass the typical authentication process and access restricted accounts, information, or services on remote systems. These tokens are typically stolen from users and used in lieu of login credentials."
            +>  accessCloudBasedServiceResources

        | accessCloudBasedServiceResources

        & stealApplicationAccessToken
            user info: "Adversaries may gain access to and use third-party application deployment systems installed within an enterprise network." 
            +>  browser.spearphishingLink, //  send a link through Spearphishing Link to the target user to entice them to grant access to the application
                applicationAccessToken

        | persistence

        | sensitiveDataCollected

        | cloudServiceInformationCollected

        | cloudAccount
            user info: "Adversaries may attempt to get a listing of cloud accounts."
            +>  os.persistence

        & cloudAccounts
            user info: "Adversaries may obtain and abuse credentials of a cloud account as a means of gaining Initial Access, Persistence, Privilege Escalation, or Defense Evasion."
            +>  attemptTrustedRelationship,
                remoteServices,
                attemptExternalRemoteServices, // https://us-cert.cisa.gov/ncas/alerts/aa20-107a
                os.computer.router.internalNetwork.bypassNetworkIntrusionDetection,
                os.computer.router.firewall.bypassFirewall,
                os.bypassHostIntrusionPrevention,
                os.bypassApplicationControl,
                os.bypassSystemAccessControls,
                os.bypassAntivirus

        & cloudGroups
            user info: "Adversaries may attempt to find cloud groups and permission settings. The knowledge of cloud permission groups can help adversaries determine the particular roles of users and groups within an environment, as well as which users are associated with a particular group."

        & cloudInstanceMetadataAPI
            user info: "Adversaries may attempt to access the Cloud Instance Metadata API to collect credentials and other sensitive data."
            +>  sensitiveDataCollected

        | cloudServiceDiscovery
            developer info: "Binary probability distribution, TTC assumed instant (few seconds) : https://www.etasr.com/index.php/ETASR/article/view/1577"
            user info: "An adversary may attempt to enumerate the cloud services running on a system after gaining access." 
            +>  cloudServiceInformationCollected

        & cloudServiceDashboard //(1)]
            developer info: "Binary probability distribution (stolen credentials). TTC assumed arbitrarily based on findings from dataFromCloudStorageObject : Exploring a cloud service manually to find sensitive data would take some time"
            user info: "An adversary may use a cloud service dashboard GUI with stolen credentials to gain useful information from an operational cloud environment, such as specific services, resources, and features."
            +>  cloudServiceInformationCollected
   
        & disableOrModifyCloudFirewall
            user info: "Adversaries may disable or modify a firewall within a cloud environment to bypass controls that limit access to cloud resources."
            +>  os.computer.router.internalNetwork.c2Connected // modifying or disabling a cloud firewall may enable adversary C2 communications

        | emailAccount
            user info: "Adversaries may attempt to get a listing of email addresses and accounts."
            +>  emailAddressCollected

        | emailAddressCollected

        & additionalAzureServicePrincipalCredentials
            user info: "Adversaries may add adversary-controlled credentials for Azure Service Principals in addition to existing legitimate credentials to maintain persistent access to victim Azure accounts."         
            +>  persistence

        & exchangeEmailDelegatePermissions
            user info: "Adversaries may grant additional permission levels, such as ReadPermission or FullAccess, to maintain persistent access to an adversary-controlled email account."
            +>  os.internalSpearphishing

        & addOffice365GlobalAdministratorRole
            user info: "An adversary may add the Global Administrator role to an adversary-controlled account to maintain persistent access to an Office 365 tenant."
            +>  os.adminAccount.attemptCreateAccount

        | modifyCloudComputeInfrastructure
            user info: "An adversary may attempt to modify a cloud account's compute service infrastructure to evade defenses."
            +>  createSnapshot,
                createCloudInstance,
                deleteCloudInstance,
                revertCloudInstance

        & createSnapshot
            user info: "An adversary may create a snapshot or data backup within a cloud account to evade defenses."
            +>  os.computer.router.externalNetwork.bypassNetworkIntrusionDetection,
                os.computer.router.internalNetwork.bypassNetworkIntrusionDetection

        & createCloudInstance
            user info: "An adversary may create a new instance or virtual machine (VM) within the compute service of a cloud account to evade defenses."
            +>  os.dataFromLocalSystem,
                os.remoteDataStaging,
                deleteCloudInstance,
                os.computer.router.firewall.bypassFirewall

        & deleteCloudInstance
            user info: "An adversary may delete a cloud instance after they have performed malicious activities in an attempt to evade detection and remove evidence of their presence. An adversary may also Create Cloud Instance and later terminate the instance after achieving their objectives."
            +>  os.computer.router.externalNetwork.bypassNetworkIntrusionDetection,
                os.computer.router.internalNetwork.bypassNetworkIntrusionDetection

        | revertCloudInstance
            user info: "An adversary may revert changes made to a cloud instance after they have performed malicious activities in attempt to evade detection and remove evidence of their presence."
            +>  os.computer.router.externalNetwork.bypassNetworkIntrusionDetection,
                os.computer.router.internalNetwork.bypassNetworkIntrusionDetection

        & remoteEmailCollection //(0.892)*Exponential(35.19)]
            developer info: "Sources for distribution results: https://www.lifewire.com/what-is-the-average-size-of-an-email-message-1171208#:~:text=Email%20size%20is%20determined%20by%20much%20more%20than%20just%20the%20message&text=The%20average%20size%20of%20an,text%20or%20about%2037.5%20pages., https://www.litmus.com/blog/the-2017-email-client-market-share-infographic/, more in emailCollection.md"
            user info: "Adversaries may target an Exchange server or Office 365 to collect sensitive information."
            +>  os.attemptRemoteDesktopProtocol, // https://www.us-cert.gov/ncas/alerts/TA18-086A
                sensitiveDataCollected

        & emailForwardingRule //(0.00061)]
            developer info: "Sources for distribution results: https://www.textrequest.com/blog/how-many-emails-do-people-get-every-day/, more in emailCollection.md"
            user info: "Adversaries may setup email forwarding rules to collect sensitive information."
            +>  sensitiveDataCollected

        | applicationExhaustionFlood //}
            user info: "Adversaries may target resource intensive features of web applications to cause a denial of service (DoS)." 
            +>  blockUserAccess

        | serviceExhaustionFlood //}
            user info: "Adversaries may target the different network services provided by systems to conduct a DoS."
            +>  os.attemptServiceStop

        | applicationOrSystemExploitation //}
            user info: "Adversaries may exploit software vulnerabilities that can cause an application or system to crash and deny availability to users."

        & officeTemplateMacros
            user info: "Adversaries may abuse Microsoft Office templates to obtain persistence on a compromised system."
            +>  os.persistence

        & officeTest
            user info: "Adversaries may abuse the Microsoft Office Office Test Registry key to obtain persistence on a compromised system."
            +>  os.persistence

        & outlookForms
            user info: "Adversaries may abuse Microsoft Outlook forms to obtain persistence on a compromised system."
            +>  os.persistence

        & outlookHomePage
            user info: "Adversaries may abuse Microsoft Outlook's Home Page feature to obtain persistence on a compromised system."
            +>  os.persistence

        & outlookRules
            user info: "Adversaries may abuse Microsoft Outlook rules to obtain persistence on a compromised system."
            +>  os.persistence

        | addIns
            user info: "Adversaries may abuse Microsoft Office add-ins to obtain persistence on a compromised system."
            +>  os.persistence

        # disableOrRemoveFeatureOrProgram
            user info: "https://attack.mitre.org/mitigations/M1042/"
            +>  officeTemplateMacros

        # softwareConfiguration
            user info: "https://attack.mitre.org/mitigations/M1054/"
            +>  officeTest

        # updateSoftware //(0.567125)]
            developer info: "Sources for distribution result: https://www.usenix.org/system/files/conference/soups2015/soups15-paper-ion.pdf, https://www.computerweekly.com/news/252462476/Most-businesses-vulnerable-to-supply-chain-cyber-attacks#:~:text=Seven%20in%2010%20businesses%20may,to%20research%20commissioned%20by%20Accenture, https://www.bitsight.com/press-releases/thousands-organizations-run-majority-of-computers-onoutdated-operating-systems, https://cdn2.hubspot.net/hubfs/486579/Avast_PC_Trends_Report_2019.pdf, https://netmarketshare.com/operating-system-market-share.aspx?, https://gs.statcounter.com/windows-version-market-share/desktop/worldwide/#monthly-201906-202006, https://www.darkreading.com/mobile/more-than-half-of-android-devices-run-outdated-browsers/d/d-id/1327483, https://www.pcworld.com/article/2013737/out-of-date-vulnerable-browsers-put-users-at-risk.html"
            user info: "https://attack.mitre.org/mitigations/M1051/"
            +>  outlookForms,
                outlookHomePage,
                outlookRules

        # privilegedAccountManagement //(0.30)]
            developer info: "Sources for distribution results : https://lp.alpha-gen.co.uk/2018-global-state-of-pam/"
            user info: "https://attack.mitre.org/mitigations/M1026/"
            +>  additionalAzureServicePrincipalCredentials,
                cloudAccounts,
                exchangeEmailDelegatePermissions,
                addOffice365GlobalAdministratorRole

        # multiFactorAuthentication //(0.99325)]
            developer info: "Sources for distribution result: https://security.googleblog.com/2019/05/new-research-how-effective-is-basic.html, https://www.zdnet.com/article/microsoft-using-multi-factor-authentication-blocks-99-9-of-account-hacks/"
            +>  remoteEmailCollection,
                exchangeEmailDelegatePermissions,
                addOffice365GlobalAdministratorRole

        # networkSegmentation // Properly configure firewalls and proxies to limit outgoing traffic to only necessary ports for that particular network segment.
            user info: "https://attack.mitre.org/mitigations/M1030/"
            +>  cloudAccount,
                additionalAzureServicePrincipalCredentials

        # audit 
            user info: "https://attack.mitre.org/mitigations/M1047/"
            +>  remoteEmailCollection,
                createSnapshot,
                createCloudInstance,
                deleteCloudInstance,
                disableOrModifyCloudFirewall,
                stealApplicationAccessToken

        # passwordPolicies
            user info: "https://attack.mitre.org/mitigations/M1027/" 
            +>  cloudAccounts
    }

    asset Browser {
        & driveByCompromise //(0.37)]
            user info: "A drive-by compromise is when an adversary gains access to a system through a user visiting a website over the normal course of browsing." 
            developer info: "Sources for distribution result: https://ieeexplore.ieee.org/abstract/document/6657123"
            ->  malvertising,
                crossSiteScripting,
                service.os.computer.user.attemptUserExecution,
                service.attemptExploitationForClientExecution,
                service.os.attemptGatekeeperBypass


        | malvertising //(9,0.167)]
            developer info: "Sources for distribution result: https://www.adstage.io/resources/q1-2020-ppc-benchmark-report/; https://www.youtube.com/watch?v=rTg9l4d8MU4; https://www.facebook.com/business/help/204798856225114?id=649869995454285"
            ->  service.stealApplicationAccessToken

        | crossSiteScripting //(0.32)*Exponential(1)]
            developer info: "Sources for distribution result: https://books.google.fr/books?id=biGsBwAAQBAJ&pg=PA104&lpg=PA104&dq=forum+posts,+comments+compromise+browser+malware&source=bl&ots=rzJQ6XY73h&sig=ACfU3U2wC6Muu7MfakP6MHJLk7IXJ76C0A&hl=fr&sa=X&ved=2ahUKEwiomdS20dbpAhV65OAKHaD4Dz8Q6AEwAHoECAoQAQ#v=onepage&q=forum%20posts%2C%20comments%20compromise%20browser%20malware&f=false; http://www.ijiser.com/paper/2017/vol4issue8/Aug2017p101.1.pdf; https://www.acunetix.com/acunetix-web-application-vulnerability-report-2019/#xss"
            ->  service.stealApplicationAccessToken

        & credentialsFromWebBrowsers //(0.625)]
            user info: "Adversaries may acquire credentials from web browsers by reading files specific to the target browser."
            developer info: "Sources for distribution result: https://link.springer.com/book/10.1007/978-3-319-94376-3, https://attack.mitre.org/techniques/T1503/, https://www.proofpoint.com/us/threat-insight/post/new-vega-stealer-shines-brightly-targeted-campaign"
            ->  service.os.userAccount.userCredentials
 
        | phishing
            user info: "Adversaries may send phishing messages to elicit sensitive information and/or gain access to victim systems."
            ->  attemptSpearphishingAttachment,
                attemptSpearphishingLink,
                service.attemptSpearphishingViaService

        | attemptSpearphishingLink @hidden      
            ->  spearphishingLink

        & spearphishingLink
            user info: "The links will be accompanied by social engineering text and require the user to actively click or copy and paste a URL into a browser, leveraging User Execution."
            ->  service.os.computer.user.attemptMaliciousLink
            
        | attemptSpearphishingAttachment @hidden      
            ->  spearphishingAttachment
      
        & spearphishingAttachment
            user info: "Spearphishing attachment is a specific variant of spearphishing. Spearphishing attachment is different from other forms of spearphishing in that it employs the use of malware attached to an email." 
            ->  service.os.computer.user.attemptMaliciousFile,
                service.os.attemptControlPanel // malicious Control Panel items can be delivered via Spearphishing Attachment campaigns

        | browserBookmarkDiscovery //(0.03065)*Exponential(4)]
            user info: "Adversaries may enumerate browser bookmarks to learn more about compromised hosts. Browser bookmarks may reveal personal information about users (ex: banking sites, interests, social media, etc.) as well as details about internal network resources such as servers, tools/dashboards, or other related infrastructure."
            developer info: " Sources for distribution result: https://attack.mitre.org/software/S0274/, https://securelist.com/calisto-trojan-for-macos/86543/, https://en.wikipedia.org/wiki/System_Integrity_Protection, https://gs.statcounter.com/macos-version-market-share/desktop/worldwide/#monthly-201906-202006, https://www.statista.com/statistics/944559/worldwide-macos-version-market-share/, https://netmarketshare.com/operating-system-market-share.aspx?, https://www.welivesecurity.com/wp-content/uploads/2019/08/ESET_Machete.pdf, https://attack.mitre.org/software/"
            ->  service.os.userAccount.userInformation,
                service.os.computer.router.internalNetwork.internalNetworkResourcesInformation

        | installExtensions
            ->  browserExtensions

        & browserExtensions //(0.85)]
            user info: "Once the extension is installed, it can browse to websites in the background, steal all information that a user enters into a browser, to include credentials, and be used as an installer for a RAT for persistence." 
            developer info: "Source used for distribution result: https://www.google.com/url?sa=t&rct=j&q=&esrc=s&source=web&cd=&cad=rja&uact=8&ved=2ahUKEwjQuta00ojqAhVGUZoKHT9YAygQFjAAegQIARAB&url=http%3A%2F%2Fmkto.cisco.com%2Frs%2F564-whv-323%2Fimages%2Fcisco-asr-2016.pdf&usg=AOvVaw1nLayTNlhdlV3tF_LfCxLf (Cisco 2016 Annual Security Report)"
            ->  service.os.userAccount.userInformation,
                service.os.userAccount.userCredentials,
                service.os.persistence

        & stealWebSessionCookie
            user info: "An adversary may steal web application or service session cookies and use them to gain access web applications or Internet services as an authenticated user without needing credentials."
            ->  attemptWebSessionCookie // after an adversary acquires a valid cookie, they can then perform a Web Session Cookie technique to login to the corresponding web application

        | attemptWebSessionCookie @hidden
            ->  webSessionCookie

        & webSessionCookie
            user info: "Adversaries can use stolen session cookies to authenticate to web applications and services. This technique bypasses some multi-factor authentication protocols since the session is already authenticated."
            ->  service.os.sensitiveDataCollected

        # updateSoftware //(0.567125)]
            developer info: "Sources for distribution result: https://www.usenix.org/system/files/conference/soups2015/soups15-paper-ion.pdf, https://www.computerweekly.com/news/252462476/Most-businesses-vulnerable-to-supply-chain-cyber-attacks#:~:text=Seven%20in%2010%20businesses%20may,to%20research%20commissioned%20by%20Accenture, https://www.bitsight.com/press-releases/thousands-organizations-run-majority-of-computers-onoutdated-operating-systems, https://cdn2.hubspot.net/hubfs/486579/Avast_PC_Trends_Report_2019.pdf, https://netmarketshare.com/operating-system-market-share.aspx?, https://gs.statcounter.com/windows-version-market-share/desktop/worldwide/#monthly-201906-202006, https://www.darkreading.com/mobile/more-than-half-of-android-devices-run-outdated-browsers/d/d-id/1327483, https://www.pcworld.com/article/2013737/out-of-date-vulnerable-browsers-put-users-at-risk.html"
            user info: "https://attack.mitre.org/mitigations/M1051/"
            ->  driveByCompromise

        # exploitProtection
            user info: "https://attack.mitre.org/mitigations/M1050/"
            ->  driveByCompromise

        # audit 
            user info: "https://attack.mitre.org/mitigations/M1047/"
            ->  browserExtensions

        # passwordPolicies 
            user info: "https://attack.mitre.org/mitigations/M1027/" 
            ->  credentialsFromWebBrowsers

        # multiFactorAuthentication //(0.99325)]
            developer info: "Sources for distribution result: https://security.googleblog.com/2019/05/new-research-how-effective-is-basic.html, https://www.zdnet.com/article/microsoft-using-multi-factor-authentication-blocks-99-9-of-account-hacks/"
            ->  stealWebSessionCookie
                
        # restrictWebBasedContent //(0.3)] // Block unknown or unused attachments by default that should not be transmitted over email.
            developer info: "Sources for distribution result: https://community.spiceworks.com/blog/3073-data-snapshot-how-web-filtering-affects-workplace-security-and-productivity, https://www.internetsociety.org/resources/doc/2017/internet-content-blocking/, https://www.phishingbox.com/resources/phishing-facts, https://www.darkreading.com/vulnerabilities---threats/social-media-platforms-double-as-major-malware-distribution-centers/d/d-id/1333973"
            user info: "https://attack.mitre.org/mitigations/M1021/"
            ->  spearphishingAttachment, 
                spearphishingLink,
                service.spearphishingViaService,
                driveByCompromise,
                service.os.commandAndScriptingInterpreter,
                service.os.domainGenerationAlgorithms,
                service.os.compiledHTMLFile,
                service.os.userAccount.userExecution,
                service.os.computer.user.maliciousLink,
                service.os.computer.router.externalNetwork.bidirectionaCommunication,
                service.os.computer.router.externalNetwork.deadDropResolver,
                service.os.computer.router.externalNetwork.oneWayCommunication,
                service.os.computer.router.externalNetwork.exfiltrationOverWebService
    }

    asset OS {
        | attemptBITSJobs @hidden

        | attemptAppCertDLLs @hidden

        & appCertDLLs
            developer info: "Binaries probability distribution. Source for distribution results : Process Injection result and https://www.elastic.co/fr/blog/ten-process-injection-techniques-technical-survey-common-and-trending-process"
            user info: "This value can be abused to obtain persistence and privilege escalation by causing a malicious DLL to be loaded and run in the context of separate processes on the computer."

        & bypassUserAccessControl //(0.277)]
            developer info: "TTC assumed instant. Sources for probability distribution: https://attack.mitre.org/software/S0129/, https://www.forcepoint.com/sites/default/files/resources/files/forcepoint-security-labs-monsoon-analysis-report.pdf, https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2014-6352, https://gs.statcounter.com/os-version-market-share/windows/desktop/worldwide, https://netmarketshare.com/operating-system-market-share.aspx, https://www.eset.com/afr/about/newsroom/press-releases-afr/research/dissection-of-sednit-espionage-group-1/, https://github.com/hfiref0x/UACME"

        | changeDefaultFileAssociation
            user info: "Adversaries may establish persistence by executing malicious content triggered by a file type association."

        | attemptGatekeeperBypass @hidden

        & gatekeeperBypass
            developer info: "Binary probability distribution."
            user info: "Apps loaded onto the system from USB flash drive, optical disk, external hard drive, or even from a drive shared over the local network won't set this flag. Additionally, other utilities or events like drive-by downloads don't necessarily set it either. This completely bypasses the built-in Gatekeeper check."

        & cmstp
            user info: "Adversaries may abuse CMSTP to proxy execution of malicious code."
            developer info: "Binary probability distribution."
            
        & compiledHTMLFile //(0.93)*Exponential(1)]
            user info: "Adversaries may abuse this technology to conceal malicious code, can be triggered by User Execution."
            developer info: "Sources for distribution results : https://blog.rootshell.be/2017/12/19/malware-delivered-via-compiled-html-help-file/"
            
        & cOR_PROFILER
            user info: "Adversaries may leverage the COR_PROFILER environment variable to hijack the execution flow of programs that load the .NET CLR."

        | componentObjectModelHijacking
            user info: "Adversaries can use Component Object Model (COM) system to insert malicious code that can be executed. When that system component is executed through normal system operation the adversary's code will be executed instead."
            
        & controlPanel //(0.00006)]
            user info: "Adversaries may abuse control.exe to proxy execution of malicious payloads."
            developer info: "TTC assumed instant, see mitreattacklang/enterpriselang probabilities/controlPanelItems.md for details. Sources used for probability distribution result: https://attack.mitre.org/software/S0172/, https://threatvector.cylance.com/en_us/home/reaver-mapping-connections-between-disparate-chinese-apt-groups.html, https://nvd.nist.gov/vuln/detail/CVE-2017-11882#vulnConfigurationsArea, https://unit42.paloaltonetworks.com/unit42-new-malware-with-ties-to-sunorcal-discovered/, https://community.spiceworks.com/software/articles/2873-data-snapshot-the-state-of-productivity-suites-in-the-workplace"
            
        & credentialsInRegistry //(0.02055)*Exponential(2618)]
            developer info: "Sources for distribution result: https://www.fireeye.com/current-threats/annual-threat-report/mtrends.html, https://www.crowdstrike.com/resources/reports/observations-from-the-front-lines-of-threat-hunting-2019/, https://attack.mitre.org/techniques/T1552/002/"
            
        | deobfuscateOrDecodeFilesOrInformation

        & dLLSearchOrderHijacking //(0.16)]
            user info: "Adversaries may take advantage of the Windows DLL search order and programs that ambiguously specify DLLs to gain privilege escalation and persistence."
            developer info: "TTC is extremely low (< 0.00001 seconds) and is excluded. Sources used for probability distribution: https://redcanary.com/threat-detection-report/techniques/dll-search-order-hijacking/. Sources for TTC (not used): http://blog.nsfocus.net/dridex-banking-malware-sample-technical-analysis-solution/, https://threatresearch.ext.hp.com/dridex-threat-analysis-july-2019-variant/"
            
        & domainTrustDiscovery //(0.13)*Exponential(127.1)]
            developer info: "Sources used for probability distribution: https://redcanary.com/threat-detection-report/techniques/domain-trust-discovery/, https://labs.sentinelone.com/trickbot-update-brief-analysis-of-a-recent-trickbot-payload/, https://www.wilbursecurity.com/2020/03/trickbot-to-ryuk-in-two-hours/, https://www.trustwave.com/en-us/resources/blogs/spiderlabs-blog/tale-of-the-two-payloads-trickbot-and-nitol/"
            
        & dynamicDataExchange //(0.93)*Exponential(1)]
            developer info: "Sources for distribution results : https://www.fortinet.com/blog/threat-research/cybercriminals-exploiting-microsoft-s-vulnerable-dynamic-data-exchange-protocol"
            user info: "Windows Dynamic Data Exchange (DDE) is a client-server protocol for one-time and/or continuous inter-process communication (IPC) between applications."
            
        & mshta //(0.3329)*Exponential(491)]
            user info: "Mshta is a utility that executes Microsoft HTML Applications. It can be used to proxy execute malicious .hta files, and can also be used to bypass application whitelisting."
            developer info: "Sources used for distribution: https://lolbas-project.github.io/lolbas/Binaries/Mshta/, https://netmarketshare.com/operating-system-market-share.aspx?, https://redcanary.com/blog/microsoft-html-application-hta-abuse-part-deux/"

        & windowsRemoteManagement
            developer info: "Binary probability distribution. Use of Valid Acounts"
            user info: "WinRM allows a user to interact with a remote system."

        & _etc_passwdAND_etc_shadow
            user info: "Adversaries may attempt to dump the contents of /etc/passwd and /etc/shadow to enable offline password cracking."

        & accessibilityFeatures
            user info: "This helps attackers to open a System-level command shell, where the attackers can execute arbitrary Windows commands, including adding or modifying accounts on the system."
            developer info: "Binary probability distribution."

        & appInitDLLs //(0.79)*Exponential(127.1)]
            developer info: "Sources for distribution results: Work on processInjection and https://www.spiceworks.com/marketing/network-security/pdf-report/"

        & applicationShimming
            developer info:"Binary probability distribution. Sources for distribution results : Process Injection findings and https://www.elastic.co/fr/blog/ten-process-injection-techniques-technical-survey-common-and-trending-process"
            user info: "Utilizing these shims may allow an adversary to perform several malicious acts such as elevate privileges, install backdoors, disable defenses like Windows Defender, etc."

        & at
            user info: "Adversaries may abuse the at.exe utility to perform task scheduling for initial or recurring execution of malicious code."

        | attemptBootkit @hidden

        | attemptElevatedExecutionWithPrompt @hidden

        | attemptLSASSDriver @hidden 

        | attemptLSASSMemory @hidden

        | attemptPasswordFilterDLL @hidden

        | attemptServiceExecution @hidden

        | attemptServiceRegistryPermissionsWeakness @hidden

        | attemptServicesFilePermissionsWeakness @hidden

        | attemptSIDHistoryInjection @hidden
            user info: "Adversaries may use SID mechanism for privilege escalation. This manipulation may result in elevated access to local resources and/or access to otherwise inaccessible domains via lateral movement techniques such as Remote Services, Windows Admin Shares, or Windows Remote Management."

        | attemptSIPAndTrustProviderHijacking @hidden

        | attemptSQLStoredProcedures @hidden

        | attemptStartupItems @hidden

        | attemptSystemFirmware @hidden

        | attemptTimeProviders @hidden

        | attemptTransportAgent @hidden

        | attemptWinlogonHelperDLL @hidden

        | attemptWindowsRemoteManagement @hidden

        & winlogonHelperDLL
            user info: "Adversaries may take advantage of these features to repeatedly execute malicious code and establish Persistence."

        & authenticationPackage
            developer info: "Binary probability distribution"
            user info: "Adversaries can use Windows Authentication Packages for persistence for persistence."

        & bootkit //(0.46)]
            developer info: "TTC assumed instant, see Dropbox/enterpriselang probability findings/bootkit.md for more info. sources used for distribution result: https://www.eset.com/afr/about/newsroom/press-releases-afr/research/dissection-of-sednit-espionage-group-1/, https://gs.statcounter.com/os-version-market-share/windows/desktop/worldwide, https://netmarketshare.com/operating-system-market-share.aspx?, https://www.fireeye.com/blog/threat-research/2015/12/fin1-targets-boot-record.html, https://www.hanselman.com/blog/HowManyPCsInTheWorldHaveTheNETFrameworkInstalled.aspx" 

        & clearWindowsEventLogs
            user info: "Adversaries may clear Windows Event Logs to hide the activity of an intrusion."

        | componentFirmware //(0.0000934)*Exponential(360)]
            user info: "Adversaries may compromise computer components and install malicious firmware that will execute adversary code outside of the operating system and main system firmware or BIOS."
            developer info: "https://attack.mitre.org/groups/, https://media.kasperskycontenthub.com/wp-content/uploads/sites/43/2018/03/08064459/Equation_group_questions_and_answers.pdf, https://eclypsium.com/2019/12/20/anatomy-of-a-firmware-attack/, https://www.youtube.com/watch?v=loBX_vEXxVA&feature=youtu.be"       

        | credentialAPIHooking          
            developer info:"Binary probability distribution. Sources for distribution results : Process Injection findings and https://www.elastic.co/fr/blog/ten-process-injection-techniques-technical-survey-common-and-trending-process"  
            user info: "Adversaries may hook into Windows application programming interface (API) functions to collect user credentials."

        | dCShadow
            developer info: "Binary probability distribution."
            user info: "This technique may bypass system logging and security monitors such as security information and event management (SIEM) products."

        & dCSync
            user info: "Adversaries may attempt to access credentials and other sensitive information by abusing a Windows Domain Controller's application programming interface (API) to simulate the replication process from a remote domain controller using a technique called DCSync."

        & disableWindowsEventLogging
            user info: "Adversaries may disable Windows event logging to limit data that can be leveraged for detections and audits."

        & domainControllerAuthentication
            user info: "Adversaries may patch the authentication process on a domain control to bypass the typical authentication mechanisms and enable access to accounts."

        & emond //(2)]
            developer info: "Source for distribution result : https://www.xorrior.com/emond-persistence/"
            user info: "Adversaries may use Event Monitor Daemon (emond) to establish persistence by scheduling malicious commands to run on predictable event triggers."

        & exchangeEmailDelegatePermissions
            user info: "Adversaries may grant additional permission levels, such as ReadPermission or FullAccess, to maintain persistent access to an adversary-controlled email account."

        | fileSystemLogicalOffsets
            user info: "Windows allows programs to have direct access to logical volumes. This technique bypasses Windows file access controls as well as file system monitoring tools."

        & hiddenUsers
            user info: "By using the Create Account technique with a userID under 500 and enabling this property (setting it to Yes), an adversary can hide their user accounts much more easily."

        | imageFileExecutionOptionsInjection
            developer info: "Binary probability distribution. Soucres for distribution results: process Injection findings and https://www.elastic.co/fr/blog/ten-process-injection-techniques-technical-survey-common-and-trending-process"
            user info: "Directly modifying IEFO and silent process exit Registry values may be abused to obtain persistence and privilege escalation by causing a malicious executable to be loaded and run in the context of separate processes on the computer."

        & kernelModulesAndExtensions
            user info: "Adversaries can use loadable kernel modules to covertly persist on a system and evade defenses."

        & keychain
            user info: "If an adversary knows the credentials for the login keychain, then they can get access to all the other credentials stored in this vault."

        & launchd
            user info: "Adversaries may abuse the Launchd daemon to perform task scheduling for initial or recurring execution of malicious code."

        & launchDaemon
            developer info: "Binary probability distribution."
            user info: "Launch Daemons may be created with administrator privileges, but are executed under root privileges, so an adversary may also use a service to escalate privileges from administrator to root. Adversary can modify a current Launch Daemon's executable and gain persistence or Privilege Escalation."

        & lSASSDriver //(0.5)*Exponential(0.1)]
            user info: "Adversaries may target lsass.exe drivers to obtain execution and/or persistence. By either replacing or adding illegitimate drivers (e.g., DLL Side-Loading or DLL Search Order Hijacking), an adversary can achieve arbitrary code execution triggered by continuous LSA operations."

        | netshHelperDLL
            user info: "Adversaries can use netsh.exe with helper DLLs to proxy execution of arbitrary code in a persistent manner."

        & passwordFilterDLL
            user info: "Adversaries can register malicious password filters to harvest credentials from local computers and/or entire domains."

        & pluggableAuthenticationModules
            user info: "Adversaries may modify pluggable authentication modules (PAM) to access user credentials or enable otherwise unwarranted access to accounts."

        | portMonitors
            user info: "Adversaries can use this technique to load malicious code at startup that will persist on system reboot and execute as SYSTEM."

        | attemptPowerShell @hidden
            user info: "Adversaries can use PowerShell to perform a number of actions, including discovery of information and execution of code."

        & powerShell //(0.55)]
            user info: "Administrator permissions are required to use PowerShell to connect to remote systems."    
            developer info: "The process takes a few seconds to complete, so the TTC has excluded. It would be //(28800)] if included. Sources used for probability distribution: https://redcanary.com/threat-detection-report/techniques/powershell/"  

        | attemptPowerShellAdminProfile @hidden
            user info: "Adversaries may gain persistence and elevate privileges in certain situations by abusing PowerShell profiles."
        
        & powerShellAdminProfile //(0.5)*Exponential(2)]
            developer info: "sources for distribution results : https://www.quora.com/ITs-how-often-do-you-use-PowerShell-And-what-do-you-think-about-it"
            user info: "Adversaries may gain persistence and elevate privileges in certain situations by abusing PowerShell profiles."   

        & procFilesystem
            user info: "Adversaries may gather credentials from information stored in the Proc filesystem or /proc."

        & queryRegistry //(0.05226)]
            developer info: "Sources for distribution result: https://www.fireeye.com/current-threats/annual-threat-report/mtrends.html, https://www.crowdstrike.com/resources/reports/observations-from-the-front-lines-of-threat-hunting-2019/, https://attack.mitre.org/software/S0075/, https://docs.microsoft.com/en-us/previous-versions/windows/it-pro/windows-server-2012-R2-and-2012/cc742028(v=ws.11), https://www.welivesecurity.com/wp-content/uploads/2020/05/ESET_Turla_ComRAT.pdf"
            user info: "The Registry contains a significant amount of information about the operating system, configuration, software, and security. Some of the information may help adversaries to further their operation within a network."

        & rc_common
            developer info: "Binary probability distribution. (Root rights) https://attack.mitre.org/techniques/T1037/004/"
            user info: "Adversaries can use the rc.common file as a way to hide code for persistence that will execute on each reboot as the root user."

        & remoteScheduledTask

        & scheduledTask //(0.33)*Exponential(54.3)]
            user info: "An adversary may use task scheduling to execute programs at system startup or on a scheduled basis for persistence, to conduct remote Execution as part of Lateral Movement, to gain SYSTEM privileges, or to run a process under the context of a specified account."
            developer info: "Sources used for probability results: https://docs.microsoft.com/en-us/previous-versions/windows/it-pro/windows-xp/bb490866(v=technet.10)?redirectedfrom=MSDN, https://redcanary.com/threat-detection-report/techniques/scheduled-task/, https://labs.sentinelone.com/trickbot-update-brief-analysis-of-a-recent-trickbot-payload/, https://www.wilbursecurity.com/2020/03/trickbot-to-ryuk-in-two-hours/, https://www.trustwave.com/en-us/resources/blogs/spiderlabs-blog/tale-of-the-two-payloads-trickbot-and-nitol/, https://www.esentire.com/assets/resourcefiles/eSentire-2019-Annual-Threat-Intelligence-Report-2019-Perspectives-and-2020-Predictions.pdf, https://blog.malwarebytes.com/cybercrime/2015/03/scheduled-tasks/, https://www.zdnet.com/article/microsoft-says-new-dexphot-malware-infected-more-than-80000-computers/"

        & securitydMemory //(0.0158)]
            user info: "If an adversary can obtain root access (allowing them to read securityd's memory), then they can scan through memory to find the correct sequence of keys in relatively few tries to decrypt the user's logon keychain."
            developer info: "Sources used for distribution result: https://attack.mitre.org/software/S0276/, https://macos.checkpoint.com/, https://juusosalonen.com/post/30923743427/breaking-into-the-os-x-keychain, https://github.com/juuso/keychaindump"

        & securitySupportProvider
            user info: "An adversary may modify these Registry keys to add new SSPs."

        & serviceExecution
            developer info: "Binary probability distribution."
            user info: "Adversaries may execute a binary, command, or script via a method that interacts with Windows services, such as the Service Control Manager."

        & sQLStoredProcedures
            user info: "Adversaries may abuse SQL stored procedures to establish persistent access to systems."

        & systemFirmware
            user info: "System firmware may be modified by an adversary to perform or assist in malicious activity."

        & transportAgent
            user info: "Adversaries may abuse SQL stored procedures to establish persistent access to systems."

        | attemptWindowsAdminShares @hidden

        | attemptExecutionThroughAPI @hidden

        | attemptAccessTokenManipulation @hidden

        & accessTokenManipulation //(0.20715)]
            user info: "Adversaries may use access tokens to operate under a different user or system security context to perform actions and evade detection."
            developer info: "Sources for probability distribution result: https://krisk.io/post/sok-attack-securecomm19.pdf, https://pentestlab.blog/2017/04/03/token-manipulation/"

        | attemptControlPanel @hidden

        | attemptDistributedComponentObjectModel @hidden

        | attemptLaunchAgent @hidden

        & launchAgent
            developer info: "Binary probability distribution."
            user info: "Adversaries may install a new launch agent that can be configured to execute at login by using launchd or launchctl to load a plist into the appropriate directories."     

        | attemptAccessibilityFeatures @hidden
        
        | attemptLogonScripts @hidden

        | attemptPlistModification @hidden

        | attemptRemoteDesktopProtocol @hidden

        | attemptServiceStop @hidden //}

        | attemptSetuidAndSetgid @hidden

        | attemptShortcutModification @hidden

        & shortcutModification //(0.03)]
            developer info: "Sources for distribution result: https://ics-cert.kaspersky.com/reports/2019/09/30/threat-landscape-for-industrial-automation-systems-h1-2019/, https://www.crowdstrike.com/resources/reports/observations-from-the-front-lines-of-threat-hunting/, https://www.fireeye.com/current-threats/annual-threat-report/mtrends.html, https://www.welivesecurity.com/wp-content/uploads/2018/10/ESET_GreyEnergy.pdf, https://www.pwc.co.uk/cyber-security/pdf/cloud-hopper-annex-b-final.pdf"
            user info: "Adversaries could use shortcuts to execute their tools for persistence. Adversaries could also edit the target path or entirely replace an existing shortcut so their tools will be executed instead of the intended legitimate program."

        | attemptSSHAuthorizedKeys @hidden

        | attemptTaintSharedContent @hidden
            user info: "This is a helper attack step that requires access to shared folders."

        & bash_profileAndBashrc
            developer info: "Binary probability distribution. With File permissions, the adversary may instantly perform this technique."
            user info: "Adversaries can insert code into these files to gain persistence each time a user logs in or opens a new shell."

        & bashHistory //(0.5)*Exponential(1)]
            developer info: "Sources for distribution results: https://www.darkreading.com/endpoint/average-employee-manages-nearly-200-passwords/d/d-id/1330304, http://blog.lastpass.com/2017/11/lastpass-reveals-8-truths-about-passwords-in-the-new-password-expose/ "
            user info: "Adversaries may search the bash command history on compromised systems for insecurely stored credentials."

        & bITSJobs //(0.264)]
            user info: "Adversaries may abuse BITS to download, execute, and even clean up after running malicious code."
            developer info: "TTC assumed instant. Sources used for probability distribution: https://blog.trendmicro.com/trendlabs-security-intelligence/tropic-trooper-new-strategy/, https://gs.statcounter.com/os-version-market-share/windows/desktop/worldwide, https://netmarketshare.com/operating-system-market-share.aspx, https://en.wikipedia.org/wiki/Windows_Desktop_Gadgets, https://www.fireeye.com/blog/threat-research/2018/03/suspected-chinese-espionage-group-targeting-maritime-and-engineering-industries.html" 

        & cachedDomainCredentials
            user info: "Adversaries may attempt to access cached domain credentials used to allow authentication to occur in the event a domain controller is unavailable."

        & clearCommandHistory
            developer info: "Binary probability distribution."
            user info: "Adversaries can abuse this by searching these files for cleartext passwords. Additionally, adversaries can use a variety of methods to prevent their own commands from appear in these logs." 

        & cron
            user info: "Adversaries may abuse the cron utility to perform task scheduling for initial or recurring execution of malicious code."

        & distributedComponentObjectModel //(96)]
            user info: "Adversaries may use Valid Accounts to interact with remote machines by taking advantage of Distributed Component Object Model (DCOM)."

        & elevatedExecutionWithPrompt
            developer info: "Binary probability distribution. Sources for distribution result: https://www.carbonblack.com/blog/tau-threat-intelligence-notification-new-macos-malware-variant-of-shlayer-osx-discovered/"
            user info: "Adversaries may leverage the AuthorizationExecuteWithPrivileges API to escalate privileges by prompting the user for credentials."

        | emailCollection
            developer info: "Binary probability distribution. (Probabilities carried by children)"
            user info: "Adversaries may target user email to collect sensitive information from a target."

        & executableInstallerFilePermissionsWeakness
            user info: "Adversaries may execute their own malicious payloads by hijacking the binaries used by an installer."

        & executionThroughModuleLoad //(0.93)*Exponential(1)]
            developer info: "Sources for distribution results: Results on spearphishing and https://community.broadcom.com/symantecenterprise/communities/community-home/librarydocuments/viewdocument?DocumentKey=bc9e2e2e-028c-4ba1-863f-72a4700dbdc2&CommunityKey=1ecf5f55-9545-44d6-b0f4-4e4a7f5f5e68&tab=librarydocuments, https://www.cybereason.com/blog/information-stealing-malware-targeting-brazil-full-research"
            user info: "Adversaries can use this functionality as a way to execute arbitrary code on a system."

        & forcedAuthentication
            user info: "Adversaries may take advantage of this behavior to gain access to user account hashes through forced SMB authentication."
 
        & goldenTicket
            developer info: "Binary probability dsitribution. carried by oSCredentialDumping"
            user info: "Adversaries who have the KRBTGT account password hash may forge Kerberos ticket-granting tickets (TGT), also known as a golden ticket."

        & groupPolicyModification
            user info: "Malicious GPO modifications can be used to implement Scheduled Task, Disabling Security Tools, Remote File Copy, Create Account, Service Execution and more."

        & groupPolicyPreferences
            user info: "Adversaries may attempt to find unsecured credentials in Group Policy Preferences (GPP)."

        & gUIInputCapture
            developer info: "Binary probability distribution."
            user info: "Adversaries may mimic common operating system GUI components to prompt users for credentials with a seemingly legitimate prompt."

        & hiddenWindow //(0.22)]
            user info: "A common use for this is when applications run in the system tray, but don't also want to show up in the Dock. However, adversaries can abuse this feature and hide their running window."
            developer info: "Sources for probability distribution: https://www.carbonblack.com/resources/threat-research/cybersecurity-outlook-report/#download"

        & hISTCONTROL
            user info: "Adversaries can use this to operate without leaving traces by simply prepending a space to all of their terminal commands."     

        | indirectCommandExecution
            user info: "Adversaries may abuse the Windows system features for Defense Evasion."

        & installUtil
            developer info: "Binary probability distribution."
            user info: "Adversaries may use InstallUtil to proxy execution of code through a trusted Windows utility."

        & launchctl
            developer info: "Binary probability distribution."
            user info: "Adversaries can abuse this functionality to execute code or even bypass whitelisting if launchctl is an allowed process."

        & lC_LOAD_DYLIB_Addition
            user info: "Adversaries can remediate the issue that any changes will invalidate digital signatures on binaries because the binary is being modified by simply removing the LC_CODE_SIGNATURE command from the binary so that the signature isn't checked at load time."

        & lLMNR_NBT_NS_PoisoningAndSMBRelay
            developer info: "Binary probability distribution. Probability carried by MiTM technique."
            user info: "AAdversaries can spoof an authoritative source for name resolution on a victim network by responding to LLMNR (UDP 5355)/NBT-NS (UDP 137) traffic. The adversary can then collect the hash information sent over the wire through tools that monitor the ports for traffic or through Network Sniffing and crack the hashes offline through Brute Force to obtain the plaintext passwords."

        & lSASecrets
            user info: "Adversaries with SYSTEM access to a host may attempt to access Local Security Authority (LSA) secrets, which can contain a variety of different credential materials, such as credentials for service accounts."

        & lSASSMemory
            user info: "Adversaries may attempt to access credential material stored in the process memory of the Local Security Authority Subsystem Service (LSASS)."

        & manInTheBrowser
            user info: "Adversaries can take advantage of security vulnerabilities and inherent functionality in browser software to change content, modify behavior, and intercept information as part of various man in the browser techniques."

        | masqueradeTaskOrService
            user info: "Adversaries may attempt to manipulate the name of a task or service to make it appear legitimate or benign."

        & modifyRegistry //(0.0661)]
            user info: "Adversaries may interact with the Windows Registry to hide configuration information within Registry keys, remove information as part of cleaning up, or as part of other techniques to aid in Persistence and Execution. An adversary may modify these Registry keys to add new SSPs."
            developer info: "Sources for distribution result: https://www.fireeye.com/current-threats/annual-threat-report/mtrends.html, https://www.usenix.org/legacyurl/view-current-malware-behaviors, https://krisk.io/post/sok-attack-securecomm19.pdf, https://docs.microsoft.com/en-us/previous-versions/windows/it-pro/windows-server-2012-R2-and-2012/cc732643(v=ws.11)?redirectedfrom=MSDN"

        & msiexec
            user info: "Adversaries may abuse msiexec.exe to proxy execution of malicious payloads."
 
        | networkShareConnectionRemoval
            user info: "Adversaries may remove share connections that are no longer useful in order to clean up traces of their operation."

        & networkShareDiscovery //(0.0129)]
            developer info: "Sources for distribution result: https://www.fireeye.com/current-threats/annual-threat-report/mtrends.html, https://krisk.io/publication/mitre-attack-securecomm19/, https://attack.mitre.org/software/S0039/"

        & nTDS
            user info: "Adversaries may attempt to access or create a copy of the Active Directory domain database in order to steal credential information, as well as obtain other information about domain members such as devices, users, and access rights."

        & odbcconf
            user info: "Adversaries may abuse odbcconf.exe to proxy execution of malicious payloads."

        | parentPIDSpoofing
            user info: "Adversaries may spoof the parent process identifier (PPID) of a new process to evade process-monitoring defenses or to elevate privileges."

        & pathInterceptionBySearchOrderHijacking
            user info: "Adversaries may execute their own malicious payloads by hijacking the search order used to load other programs."

        | peripheralDeviceDiscovery //(1)]
            developer info: "Sources for distribution results: https://capec.mitre.org/data/definitions/646.html, https://www.welivesecurity.com/wp-content/uploads/2016/10/eset-sednit-part-2.pdf, https://github.com/mal-lang/malcompiler/wiki/Supported-distribution-functions" 

        & plistModification
            user info: "Adversaries can modify these plist files to point to their own code, can use them to execute their code in the context of another user, bypass whitelisting procedures, or even use them as a persistence mechanism."
            developer info: "Binary probability distribution."

        & portableExecutableInjection
            developer info: "Binary probability distribution. Probability carried by Process Injection main technique"
            user info: "Adversaries may inject portable executables (PE) into processes in order to evade process-based defenses as well as possibly elevate privileges." 

        & portKnocking
            user info: "This technique has been observed to both for the dynamic opening of a listening port as well as the initiating of a connection to a listening server on a different system."

        & powerShellUserProfile //(2)]
            developer info: "sources for distribution results : https://www.quora.com/ITs-how-often-do-you-use-PowerShell-And-what-do-you-think-about-it"
            user info: "Adversaries may gain persistence and elevate privileges in certain situations by abusing PowerShell profiles."   

        & processDoppelganging
            developer info: "Binary probability distribution. Probability carried by Process Injection main technique"
            user info: "Process Doppelgänging involves replacing the memory of a legitimate process, enabling the veiled execution of malicious code that may evade defenses and detection."

        & processHollowing //(1440)]
            developer info: "Sources for distribution result: https://redcanary.com/threat-detection-report/techniques/, https://www.fireeye.com/current-threats/annual-threat-report/mtrends.html, https://adalogics.com/blog/the-state-of-advanced-code-injections, https://www.youtube.com/watch?v=G6AoZ5F4CH8, https://www.youtube.com/watch?v=k2pLF56gXXw&feature=youtu.be&t=106"
            user info: "Execution of the malicious code is masked under a legitimate process and may evade defenses and detection analysis."

        & pubPrn
            user info: "Adversaries may use the trusted PubPrn script to proxy execution of malicious files."

        & rDPHijacking
            user info: "Adversaries may hijack a legitimate user’s remote desktop session to move laterally within an environment."

        | registryRunKeysOrStartupFolder //(0.17125)]
            user info: "Adversaries can use these configuration locations to execute malware, such as remote access tools, to maintain persistence through system reboots. Adversaries may also use Masquerading to make the Registry entries look as if they are associated with legitimate programs."
            developer info: "Sources used for distribution result: https://dsimg.ubm-us.net/envelope/395823/551993/Fileless%20Attack%20Survival%20Guide.pdf, https://content.carbonblack.com/c/vmwcb-threat-report-?x=f_lWMB"

        & regsvcsOrRegasm
            developer info: "Binary probability distribution."
            user info: "Adversaries can use Regsvcs and Regasm to proxy execution of code through a trusted Windows utility. Both utilities may be used to bypass process whitelisting."

        & regsvr32
            developer info: "Binary probability distribution."
            user info: "Adversaries may take advantage of this functionality to proxy execution of code to avoid triggering security tools. Regsvr32.exe can also be used to specifically bypass process whitelisting using functionality to load COM scriptlets to execute DLLs under user permissions."

        & remoteDesktopProtocol //(0.5561)*Exponential(480)]
            user info: "Adversaries may connect to a remote system over RDP/RDS to expand access if the service is enabled and allows access to accounts with known credentials. Adversaries may also perform RDP session hijacking which involves stealing a legitimate user's remote session. It can also lead to Remote System Discovery and Privilege Escalation by stealing a Domain Admin or higher privileged account session."
            developer info: "Sources used for distribution result: https://www.fireeye.com/blog/threat-research/2020/02/mtrends-2020-insights-from-the-front-lines.html, https://duo.com/decipher/attackers-combine-attacks-against-rdp-with-ransomware, https://www.securitymagazine.com/articles/90983-percent-of-organizations-exhibit-malicious-remote-desktop-protocol-rdp-behaviors, https://medium.com/enterprise-nxt/2020-ransomware-attacks-still-mostly-through-unsecured-rdp-b167fefcd490, https://www.youtube.com/watch?v=Olgso_oXQa8"

        & reopenedApplications
            developer info: "Binary probability distribution. Plist Modification: https://attack.mitre.org/techniques/T1547/007/"
            user info: "An adversary can modify one of these files directly to include a link to their malicious executable to provide a persistence mechanism each time the user reboots their machine."

        & rundll32
            developer info: "Binary probability distribution."
            user info: "Adversaries may abuse rundll32.exe to proxy execution of malicious code."

        & screensaver //(0.01605)*Exponential(96)]
            user info: "Adversaries can use screensaver settings to maintain persistence by setting the screensaver to run malware after a certain timeframe of user inactivity."
            developer info: "Sources for distribution result: https://malware.wikia.org/wiki/MyDoom, https://unit42.paloaltonetworks.com/mydoom-still-active-in-2019/, https://www.menlosecurity.com/blog/only-4-percent-of-users-click-on-phishing-emails.-yet-those-4-percent-never-learn, https://study.sagepub.com/chiricogsp, https://www.welivesecurity.com/wp-content/uploads/2017/08/eset-gazer.pdf" 

        & securityAccountManager
            user info: "Adversaries may attempt to extract credential material from the Security Account Manager (SAM) database either through in-memory techniques or through the Windows Registry where the SAM database is stored." 
 
        & servicesFilePermissionsWeakness //(1)]
            developer info: "Sources for distribution result: https://www.csoonline.com/article/3390663/check-your-access-control-permissions-before-hackers-do.html, https://www.varonis.com/blog/data-breach-statistics/,https://capec.mitre.org/data/definitions/17.html"
            user info: "Adversaries may execute their own malicious payloads by hijacking the binaries used by services."

        & servicesRegistryPermissionsWeakness
            user info: "Adversaries may execute their own malicious payloads by hijacking the Registry entries used by services."

        & serviceStop //} //(0.0837)]
            developer info: "Sources for distribution result: https://www.fireeye.com/current-threats/annual-threat-report/mtrends.html, https://blog.talosintelligence.com/2018/02/olympic-destroyer.html, https://docs.microsoft.com/en-us/windows/win32/api/winsvc/nf-winsvc-changeserviceconfigw, https://www.fireeye.com/blog/threat-research/2017/05/wannacry-malware-profile.html, https://www.crowdstrike.com/blog/big-game-hunting-with-ryuk-another-lucrative-targeted-ransomware/"
            user info: "Adversaries may stop services in order to conduct Data Destruction or Data Encrypted for Impact on the data stores of services like Exchange and SQL Server."

        | signedScriptProxyExecution
            developer info: "Binary probability distribution."
            user info: "Scripts signed with trusted certificates can be used to proxy execution of malicious files."

        & silverTicket
            developer info: "Binary probability dsitribution. carried by oSCredentialDumping"
            user info: "Adversaries who have the password hash of a target service account (e.g. SharePoint, MSSQL) may forge Kerberos ticket granting service (TGS) tickets, also known as silver tickets."

        & sIPAndTrustProviderHijacking
            user info: "Adversaries may abuse this architecture to subvert trust controls and bypass security policies that allow only legitimately signed code to execute on a system."

        | source
            developer info: "Binary probability distribution."

        | spaceAfterFileName //(1)]
            developer info: "Binary probability distribution. Based on the abuse of system features. Sources: https://attack.mitre.org/techniques/T1151/, https://www.welivesecurity.com/2016/07/06/new-osxkeydnap-malware-hungry-credentials/"

        & sSH
            user info: "Adversaries may use Valid Accounts to log into remote machines using Secure Shell (SSH). The adversary may then perform actions as the logged-on user."

        & sSHHijacking //(0.51)]
            developer info: "Sources for distribution results: http://book.itep.ru/depository/security/vulnerability/AST-0125626_Ponemon_2014_SSH_Security_Vulnerability_Report.pdf" 
            user info: "In order to move laterally from a compromised host, adversaries may take advantage of trust relationships established with other systems via public key authentication in active SSH sessions by hijacking an existing connection to another system."

        & sudoAndSudoCaching //(288)]
            developer info: "Sources for distribution results: https://www.sudo.ws/man/1.8.15/sudoers.man.html"
            user info: "Adversaries can abuse poor configurations of this to escalate privileges without needing the user's password."

        & systemdService
            user info: "Adversaries have used systemd functionality to establish persistent access to victim systems by creating and/or modifying service unit files that cause systemd to execute malicious commands at recurring intervals, such as at system boot."

        | systemServiceDiscovery //(0.0122)]
            user info: "Adversaries may try to get information about registered services."
            developer info: "Sources for distribution result: https://www.fireeye.com/current-threats/annual-threat-report/mtrends.html, https://krisk.io/publication/mitre-attack-securecomm19/, https://attack.mitre.org/techniques/T1007/, https://docs.microsoft.com/en-us/previous-versions/windows/it-pro/windows-xp/bb491010(v=technet.10)?redirectedfrom=MSDN"

        & templateInjection
            user info: "Adversaries may abuse this technology to initially conceal malicious code to be executed."

        & threadExecutionHijacking
            developer info: "Binary probability distribution. Probability carried by Process Injection main technique"
            user info: "Adversaries may inject malicious code into hijacked processes in order to evade process-based defenses as well as possibly elevate privileges." 

        | trap //(0.1)]
            user info: "Adversaries can use this to register code to be executed when the shell encounters specific interrupts either to gain execution or as a persistence mechanism."
            developer info: "Arbitrary distribution. See trap.md file."

        | trustedDeveloperUtilities
            developer info: "Binary probability distribution."
            user info: "An adversary can use tracker.exe to proxy execution of an arbitrary DLL into another process. Since tracker.exe is also signed it can be used to bypass application whitelisting solutions."

        | videoCapture //(0.74)*Exponential(0.1)]
            developer info: "Sources for distribution results: http://www.storiprotection.fr/EagleEye.pdf, http://zugara.com/webcam-penetration-rates-adoption"

        & windowsAdminShares //(0.28)*Exponential(4114)]
            developer info: "Sources used for probability distribution: https://redcanary.com/threat-detection-report/techniques/windows-admin-shares/, https://www.contextis.com/us/blog/lateral-movement-a-deep-look-into-psexec"

        | windowsManagementInstrumentation //(0.26)*Exponential(43.49)]
            user info: "An adversary can use WMI to interact with local and remote systems and use it as a means to perform many tactic functions."
            developer info: "TTC is upper bound of likely time needed. Sources used for probability distribution result: https://redcanary.com/threat-detection-report/techniques/windows-management-instrumentation/, https://www.fireeye.com/content/dam/fireeye-www/global/en/current-threats/pdfs/wp-windows-management-instrumentation.pdf, https://www.microsoft.com/security/blog/2017/06/27/new-ransomware-old-techniques-petya-adds-worm-capabilities/, https://securelist.com/olympicdestroyer-is-here-to-trick-the-industry/84295/"

        | attemptWindowsManagementInstrumentationEventSubscription @hidden

        & windowsManagementInstrumentationEventSubscription //(0.26)*Exponential(43.49)]
            developer info: "We assume the dsitribution to be the same as for windowsManagementInstrumentation"
            user info: "Adversaries may use the capabilities of WMI to subscribe to an event and execute arbitrary code when that event occurs, providing persistence on a system."

        & xslScriptProcessing //(0.93)*Exponential(1)]
            developer info: "Sources used for probability distribution: https://reaqta.com/2018/03/spear-phishing-campaign-leveraging-msxsl/"
            user info: "Adversaries may abuse this functionality to execute arbitrary files while potentially bypassing application whitelisting defenses."      

        | accountManipulation //(0.101)]
            user info: "Account manipulation may aid adversaries in maintaining access to credentials and certain permission levels within an environment." 
            developer info: "Sources used for probability distribution result: https://www.fireeye.com/current-threats/annual-threat-report/mtrends.html, https://attack.mitre.org/techniques/T1098/, https://www.us-cert.gov/ncas/alerts/TA18-074A" 
            ->  userAccount.userCredentials,
                persistence,
                service.additionalAzureServicePrincipalCredentials,
                service.exchangeEmailDelegatePermissions,
                service.addOffice365GlobalAdministratorRole

        | archiveCollectedData
            user info: "An adversary may compress and/or encrypt data that is collected prior to exfiltration."
            ->  archiveViaUtility,
                archiveViaLibrary,
                archiveViaCustomMethod

        & archiveViaUtility
            user info: "An adversary may compress and/or encrypt data that is collected prior to exfiltration."
            ->  dataCompressed,
                dataEncrypted

        | archiveViaLibrary
            user info: "An adversary may compress or encrypt data that is collected prior to exfiltration using 3rd party libraries."
            ->  dataCompressed,
                dataEncrypted

        | archiveViaCustomMethod
            user info: "An adversary may compress or encrypt data that is collected prior to exfiltration using a custom method."
            ->  dataCompressed,
                dataEncrypted

        | abuseElevationControlMechanism
            user info: "Adversaries may circumvent mechanisms designed to control elevate privileges to gain higher-level permissions."

        | accountAccessRemoval //}
            developer info: "Binary probability distribution. Once they have access, adversaries may perform this technique."
            user info: "Adversaries may interrupt availability of system and network resources by inhibiting access to accounts utilized by legitimate users. Accounts may be deleted, locked, or manipulated (ex: changed credentials) to remove access to accounts. Adversaries may also subsequently log off and/or reboot boxes to set malicious changes into place."

        | bootOrLogonAutostartExecution

        | infectedOS
            ->  clipboardData,
                dataFromInformationRepositories,
                computer.infectedComputer

        & clipboardData //(1)]
            developer info: "Sources for distribution results: https://attack.mitre.org/techniques/T1115/ "
            ->  adminAccount.adminCredentials,
                userAccount.userCredentials

        | accountDiscovery //(0.01967)]
            user info: "get account names and information"
            developer info: "Sources for distribution result: https://www.fireeye.com/current-threats/annual-threat-report/mtrends.html, Red Canary's ATT&CK technique percentages Top 50 Google Sheets Document, https://krisk.io/post/sok-attack-securecomm19.pdf, https://attack.mitre.org/techniques/T1087/"
            ->  service.cloudAccount,
                service.emailAccount,
                attemptDomainAccount,
                attemptLocalAccount

        | attemptDomainAccount @hidden
            ->  domainAccount

        & domainAccount
            user info: "Adversaries may attempt to get a listing of domain accounts."
            ->  userAccount.userInformation,
                persistence

        | attemptLocalAccount @hidden
            ->  localAccount

        & localAccount
            user info: "Adversaries may attempt to get a listing of local system accounts."
            ->  userAccount.userInformation,
                persistence

        & commandAndScriptingInterpreter //(0.24)]
            developer info: "Sources for distribution results: https://www.itjungle.com/2020/06/22/security-gaining-attention-on-ibm-i-but-more-progress-needed/"
            user info: "Adversaries may abuse command and script interpreters to execute commands, scripts, or binaries."
            ->  dataFromLocalSystem,
                screenCapture,
                visualBasic,
                python,
                javaScriptOrJScript

        & visualBasic
            user info: "Adversaries may abuse Visual Basic (VB) for execution."
            ->  service.browser.attemptSpearphishingAttachment,
                executeCode

        & python
            user info: "Adversaries may abuse Python commands and scripts for execution."
            ->  executeCode

        & javaScriptOrJScript
            user info: "Adversaries may abuse JavaScript / JScript to execute various behaviors. Common uses include hosting malicious scripts on websites as part of a Drive-by Compromise or downloading and executing these script files as secondary payloads."
            ->  executeCode,
                service.browser.driveByCompromise,
                obfuscatedFilesOrInformation

        | createOrModifySystemProcess
            user info: "Adversaries may create or modify system-level processes to repeatedly execute malicious payloads as part of persistence."

        | credentialsFromPasswordStores
            user info: "Adversaries may search for common password storage locations to obtain user credentials."
            ->  service.browser.credentialsFromWebBrowsers

        | dataManipulation //(0.65833)*Exponential(0.02)]
            developer info: "Sources for distribution results: https://threatpost.com/what-is-a-data-manipulation-attack-and-how-to-mitigate-against-them/141563/, https://www.lexology.com/library/detail.aspx?g=2cbd967d-0dcc-4adb-a16f-417b7479cec7, work on the Data Encryption mitigation"
            user info: "Adversaries may insert, delete, or manipulate data in order to manipulate external outcomes or hide activity."
            ->  storedDataManipulation,
                service.transmittedDataManipulation,
                computer.router.externalNetwork.attemptTransmittedDataManipulation,
                computer.router.internalNetwork.attemptTransmittedDataManipulation,
                runtimeDataManipulation

        | dataFromLocalSystem
            developer info: "Binary probability distribution. Distribution carried by Automated Collection."
            user info: "Adversaries may search local system sources, such as file systems or local databases, to find files of interest and sensitive data prior to Exfiltration."
            ->  attemptAutomatedCollection

        | defacement
            user info: "Adversaries may modify visual content available internally or externally to an enterprise network."
            ->  computer.router.internalNetwork.internalDefacement,
                computer.router.externalNetwork.externalDefacement

        & domainDiscovery
            user info: "get domain names and information"

        & domainGenerationAlgorithms 
            user info: "Adversaries may make use of Domain Generation Algorithms (DGAs) to dynamically identify a destination for command and control traffic rather than relying on a list of static IP addresses or domains." 
            ->  fallbackChannels, // leads to Fallback Channels attack
                computer.router.internalNetwork.communicate,
                computer.router.internalNetwork.generateDomainNames

        | compromisedDataOrSystem // with probability
            ->  attemptPrivateKeys,
                systemNetworkConnectionsDiscovery,
                service.browser.installExtensions,
                computer.peripheralDevice.infectedMedia,
                service.attemptTrustedRelationship

        | attemptBinaryPadding @hidden
            ->  binaryPadding

        & binaryPadding
            developer info: "Binary probability distribution. Distribution carried by obfuscatedFilesOrInformation"
            ->  bypassSignatureBasedDetection,
                bypassAntivirus

        & applicationWindowDiscovery
            developer info: "Binary probability distribution. https://attack.mitre.org/techniques/T1010/ no mitigation, some malware can do this"
            user info: "get a listing of opened application windows"

        & processDiscovery //(0.17)*Exponential(346)]
            user info: "Adversaries may attempt to get information about running processes on a system. Information obtained could be used to gain an understanding of common software running on systems within the network."
            developer info: "Sources used for distribution result: https://content.carbonblack.com/c/vmwcb-threat-report-?x=f_lWMB, https://www.researchgate.net/publication/332380784_How_many_words_do_we_read_per_minute_A_review_and_meta-analysis_of_reading_rate, https://attack.mitre.org/techniques/T1057/"
            ->  processInjection

        | collectHashInformation
            ->  attemptPasswordCracking // leads to Brute Force: Password Cracking attack  

        & compileAfterDelivery    
            developer info: "Binary probability distribution. Probability carried by obfuscatedFilesOrInformation" 
            user info: "Adversaries may attempt to make payloads difficult to discover and analyze by delivering files to victims as uncompiled code. Source code payloads may also be encrypted, encoded, and/or embedded within other files, such as those delivered as a Spearphishing Attachment."
            ->  service.browser.phishing, // source code payloads may also be encrypted, encoded, and/or embedded within other files, such as those delivered as a Phishing.
                bypassStaticFileAnalysis,
                bypassBinaryAnalysis,
                bypassAntivirus,
                bypassHostIntrusionPrevention,
                bypassSignatureBasedDetection

        | oSCredentialDumping //(0.08785)]
            user info: "Credential dumping is the process of obtaining account login and password information, normally in the form of a hash or a clear text password, from the operating system and software."
            developer info: "Sources for distribution result: https://www.picussecurity.com/picus-10-critical-mitre-attck-techniques, https://www.fireeye.com/current-threats/annual-threat-report/mtrends.html, https://krisk.io/post/sok-attack-securecomm19.pdf, https://redcanary.com/threat-detection-report/techniques/credential-dumping/, https://github.com/gentilkiwi/mimikatz" 

        | attemptEncryptedChannel @hidden
            ->  encryptedChannel

        & encryptedChannel //(0.60)*Exponential(5400)]
            developer info: "Sources for distribution results : https://www.jscape.com/blog/bid/84422/symmetric-vs-asymmetric-encryption#:~:text=Symmetric%20key%20encryption%20doesn't,to%20speed%2C%20symmetric%20trumps%20asymmetric.&text=For%20as%20long%20as%20you,to%20decrypt%20your%20encrypted%20file., https://www.cse.wustl.edu/~jain/cse567-06/ftp/encryption_perf/, https://arxiv.org/ftp/arxiv/papers/1312/1312.3183.pdf, https://www.cisco.com/c/dam/en/us/solutions/collateral/enterprise-networks/enterprise-network-security/nb-09-encrytd-traf-anlytcs-wp-cte-en.pdf"
            user info: "Adversaries may use a custom cryptographic protocol or algorithm to hide command and control traffic."
            ->  computer.router.internalNetwork.c2Connected  

        | dataEncoding //(0.0614)]
            developer info: "TTC instant/not applicable. Sources used for probability distribution result: https://symantec-enterprise-blogs.security.com/blogs/threat-intelligence/powershell-threats-grow-further-and-operate-plain-sight, https://docs.broadcom.com/docs/increased-use-of-powershell-in-attacks-16-en"
            ->  standardEncoding,
                nonStandardEncoding

        & standardEncoding
            user info: "Adversaries may encode data with a standard data encoding system to make the content of command and control traffic more difficult to detect." 
            ->  computer.router.internalNetwork.communicate

        & nonStandardEncoding            
            user info: "Adversaries may encode data with a non-standard data encoding system to make the content of command and control traffic more difficult to detect."
            ->  computer.router.internalNetwork.communicate

        | dynamicResolution
            user info: "Adversaries may dynamically establish connections to command and control infrastructure to evade common detections and remediations."
            ->  fallbackChannels,
                fastFluxDNS,
                domainGenerationAlgorithms,
                dNSCalculation

        | fastFluxDNS
            user info: "Adversaries may use Fast Flux DNS to hide a command and control channel behind an array of rapidly changing IP addresses linked to a single domain resolution."
            ->  fallbackChannels

        | dNSCalculation
            user info: "Adversaries may perform calculations on addresses returned in DNS results to determine which port and IP address to use for command and control, rather than relying on a predetermined port number or the actual returned IP address."
            ->  bypassEgressFiltering

        | executeCode 
            ->  computer.infectedComputer,
                computer.router.internalNetwork.remoteAccess

        | attemptEndpointDenialOfService @hidden //}
            ->  endpointDenialOfService

        & endpointDenialOfService //}
            user info: "Adversaries may perform Endpoint Denial of Service (DoS) attacks to degrade or block the availability of services to users."
            ->  applicationExhaustionFlood,
                oSExhaustionFlood,
                serviceExhaustionFlood,
                applicationOrSystemExploitation,
                service.applicationExhaustionFlood,
                service.serviceExhaustionFlood,
                service.applicationOrSystemExploitation

        | applicationExhaustionFlood //}
            user info: "Adversaries may target resource intensive features of web applications to cause a denial of service (DoS)." 
            ->  service.blockUserAccess

        | oSExhaustionFlood //}
            user info: "Adversaries may target the operating system (OS) for a DoS attack, since the (OS) is responsible for managing the finite resources on a system." 

        | serviceExhaustionFlood //}
            user info: "Adversaries may target the different network services provided by systems to conduct a DoS."

        | applicationOrSystemExploitation //}
            user info: "Adversaries may exploit software vulnerabilities that can cause an application or system to crash and deny availability to users."

        | eventTriggeredExecution
            user info: "Adversaries may establish persistence and/or elevate privileges using system mechanisms that trigger execution based on specific events."

        | executionGuardrails
            user info: "Adversaries may use guardrails and environmental keying to help protect their TTPs and evade detection."
            ->  environmentalKeying

        & environmentalKeying
            user info: "Adversaries may environmentally key payloads or other features of malware to evade defenses and constraint execution to a specific target environment."
            ->  payloadDelivery
      
        | payloadDelivery

        & exfiltrationOverOtherNetworkMedium //(259.5)]
            developer info: "Sources for distribution results: https://fr.wikipedia.org/wiki/D%C3%A9bits_et_port%C3%A9es, https://www.atlasandboots.com/remote-work/countries-with-the-fastest-internet-in-the-world/#:~:text=The%20global%20average%20broadband%20internet,Mbps%20(megabits%20per%20second)."
            user info: "Adversaries could choose to do exfiltration over a WiFi connection, modem, cellular data connection, Bluetooth, or another radio frequency (RF) channel if they have sufficient access or proximity, and the connection might not be secured or defended as well as the primary Internet-connected channel because it is not routed through the same enterprise network."     
            ->  exfiltrationOverBluetooth,
                computer.router.internalNetwork.dataExfiltration
        
        & exfiltrationOverBluetooth //(51.86)]
            developer info: "Sources for distribution results: https://fr.wikipedia.org/wiki/D%C3%A9bits_et_port%C3%A9es, https://www.atlasandboots.com/remote-work/countries-with-the-fastest-internet-in-the-world/#:~:text=The%20global%20average%20broadband%20internet,Mbps%20(megabits%20per%20second)."
            user info: "Adversaries may attempt to exfiltrate data over Bluetooth rather than the command and control channel."
            ->  computer.router.internalNetwork.dataExfiltration

        | fallbackChannels
            developer info: "Binary probability distribution."
            user info: "Adversaries may use fallback or alternate communication channels if the primary channel is compromised or inaccessible in order to maintain reliable command and control and to avoid data transfer thresholds." 
            ->  computer.router.internalNetwork.communicate  

        & firmwareCorruption //} //(0.8)*Exponential(2880)]
            user info: "Adversaries may overwrite or corrupt the flash memory contents of system BIOS or other firmware in devices attached to a system in order to render them inoperable or unable to boot." 
            developer info: "TTC assumed instant, one source states 30s. Sources used for probability distribution result: https://www.wired.com/2015/03/researchers-uncover-way-hack-bios-undermine-secure-operating-systems/, https://www.gillware.com/hard-drive-data-recovery/data-recovery-101-firmware/"

        | hideArtifacts
            user info: "Adversaries may attempt to hide artifacts associated with their behaviors to evade detection."
            ->  hiddenFilesAndDirectories,
                hiddenFileSystem,
                runVirtualInstance

        & hiddenFileSystem
            user info: "Adversaries may use a hidden file system to conceal malicious activity from users and security tools." 

        & runVirtualInstance
            user info: "Adversaries may carry out malicious operations using a virtual instance to avoid detection."
            ->  bypassHostIntrusionPrevention

        | hiddenFilesAndDirectories //(0.0106)]
            user info: "To prevent normal users from accidentally changing special files on a system, most operating systems have the concept of a 'hidden' file. Adversaries can use this to their advantage to hide files and folders anywhere on the system for persistence and evading a typical user or system analysis that does not incorporate investigation of hidden files."
            developer info: "Sources for distribution result: https://www.fireeye.com/current-threats/annual-threat-report/mtrends.html, https://krisk.io/publication/mitre-attack-securecomm19/, https://attack.mitre.org/techniques/T1158/"
            ->  bypassHostForensicAnalysis,
                persistence

        | hijackExecutionFlow
            user info: "Adversaries may execute their own malicious payloads by hijacking the way operating systems run programs."

        | indicatorRemovalFromTools
            developer info: "Binary probability distribution"
            user info: "An adversary may be able to modify the tool by removing the indicator that is no longer detected by the target's defensive systems."
            ->  bypassHostIntrusionPrevention,
                bypassLogAnalysis,
                bypassAntivirus

        | indicatorRemovalOnHost //(0.04)]
            developer info: "Sources used for distribution result: Red Canary top 50 ATT&CK techniques (private google sheets document), https://krisk.io/publication/mitre-attack-securecomm19/, https://www.crowdstrike.com/resources/reports/observations-from-the-front-lines-of-threat-hunting-2019/, https://content.fireeye.com/m-trends/rpt-m-trends-2020, https://www.welivesecurity.com/wp-content/uploads/2017/02/Read-The-Manual.pdf, https://www.proofpoint.com/us/threat-insight/post/leviathan-espionage-actor-spearphishes-maritime-and-defense-targets"
            user info: "Adversaries may delete or alter generated artifacts on a host system, including logs or captured files such as quarantined malware." 
            ->  fileDeletion,
                timestomp 

        | timestomp //(0.0396)]
            user info: "Timestomp is done on files that have been modified or created by the adversary so that they do not appear conspicuous to forensic investigators or file analysis tools."
            developer info: "Sources used for distribution result: https://www.fireeye.com/current-threats/annual-threat-report/mtrends.html, https://github.com/jackson5sec/timestomp" 
            ->  bypassHostForensicAnalysis,
                masquerading // hide malware and tools

        | inputCapture //(0.071)]
            user info: "Adversaries can use methods of capturing user input for obtaining credentials for Valid Accounts and information Collection that include keylogging and user input field interception."
            developer info: "Sources used for distribution result: https://www.statista.com/statistics/271037/distribution-of-most-common-malware-file-types/, https://www.rsaconference.com/industry-topics/blog/do-malware-authors-dream-of-original-code, http://keyllama.com/KeyLlamaUSB.pdf"
            ->  keylogging,
                webPortalCapture
               
        | keylogging
            user info: "Adversaries may log user keystrokes to intercept credentials as the user types them."
            ->  userAccount.userCredentials 

        & lateralToolTransfer
            user info: "Adversaries may transfer tools or other files between systems in a compromised environment."

        & webPortalCapture
            user info: "Adversaries may install code on externally facing portals, such as a VPN login page, to capture and transmit credentials of users who attempt to log into the service."
            ->  service.attemptExternalRemoteServices, // maintain network access
                validAccounts

        | internalSpearphishing //(0.85)*Exponential(1)]
            developer info: "Sources for distribution results: https://er.educause.edu/articles/2005/1/fostering-email-security-awareness-the-west-point-carronade and other work on spearphishing." 
            user info: "Adversaries may use internal spearphishing to gain access to additional information or exploit other users within the same organization after they already have access to accounts or systems within the environment." 
            ->  computer.user.attemptMaliciousFile,
                service.applicationAccessToken,
                service.attemptExploitationForClientExecution,
                attemptDynamicDataExchange,
                inputCapture

        | attemptDynamicDataExchange

        & manInTheMiddle //(0.35)*Exponential(1)]
            developer info: "Sources for distribution results: https://capec.mitre.org/data/definitions/94.html, https://www.csoonline.com/article/3340117/what-is-a-man-in-the-middle-attack-how-mitm-attacks-work-and-how-to-prevent-them.html#:~:text=Though%20not%20as%20common%20as,are%20difficult%20to%20come%20by."
            user info: "Adversaries may attempt to position themselves between two or more networked devices using a man-in-the-middle (MiTM) technique to support follow-on behaviors such as Network Sniffing or Transmitted Data Manipulation."
            ->  networkSniffing,
                computer.router.internalNetwork.attemptTransmittedDataManipulation,
                computer.router.externalNetwork.attemptTransmittedDataManipulation

        | masquerading //(0.34)*Exponential(1)]
            user info: "Masquerading occurs when the name or location of an executable, legitimate or malicious, is manipulated or abused for the sake of evading defenses and observation."
            developer info: "TTC is time until attack is over, which is time until masquerading file is discovered. Sources used for probability distribution: https://redcanary.com/threat-detection-report/techniques/masquerading/, https://www.tripwire.com/state-of-security/security-data-protection/security-controls/file-integrity-monitoring/, https://www.cm-alliance.com/cybersecurity-blog/understanding-how-file-integrity-monitoring-works, https://en.wikipedia.org/wiki/System_File_Checker"
            ->  matchLegitimateNameOrLocation,
                rightToLeftOverride,
                renameSystemUtilities

        | modifyAuthenticationProcess
            user info: "Adversaries may modify authentication mechanisms and processes to access user credentials or enable otherwise unwarranted access to accounts."

        | rightToLeftOverride
            user info: "Adversaries may use the right-to-left override (RTLO or RLO) character (U+202E) as a means of tricking a user into executing what they think is a benign file type but is actually executable code. A common use of this technique is with Spearphishing Attachment/Malicious File since it can trick both end users and defenders if they are not aware of how their tools display and render the RTLO character."
            ->  service.browser.attemptSpearphishingAttachment, // employ various forms of Masquerading on the file to increase the likelihood that a user will open it
                computer.user.attemptMaliciousFile // employ various forms of Masquerading on the file to increase the likelihood that a user will open it

        & renameSystemUtilities
            user info: "Adversaries may rename legitimate system utilities to try to evade security mechanisms concerning the usage of those utilities."
            ->  bypassFileMonitoring

        & matchLegitimateNameOrLocation
            user info: "Adversaries may match or approximate the name or location of legitimate files when naming/placing their files."
            ->  bypassFileOrPathWhitelisting

        | proxy //(0.825)]
            developer info: "Sources used for probability distribution: https://jpcertcc.github.io/ToolAnalysisResultSheet/details/Htran.htm#ExecCondition, https://gs.statcounter.com/os-market-share/desktop/worldwide/#monthly-201905-202005, https://netmarketshare.com/operating-system-market-share.aspx?, https://redcanary.com/threat-detection-report/techniques/powershell/, https://www.scribd.com/document/406643981/Threat-Detection-Report, https://s3.eu-west-1.amazonaws.com/ncsc-content/files/Joint%20report%20on%20publicly%20available%20hacking%20tools%20%28NCSC%29.pdf)"
            user info: "Adversaries may use a connection proxy to direct network traffic between systems or act as an intermediary for network communications to a command and control server to avoid direct connections to their infrastructure."
            ->  internalProxy,
                externalProxy,
                attemptMultiHopProxy,
                domainFronting

        & internalProxy
            user info: "Adversaries may use an internal proxy to direct command and control traffic between two or more systems in a compromised environment."
            ->  computer.router.internalNetwork.c2Connected

        & externalProxy
            user info: "Adversaries may use an external proxy to act as an intermediary for network communications to a command and control server to avoid direct connections to their infrastructure."
            ->  computer.router.internalNetwork.c2Connected

        | attemptMultiHopProxy @hidden
            ->  multiHopProxy

        & multiHopProxy //(0.0124)*Exponential(1440)]
            developer info: "Sources used for distribution result: https://www.fireeye.com/current-threats/annual-threat-report/mtrends.html, https://krisk.io/publication/mitre-attack-securecomm19/, https://www.crowdstrike.com/resources/reports/observations-from-the-front-lines-of-threat-hunting-2019/, https://attack.mitre.org/software/S0281/, https://objective-see.com/blog/blog_0x25.html, https://www.cable.co.uk/broadband/speed/worldwide-speed-league/, https://www.secureworks.com/research/wcry-ransomware-analysis"
            user info: "To disguise the source of malicious traffic, adversaries may chain together multiple proxies."
            ->  computer.router.internalNetwork.c2Connected

        & domainFronting
            user info: "Domain fronting takes advantage of routing schemes in Content Delivery Networks (CDNs) and other services which host multiple domains to obfuscate the intended destination of HTTPS traffic or traffic tunneled through HTTPS."
            ->  computer.router.internalNetwork.obfuscateNetworkTraffic,
                computer.router.externalNetwork.obfuscateNetworkTraffic          

        | attemptMultiStageChannels @hidden
            ->  multiStageChannels

        & multiStageChannels
            user info: "Adversaries may create multiple stages for command and control that are employed under different conditions or for certain functions."
            ->  computer.router.internalNetwork.c2Connected,
                fallbackChannels

        | networkDenialOfService //} //(0.4863)*Exponential(6.6)]
            user info: "Adversaries may perform Network Denial of Service (DoS) attacks to degrade or block the availability of targeted resources to users."
            developer info: "Sources used for probability distribution: https://www.netscout.com/news/press-release/complexity-ddos-attacks, https://securelist.com/ddos-attacks-in-q4-2018/89565/, European Application and Network Security Report 2016-17, https://www.globaldots.com/ddos-distributed-denial-of-service-explained"
            ->  directNetworkFlood,
                reflectionAmplification

        & directNetworkFlood //} 
            user info: "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target."
            ->  applicationExhaustionFlood,
                service.serviceExhaustionFlood

        & reflectionAmplification //}
            user info: "Adversaries may attempt to cause a denial of service by reflecting a high-volume of network traffic to a target."
            ->  applicationExhaustionFlood,
                service.serviceExhaustionFlood
 
        & networkSniffing //(0.0044)*Exponential(144)]
            user info: "An adversary may place a network interface into promiscuous mode to passively access data in transit over the network, or use span ports to capture a larger amount of data."
            developer info: "Sources for distribution result: https://www.fireeye.com/current-threats/annual-threat-report/mtrends.html, https://www.vice.com/en_us/article/jpgmxp/how-to-go-from-0-to-sniffing-packets-in-10-minutes"
            ->  userAccount.userCredentials

        | obfuscatedFilesOrInformation //(0.7395)]
            user info: "Adversaries may use Obfuscated Files or Information to hide artifacts of an intrusion from analysis."     
            developer info: "TTC assumed instant. Sources for distribution result: https://www.recordedfuture.com/mitre-attack-tactics/, https://krisk.io/post/sok-attack-securecomm19.pdf, https://nakedsecurity.sophos.com/2010/07/27/large-piece-malware/"
            ->  attemptBinaryPadding,
                steganography,
                compileAfterDelivery,
                indicatorRemovalFromTools   

        | steganography
            developer info: "Binary probability dsitribution."
            user info: "Adversaries may use steganographic techniques to hide command and control traffic to make detection efforts more difficult."
            ->  computer.router.internalNetwork.bypassNetworkIntrusionDetection

        | attemptPrivateKeys @hidden
            ->  privateKeys

        & privateKeys //(0.51)]
            developer info: "Sources for distribution results: "
            user info: "Adversaries may gather private keys from compromised systems for use in authenticating to Remote Services like SSH or for use in decrypting other collected files such as email. Private keys should require a password or passphrase for operation, so an adversary may also use Input Capture for keylogging or attempt to Brute Force the passphrase off-line."
            ->  service.remoteServices,
                privateKeysWithPassphrase

        | privateKeysWithPassphrase
            developer info: "Binary probability distribution. Probability carried by privateKeys and TTC by bruteForce/inputCapture"
             ->  service.remoteServices

        | resourceHijacking //} //(0.046)*Exponential(48)]
            developer info: "https://www.fireeye.com/current-threats/annual-threat-report/mtrends.html, https://www.ptsecurity.com/ww-en/analytics/cybersecurity-threatscape-2019-q1/, https://content.fireeye.com/apt-41/rpt-apt41, https://github.com/xmrig/xmrig, https://steemit.com/utopian-io/@afterglow/tutorial-how-to-install-configure-and-use-xmrig-cryptocurrency-miner-for-monero-on-your-computer"
            user info: "Adversaries may consume enough system resources to negatively impact and/or cause affected machines to become unresponsive."
            ->  computer.unresponsive  

        & communicationThroughRemovableMedia

        | remoteSystemDiscovery
            developer info: "Binary probability distribution. https://capec.mitre.org/data/definitions/292.html "
            user info: "Adversaries will likely attempt to get a listing of other systems by IP address, hostname, or other logical identifier on a network that may be used for Lateral Movement from the current system."

        & detailedRemoteSystemDiscovery
            developer info: "Binary probability distribution. https://capec.mitre.org/data/definitions/292.html "
            user info: "Adversaries with admin rights may get better details of the hosts enumerated"
               
        | fileAndDirectoryPermissionsModification //(0.2174)]
            user info: "File and directory permissions are commonly managed by discretionary access control lists (DACLs) specified by the file or directory owner."
            developer info: "Sources used for distribution result: https://attack.mitre.org/software/S0402, https://securelist.com/threats-to-macos-users/93116/, https://www.carbonblack.com/2019/02/12/tau-threat-intelligence-notification-new-macos-malware-variant-of-shlayer-osx-discovered/"

        | impareDefenses
            user info: "Adversaries may maliciously modify components of a victim environment in order to hinder or disable defensive mechanisms."
            ->  attemptDisableOrModifyTools,
                disableOrModifySystemFirewall,
                attemptIndicatorBlocking,
                service.disableOrModifyCloudFirewall

        | attemptDisableOrModifyTools @hidden
            ->  disableOrModifyTools

        & disableOrModifyTools //(0.23)*Exponential(111.55)]
            developer info: "Sources for probability distribution: https://redcanary.com/threat-detection-report/techniques/disabling-security-tools/, https://labs.sentinelone.com/trickbot-update-brief-analysis-of-a-recent-trickbot-payload/, https://www.esentire.com/assets/resourcefiles/eSentire-2019-Annual-Threat-Intelligence-Report-2019-Perspectives-and-2020-Predictions.pdf, https://www.wilbursecurity.com/2020/03/trickbot-to-ryuk-in-two-hours/, https://www.trustwave.com/en-us/resources/blogs/spiderlabs-blog/tale-of-the-two-payloads-trickbot-and-nitol/"
            user info: "Adversaries may disable security tools to avoid possible detection of their tools and activities."
            ->  bypassAntivirus,
                bypassFileMonitoring,
                bypassHostIntrusionPrevention,
                bypassLogAnalysis,
                bypassSignatureBasedDetection

        & disableOrModifySystemFirewall
            user info: "Adversaries may disable or modify system firewalls in order to bypass controls limiting network usage."
            ->  computer.router.firewall.bypassFirewall,
                computer.router.internalNetwork.c2Connected // modifying or disabling a system firewall may enable adversary C2 communications

        | attemptIndicatorBlocking @hidden
            ->  indicatorBlocking

        & indicatorBlocking
            user info: "An adversary may attempt to block indicators or events typically captured by sensors from being gathered and analyzed."
            ->  bypassAntivirus,
                bypassHostIntrusionPrevention

        | scheduledTaskOrJob
            developer info: "Binary probability distribution."
            user info: "Adversaries may abuse task scheduling functionality to facilitate initial or recurring execution of malicious code."

        | serverSoftwareComponent
            user info: "Adversaries may abuse legitimate extensible development features of servers to establish persistent access to systems."
            ->  computer.router.internalNetwork.webShell

        | softwareDiscovery //(0.83387)]
            user info: "Adversaries may attempt to get a listing of non-security related software that is installed on the system."
            developer info: "TTC assumed instant. Sources used for probability distribution result: https://krisk.io/post/sok-attack-securecomm19.pdf, https://www.recordedfuture.com/mitre-attack-tactics/, https://attack.mitre.org/techniques/T1063/"
            ->  securitySoftwareDiscovery,
                service.attemptExploitationForPrivilegeEscalation

        & securitySoftwareDiscovery
            user info: "Adversaries may attempt to get a listing of security software, configurations, defensive tools, and sensors that are installed on the system. This may include things such as local firewall rules and anti-virus. These checks may be built into early-stage remote access tools."
            developer info: "Binary probability distribution."
            ->  service.attemptExploitationForDefenseEvasion // leads to exploitation for defense evasion attack

        | systemAccess

        & systemInformationDiscovery //(0.7133)]
            user info: "An adversary may attempt to get detailed information about the operating system and hardware, including version, patches, hotfixes, service packs, and architecture."
            developer info: "TTC assumed instant. sources used for distribution result: https://www.recordedfuture.com/mitre-attack-tactics/, https://krisk.io/post/sok-attack-securecomm19.pdf, https://attack.mitre.org/techniques/T1082/"
            ->  processInjection,
                systemChecks,
                systemNetworkConfigurationDiscovery,
                systemNetworkConnectionsDiscovery

        | systemNetworkConnectionsDiscovery //(24)]
            developer info: "Sources for distribution results: https://alvinalexander.com/blog/post/linux-unix/linux-lsof-command/, https://attack.mitre.org/techniques/T1049/"
            user info: "Adversaries may attempt to get a listing of network connections to or from the compromised system they are currently accessing or from remote systems by querying for information over the network."

        | systemOwnerOrUserDiscovery
            developer info: "Binary probability distribution."
            user info: "Adversaries may attempt to identify the primary user, currently logged in user, set of users that commonly uses a system, or whether a user is actively using the system."
            ->  userAccount.userInformation

        | systemServices
            user info: "Adversaries may abuse system services or daemons to execute commands or programs."

        | systemShutdownOrReboot //}
            user info: "Adversaries may shutdown/reboot systems to interrupt access to, or aid in the destruction of, those systems."

        | processInjection //(0.35)*Exponential(127.1)] 
            user info: "Process injection is a method of executing arbitrary code in the address space of a separate live process. It can be used for Defense Evasion and Privilege Escalation."
            developer info: "Sources used for probability distribution: https://redcanary.com/threat-detection-report/techniques/process-injection/, https://labs.sentinelone.com/trickbot-update-brief-analysis-of-a-recent-trickbot-payload/, https://www.wilbursecurity.com/2020/03/trickbot-to-ryuk-in-two-hours/, https://www.trustwave.com/en-us/resources/blogs/spiderlabs-blog/tale-of-the-two-payloads-trickbot-and-nitol/"

        | attemptProtocolTunneling @hidden
            ->  protocolTunneling

        & protocolTunneling
            user info: "Adversaries may tunnel network communications to and from a victim system within a separate protocol to avoid detection/network filtering and/or enable access to otherwise unreachable systems."
            ->  dynamicResolution, // DNS over HTTPS
                proxy, // conceal C2 communications and infrastructure
                computer.router.internalNetwork.attemptProtocolImpersonation // conceal C2 communications and infrastructure

        | rootkit //(0.01255)]
            user info: "Adversaries may use rootkits to hide the presence of programs, files, network connections, services, drivers, and other system components."
            developer info: "Sources used for distribution: https://www.csoonline.com/article/3222066/how-to-detect-and-remove-a-rootkit-in-windows-10.html, https://investors.fireeye.com/static-files/56c2c6ec-3cdc-4fd2-967e-29205d2e982e, https://intezer.com/blog/linux/hiddenwasp-malware-targeting-linux-systems/"
            ->  modifyAPICalls, 
                bypassAntivirus,
                bypassFileMonitoring,
                bypassProcessWhitelisting,
                bypassSignatureBasedDetection, 
                bypassHostIntrusionPrevention,
                bypassSystemAccessControls,
                bypassFileOrPathWhitelisting

        & runtimeDataManipulation //}
            developer info: "Binary probability distribution."
            user info: "By manipulating runtime data, adversaries may attempt to affect a business process, organizational understanding, and decision making."

        | attemptApplicationLayerProtocol @hidden
            ->  applicationLayerProtocol    

        & applicationLayerProtocol //(0.20)]
            user info: "Adversaries may communicate using a common, standardized application layer protocol such as HTTP, HTTPS, SMTP, or DNS to avoid detection by blending in with existing traffic."
            developer info: "Sources used for distribution result: https://content.carbonblack.com/c/vmwcb-threat-report-?x=f_lWMB"
            ->  webProtocols,
                fileTransferProtocols,
                mailProtocols,
                dNS

        | attemptNonApplicationLayerProtocol @hidden
            ->  nonApplicationLayerProtocol

        & nonApplicationLayerProtocol
            user info: "Adversaries may use a non-application layer protocol for communication between host and C2 server or among infected hosts within a network."
            ->  computer.router.internalNetwork.c2Connected

        | webProtocols
            user info: "Adversaries may communicate using application layer protocols associated with web traffic to avoid detection/network filtering by blending in with existing traffic."
            ->  computer.router.internalNetwork.c2Connexion

        | fileTransferProtocols
            user info: "Adversaries may communicate using application layer protocols associated with transferring files to avoid detection/network filtering by blending in with existing traffic."
            ->  computer.router.internalNetwork.c2Connexion

        | mailProtocols
            user info: "Adversaries may communicate using application layer protocols associated with electronic map delivery to avoid detection/network filtering by blending in with existing traffic."
            ->  computer.router.internalNetwork.c2Connexion

        & dNS
            user info: "Adversaries may communicate using the Domain Name System (DNS) application layer protocol to avoid detection/network filtering by blending in with existing traffic."
            ->  computer.router.internalNetwork.c2Connexion

        | systemNetworkConfigurationDiscovery //(144)]
            developer info: "Sources for distribution results: https://attack.mitre.org/techniques/T1016/"
            user info: "Adversaries will likely look for details about the network configuration and settings of systems they access or through information discovery of remote systems."

        & twoFactorAuthenticationInterception
            user info: "Adversaries may target authentication mechanisms, such as smart cards, to gain access to systems, services, and network resources."
            ->  proxy

        | modifyAPICalls                

        | bypassAntivirus

        | bypassAutorunsAnalysis

        | bypassApplicationControl

        | bypassApplicationWhitelisting

        | bypassBinaryAnalysis

        | bypassDefensiveNetworkServiceScanning

        | bypassDigitalCertificateValidation   

        | bypassEgressFiltering

        | bypassFileMonitoring

        | bypassFileOrPathWhitelisting

        | bypassFileSystemAccessControls

        | bypassHeuristicDetection

        | bypassHostForensicAnalysis
        
        | bypassHostIntrusionPrevention

        | bypassProcessWhitelisting

        | bypassSystemAccessControls

        | bypassLogAnalysis        
        
        | bypassSignatureBasedDetection

        | bypassStaticFileAnalysis

        | bypassUserModeSignatureValidation
        
        | passwordPolicyDiscovery
            developer info: "Binary probability distribution."
            ->  bruteForceWithPasswordPolicy

        & bruteForceWithPasswordPolicy //(0.83)*Exponential(0.3)]
            developer info: "Sources for distribution result: Filip Wilén and Andreas Westman. 'IoT-lang: Threat modeling for Internet of Things'. Unpublished paper. https://press.avast.com/83-of-americans-are-using-weak-passwords"
            ->  userAccount.userCredentials // the probability distribution should be so that it has higher chance of success than the bruteforce attack

        | bruteForce //(0.42)*Exponential(0.3)]
            user info: "Adversaries may use brute force techniques to attempt access to accounts when passwords are unknown or when password hashes are obtained."
            developer info: "Sources for distribution result: Filip Wilén and Andreas Westman. 'IoT-lang: Threat modeling for Internet of Things'. Unpublished paper."
            ->  passwordGuessing,
                attemptPasswordCracking,
                passwordSpraying,
                credentialStuffing,
                attemptPrivateKeys

        & passTheHash //(0.16)*Exponential(480)]
            user info: "This method bypasses standard authentication steps that require a cleartext password, moving directly into the portion of the authentication that uses the password hash."
            developer info: "Sources used for distribution result: https://www.securityweek.com/pass-hash-remains-poorly-defended-threat-vector, https://www.youtube.com/watch?v=6em5TUASfHM, https://www.youtube.com/watch?v=bTYR_xYSDIk"

        & passTheTicket
            developer info: "Binary probability distribution"
            user info: "Pass the ticket (PtT) is a method of authenticating to a system using Kerberos tickets without having access to an account's password."

        & passwordGuessing
            user info: "Adversaries with no prior knowledge of legitimate credentials within the system or environment may guess passwords to attempt access to accounts."
            ->  userAccount.userCredentials // https://us-cert.cisa.gov/ncas/alerts/TA18-086A

        | attemptPasswordCracking @hidden
            ->  passwordCracking

        & passwordCracking
            user info: "Adversaries may use password cracking to attempt to recover usable credentials, such as plaintext passwords, when credential material such as password hashes are obtained."
            ->  userAccount.userCredentials

        & passwordSpraying
            user info: "Adversaries may use a single or small list of commonly used passwords against many different accounts to attempt to acquire valid account credentials."
            ->  userAccount.userCredentials        

        & credentialStuffing
            user info: "Adversaries may use credentials obtained from breach dumps of unrelated accounts to gain access to target accounts through credential overlap."
            ->  userAccount.userCredentials

        | permissionGroupsDiscovery //(0.0526)]
            developer info: "Sources for probability result: Red Canary ATT&CK technique percentages (Top 50), https://www.fireeye.com/current-threats/annual-threat-report/mtrends.html, https://attack.mitre.org/techniques/T1069/"
            user info: "Adversaries may attempt to find group and permission settings. This information can help adversaries determine which user accounts and groups are available, the membership of users in particular groups, and which users and groups have elevated permissions."
            ->  localGroups,
                domainGroups,
                service.cloudGroups

        & localGroups
            user info: "Adversaries may attempt to find local system groups and permission settings. The knowledge of local system permission groups can help adversaries determine which groups exist and which users belong to a particular group." 

        & domainGroups
            user info: "Adversaries may attempt to find domain-level groups and permission settings. The knowledge of domain-level permission groups can help adversaries determine which groups exist and which users belong to a particular group."

        | preOSBoot
            user info: "Adversaries may abuse Pre-OS Boot mechanisms as a way to establish persistence on a system."

        | attemptAntivirusCheck @hidden
            ->  antivirusCheck    

        & antivirusCheck
            ->  executeCode,
                service.attemptExploitationForClientExecution

        | persistence

        | sSHCredentialInterception

        & storedDataManipulation //}
            developer info: "Binary probability distribution."
            user info: "Adversaries may insert, delete, or manipulate data at rest in order to manipulate external outcomes or hide activity."    

        & nonStandardPort //(0.1198)]
            developer info: "Sources used for distribution result: https://www.speedguide.net/ports_common.php"
            user info: "Adversaries may communicate using a protocol and port paring that are typically not associated."
            ->  computer.router.internalNetwork.c2Connected

        | subvertTrustControls
            user info: "Adversaries may undermine security controls that will either warn users of untrusted activity or prevent execution of untrusted programs."
            ->  installRootCertificate

        & installRootCertificate
            user info: "Installation of a root certificate on a compromised system would give an adversary a way to degrade the security of that system."
            ->  bypassDigitalCertificateValidation  

        | unsecuredCredentials
            user info: "Aversaries may search compromised systems to find and obtain insecurely stored credentials."
            ->  credentialsInFiles,
                privateKeys,
                service.cloudInstanceMetadataAPI

        | attemptCredentialsInFiles @hidden
            ->  credentialsInFiles

        & credentialsInFiles //(0.0179)*Exponential(282)]
            developer info: "Sources for distribution result: https://www.fireeye.com/current-threats/annual-threat-report/mtrends.html, https://krisk.io/publication/mitre-attack-securecomm19/, https://www.crowdstrike.com/resources/reports/observations-from-the-front-lines-of-threat-hunting-2019/, https://blog.talosintelligence.com/2018/07/smoking-guns-smoke-loader-learned-new.html#more, https://www.statista.com/statistics/751847/worldwide-seagate-western-digital-average-hard-drive-capacity/, https://www.hardware-revolution.com/how-much-storage-capacity-do-i-need-for-my-computer-2020/"
            ->  userAccount.userCredentials,
                service.browser.browserBookmarkDiscovery // associated with logins cached by a browser provides additional targets 

        | validAccounts
            developer info: "Binary probability relation."
            user info: "Adversaries may steal the credentials of a specific user or service account using Credential Access techniques or capture credentials earlier in their reconnaissance process through social engineering for means of gaining Initial Access."
            ->  defaultAccounts,
                attemptDomainAccounts,
                attemptLocalAccounts,
                service.cloudAccounts

        & defaultAccounts
            user info: "Adversaries may obtain and abuse credentials of a default account as a means of gaining Initial Access, Persistence, Privilege Escalation, or Defense Evasion."
            ->  service.remoteServices,
                service.attemptExternalRemoteServices, // https://us-cert.cisa.gov/ncas/alerts/aa20-107a
                computer.router.internalNetwork.bypassNetworkIntrusionDetection,
                computer.router.firewall.bypassFirewall,
                bypassHostIntrusionPrevention,
                bypassApplicationControl,
                bypassSystemAccessControls,
                bypassAntivirus

        | attemptDomainAccounts @hidden
            ->  domainAccounts

        & domainAccounts
            user info: "Adversaries may obtain and abuse credentials of a domain account as a means of gaining Initial Access, Persistence, Privilege Escalation, or Defense Evasion."
            ->  service.remoteServices,
                service.attemptExternalRemoteServices, // https://us-cert.cisa.gov/ncas/alerts/aa20-107a
                computer.router.internalNetwork.bypassNetworkIntrusionDetection,
                computer.router.firewall.bypassFirewall,
                bypassHostIntrusionPrevention,
                bypassApplicationControl,
                bypassSystemAccessControls,
                bypassAntivirus

        | attemptLocalAccounts @hidden
            ->  localAccounts

        & localAccounts
            user info: "Adversaries may obtain and abuse credentials of a local account as a means of gaining Initial Access, Persistence, Privilege Escalation, or Defense Evasion."
            ->  service.remoteServices,
                service.attemptExternalRemoteServices, // https://us-cert.cisa.gov/ncas/alerts/aa20-107a
                computer.router.internalNetwork.bypassNetworkIntrusionDetection,
                computer.router.firewall.bypassFirewall,
                bypassHostIntrusionPrevention,
                bypassApplicationControl,
                bypassSystemAccessControls,
                bypassAntivirus

        | virtualizationOrSandboxEvasion //(0.18)]
            user info: "Adversaries may check for the presence of a virtual machine environment (VME) or sandbox to avoid potential detection of tools and activities."
            developer info: "Sources for distribution result: http://www.sharetech-me.com/wp-content/uploads/2015/06/21347932_GA-internet-security-threat-report-volume-20-2015-social_v2.pdf, https://docs.broadcom.com/docs/threats-to-virtual-environments-14-en"
            ->  systemChecks,
                userActivityBasedChecks,
                timeBasedEvasion

        | systemChecks
            user info: "Adversaries may employ various system checks to detect and avoid virtualization and analysis environments."
            ->  bypassAntivirus,
                bypassHostForensicAnalysis,    
                bypassSignatureBasedDetection,  
                bypassStaticFileAnalysis

        | userActivityBasedChecks
            user info: "Adversaries may employ various user activity checks to detect and avoid virtualization and analysis environments."
            ->  bypassAntivirus,
                bypassHostForensicAnalysis,    
                bypassSignatureBasedDetection,  
                bypassStaticFileAnalysis

        | timeBasedEvasion
            user info: "Adversaries may employ various time-based methods to detect and avoid virtualization and analysis environments."
            ->  scheduledTaskOrJob,
                attemptMultiStageChannels,
                bypassAntivirus,
                bypassHostForensicAnalysis,    
                bypassSignatureBasedDetection,  
                bypassStaticFileAnalysis

        & vNC
            user info: "Adversaries may use Valid Accounts to remotely control machines using Virtual Network Computing (VNC)."

        | fileDeletion //(0.1238)]
            user info: "Adversaries may remove traces (files) over the course of an intrusion to keep their footprint low or remove them at the end as part of the post-intrusion cleanup process"
            developer info: "Sources used for distribution result: https://www.fireeye.com/current-threats/annual-threat-report/mtrends.html, https://krisk.io/post/sok-attack-securecomm19.pdf, https://docs.microsoft.com/en-us/sysinternals/downloads/sdelete"
            ->  bypassHostForensicAnalysis

        | fileAndDirectoryDiscovery //(0.3197)]
            developer info: "Sources for distribution result: https://www.sans.org/cyber-security-summit/archives/file/summit_archive_1536351477.pdf, https://krisk.io/publication/mitre-attack-securecomm19/, https://www.fireeye.com/current-threats/annual-threat-report/mtrends.html, "
            user info: "Adversaries may enumerate files and directories or may search in specific locations of a host or network share for certain information within a file system."
            ->  attemptAutomatedCollection

        | diskWipe //}
            user info: "Adversaries may wipe or corrupt raw disk data on specific systems or in large numbers in a network to interrupt availability to system and network resources."
            ->  diskContentWipe,
                diskStructureWipe

        & diskContentWipe //} //(0.5433)*Exponential(126.437)]
            user info: "Adversaries may erase the contents of storage devices on specific systems as well as large numbers of systems in a network to interrupt availability to system and network resources."
            developer info: "Sources used for probability distribution: https://www.helpnetsecurity.com/2020/04/03/back-up-data/, https://threatpost.com/secrets-of-the-wiper-inside-the-worlds-most-destructive-malware/131836/, https://www.statista.com/statistics/795748/worldwide-seagate-average-hard-disk-drive-capacity/, https://hdd.userbenchmark.com/"
       
        & diskStructureWipe //}
            user info: "Adversaries may corrupt or wipe the disk data structures on hard drive necessary to boot systems; targeting specific critical systems as well as a large number of systems in a network to interrupt availability to system and network resources."

        & remoteFileCopy //(0.29)]
            user info: "Files may be copied from one system to another to stage adversary tools or other files over the course of an operation."
            developer info: "TTC is very low (10-20 seconds) and is excluded. Sources used for probability result: https://redcanary.com/threat-detection-report/techniques/remote-file-copy/. For estimates on TTC please see remoteFileCopy.md in the Dropbox/MAL work/enterpriselang probability findings/folder."
            ->  computer.user.attemptUserExecution, // leads to file execution attacks
                attemptAutomatedCollection // combined with Remote File Copy attack
        
        | sensitiveDataCollected
            ->  dataCompressed,
                computer.attemptExfiltrationOverPhysicalMedium,
                dataSizedTransfer,
                attemptExfiltrationOverAternativeProtocol,
                scheduledExfiltration,
                computer.router.internalNetwork.attemptExfiltrationOverC2Channel,
                automatedExfiltration,
                dataEncrypted, 
                dataStaged    

        | dataCollected
            ->  dataCompressed,
                computer.attemptExfiltrationOverPhysicalMedium,
                attemptExfiltrationOverAternativeProtocol,
                scheduledExfiltration,
                computer.router.internalNetwork.attemptExfiltrationOverC2Channel,
                dataEncrypted,
                dataStaged,
                automatedExfiltration,
                dataSizedTransfer

        | dataEncrypted //(0.567)*Exponential(3.25)]
            user info: "Data is encrypted before being exfiltrated in order to hide the information that is being exfiltrated from detection or to make the exfiltration less conspicuous upon inspection by a defender."
            developer info: "Sources for TTC too many to list, please see 'enterpriselang probabilities/dataEncrypted.md'. Other sources: https://www.recordedfuture.com/mitre-attack-tactics/, https://krisk.io/post/sok-attack-securecomm19.pdf "
            ->  computer.attemptExfiltrationOverPhysicalMedium,
                attemptExfiltrationOverAternativeProtocol,
                scheduledExfiltration,
                computer.router.internalNetwork.attemptExfiltrationOverC2Channel,
                automatedExfiltration

        | dataSizedTransfer
            user info: "An adversary may exfiltrate data in fixed size chunks instead of whole files or limit packet sizes below certain thresholds. This approach may be used to avoid triggering network data transfer threshold alerts."
            ->  computer.router.internalNetwork.dataExfiltration

        | dataStaged //(0.01025)]
            developer info: "Sources for distribution result: Red Canary top 50 att&ck techniques (private google sheets document), https://krisk.io/publication/mitre-attack-securecomm19/"
            user info: "Collected data is staged in a central location or directory prior to Exfiltration. Data may be kept in separate files or combined into one file through techniques such as Data Compressed or Data Encrypted."
            ->  localDataStaging,
                remoteDataStaging

        | localDataStaging
            user info: "Adversaries may stage collected data in a central location or directory on the local system prior to Exfiltration."
            ->  archiveCollectedData, // Data may be kept in separate files or combined into one file through techniques such as Archive Collected Data
                computer.attemptExfiltrationOverPhysicalMedium, // leads to exfiltration attacks
                computer.router.internalNetwork.attemptExfiltrationOverC2Channel,
                attemptExfiltrationOverAternativeProtocol,
                scheduledExfiltration,
                dataCompressed,
                dataEncrypted

        & replicationThroughRemovableMedia //(0.45)*Exponential(3.429)]
            user info: "Adversaries may move onto systems, possibly those on disconnected or air-gapped networks, by copying malware to removable media and taking advantage of Autorun features when the media is inserted into a system and executes."
            developer info: "Sources for distribution result: https://ieeexplore.ieee.org/abstract/document/7546509, https://threatpost.com/never-trust-a-found-usb-drive-black-hat-demo-shows-why/119653/"

        | remoteDataStaging
            user info: "Adversaries may stage data collected from multiple systems in a central location or directory on one system prior to Exfiltration."
            ->  archiveCollectedData,
                computer.attemptExfiltrationOverPhysicalMedium, // leads to exfiltration attacks
                computer.router.internalNetwork.attemptExfiltrationOverC2Channel,
                attemptExfiltrationOverAternativeProtocol,
                scheduledExfiltration,
                dataCompressed,
                dataEncrypted
     
        | attemptDataDestruction @hidden
            ->  dataDestruction
                    
        & dataDestruction //}
            developer info: "Binary probability distribution."
            ->  inhibitSystemRecovery // disable or delete system recovery features to augment the effects

        | attemptDataEncryptedForImpact @hidden
            ->  dataEncryptedForImpact

        & dataEncryptedForImpact //} //(0.366)*Exponential(12)]
            user info: "Adversaries may encrypt data on target systems or on large numbers of systems in a network to interrupt availability to system and network resources. To maximize impact on the target organization, malware designed for encrypting data may have worm-like features to propagate across a network by leveraging other attack techniques like Valid Accounts, Credential Dumping, and Windows Admin Shares."
            developer info: "Sources used for probability distribution result: https://www.google.com/url?sa=t&rct=j&q=&esrc=s&source=web&cd=&ved=2ahUKEwje19GOp5rqAhXnl4sKHSJbDFcQFjANegQIMBAB&url=https%3A%2F%2Fwww.checkpoint.com%2Fdownloads%2Fproducts%2Fransomware-defense-survey-for-enterprise.pdf&usg=AOvVaw1Om5gqIJ3-Gcf7efzgIby9, https://news.sophos.com/en-us/2020/05/12/the-state-of-ransomware-2020/, https://www.exabeam.com/library/anatomy-ransomware-attack/"
            ->  validAccounts,
                oSCredentialDumping,
                inhibitSystemRecovery

        & dataCompressed //(0.75)]
            developer info: "TTC assumed instant. For more info see enterpriselang probabilities/dataCompressed.md. Sources used for distribution: https://cloud.google.com/security/data-loss-prevention/preventing-data-exfiltration, https://targetedthreats.net/media/4-Glossary.pdf, https://www.wiley.com/en-se/The+Art+of+Memory+Forensics%3A+Detecting+Malware+and+Threats+in+Windows%2C+Linux%2C+and+Mac+Memory-p-9781118824993 pg. 560"
            ->  dataEncrypted,
                automatedExfiltration,
                computer.attemptExfiltrationOverPhysicalMedium,
                computer.router.internalNetwork.attemptExfiltrationOverC2Channel,
                scheduledExfiltration

        & inhibitSystemRecovery //}
            user info: "Adversaries may delete or remove built-in operating system data and turn off services designed to aid in the recovery of a corrupted system to prevent recovery."    
            ->  systemShutdownOrReboot

        | screenCapture
            developer info: "Binary probability distribution"
            user info: "Adversaries may attempt to take screen captures of the desktop to gather information over the course of an operation." 
            ->  dataCollected

        | scheduledExfiltration //(0.92)*Exponential(0.384)]
            developer info: "Sources for distribution results: https://www.welivesecurity.com/wp-content/uploads/2016/10/eset-sednit-part-2.pdf, https://www.welivesecurity.com/wp-content/uploads/2020/05/ESET_Turla_ComRAT.pdf, https://www.mcafee.com/enterprise/en-us/assets/reports/rp-data-exfiltration.pdf"
            ->  computer.router.internalNetwork.dataExfiltration         
    
        | attemptExfiltrationOverAternativeProtocol @hidden
            ->  exfiltrationOverAternativeProtocol

        & exfiltrationOverAternativeProtocol //(0.79224)*Exponential(1878)]
            developer info: "Sources for distribution results: https://repo.zenk-security.com/Techniques%20d.attaques%20%20.%20%20Failles/Exfiltration%20Techniques%20-%20An%20examination%20And%20Emulation.pdf, https://www.mcafee.com/enterprise/en-us/assets/reports/rp-data-exfiltration.pdf"
            user info: "https://attack.mitre.org/techniques/T1048/"
            ->  exfiltrationOverAsymmetricEncryptedNonC2Protocol,
                exfiltrationOverSymmetricEncryptedNonC2Protocol,
                exfiltrationOverUnencryptedOrObfuscatedNonC2Protocol

        | exfiltrationOverAsymmetricEncryptedNonC2Protocol
            developer info: "Binary probability distribution. Probability carried by exfiltrationOverAternativeProtocol "
            user info: "Adversaries may steal data by exfiltrating it over an asymmetrically encrypted network protocol other than that of the existing command and control channel."
            ->  computer.router.internalNetwork.dataExfiltration

        | exfiltrationOverSymmetricEncryptedNonC2Protocol
            developer info: "Binary probability distribution. Probability carried by exfiltrationOverAternativeProtocol "
            user info: "Adversaries may steal data by exfiltrating it over a symmetrically encrypted network protocol other than that of the existing command and control channel."
            ->  computer.router.internalNetwork.dataExfiltration

        | exfiltrationOverUnencryptedOrObfuscatedNonC2Protocol
            developer info: "Binary probability distribution. Probability carried by exfiltrationOverAternativeProtocol "
            user info: "Adversaries may steal data by exfiltrating it over an un-encrypted network protocol other than that of the existing command and control channel."  
            ->  computer.router.internalNetwork.dataExfiltration

        | dataFromInformationRepositories //(9.952)]
            developer info: "Sources for distribution results: See automatedCollection.md and dataFromInformationRepositories.md"
            user info: "Adversaries may leverage information repositories to mine valuable information."
            ->  confluence,
                sharepoint

        & confluence //(0.74)]
            developer info: "Sources for distribution results: https://www.quora.com/Whats-the-number-of-companies-actively-using-SharePoint-worldwide#:~:text=Microsoft%20is%20adding%20approximately%2020%2C000,on%20it%20for%20document%20management. and automatedCollection.md results"
            user info: "Adversaries may leverage Confluence repositories to mine valuable information."
            ->  service.informationRepositories
   
        & sharepoint //(0.71)]
            developer info: "Sources for distribution results: https://www.atlassian.com/customers and automatedCollection.md results"
            user info: "Adversaries may leverage the SharePoint repository as a source to mine valuable information."
            ->  service.informationRepositories

        & windowsService
            user info: "Adversaries may install a new service that can be configured to execute at startup by using utilities to interact with services or by directly modifying the Registry."

        | attemptAutomatedCollection @hidden
            ->  automatedCollection

        & automatedCollection //(0.892)*Exponential(9.952)]
            developer info: "Sources for distribution results available in the ../entrepriselang_probabilities/automatedCollection.md file"
            user info: "Once established within a system or network, an adversary may use automated techniques for collecting internal data."
            ->  dataCollected, 
                sensitiveDataCollected

        | automatedExfiltration
            developer info: "Binary probability distribution."
            ->  attemptExfiltrationOverAternativeProtocol,
                computer.router.internalNetwork.attemptExfiltrationOverC2Channel

        & networkServiceScan //(72)]
            developer info: "Sources for distribution results: https://www.acunetix.com/blog/docs/how-long-does-a-scan-take-to-complete/#:~:text=The%20duration%20of%20a%20scan,between%202%20and%204%20hours."
            user info: "Adversaries may attempt to get a listing of services running on remote hosts, including those that may be vulnerable to remote software exploitation."
            ->  service.attemptExploitationOfRemoteServices

        # antivirus //(0.53)]
            user info: "https://attack.mitre.org/mitigations/M1049/"
            developer info: "Sources for distribution result: https://ieeexplore.ieee.org/abstract/document/5665797; https://www.sans.org/reading-room/whitepapers/analyst/endpoint-protection-response-survey-38460; https://www.businesswire.com/news/home/20100804005348/en/Cyveillance-Testing-Finds-AV-Vendors-Detect-Average"
            ->  antivirusCheck,
                commandAndScriptingInterpreter,
                visualBasic,
                python,
                service.browser.spearphishingAttachment,
                service.browser.spearphishingLink,
                service.spearphishingViaService   

        # restrictFileAndDirectoryPermissions 
            user info: "https://attack.mitre.org/mitigations/M1022/"
            ->  credentialsInFiles,
                disableOrModifyTools,
                disableOrModifySystemFirewall,
                indicatorRemovalOnHost,
                matchLegitimateNameOrLocation,
                privateKeys,
                renameSystemUtilities,
                runtimeDataManipulation,
                storedDataManipulation,
                visualBasic,
                javaScriptOrJScript,
                computer.router.externalNetwork.dataFromCloudStorageObject,
                computer.router.internalNetwork.taintSharedContent

        # restrictRegistryPermissions
            user info: "https://attack.mitre.org/mitigations/M1024/"
            ->  disableOrModifyTools,
                disableOrModifySystemFirewall

        # accountUsePolicies // Set account lockout policies after a certain number of failed login attempts to prevent passwords from being guessed. Too strict a policy may create a denial of service condition and render environments un-usable, with all accounts used in the brute force being locked-out.
            user info: "https://attack.mitre.org/mitigations/M1036/" 
            developer info: "Binary probability relation."
            ->  passwordGuessing,
                passwordSpraying,
                credentialStuffing

        # behaviorPreventionOnEndpoint
            user info: "https://attack.mitre.org/mitigations/M1040/"

        # bootIntegrity 
            user info: "https://attack.mitre.org/mitigations/M1046/"
            ->  firmwareCorruption,
                service.compromiseHardwareSupplyChain
 
        # dataBackup //(0.4567)]
            user info: "https://attack.mitre.org/mitigations/M1053/"
            developer info: "Source for distribution results: https://www.helpnetsecurity.com/2020/04/03/back-up-data/"
            ->  dataDestruction,
                dataEncryptedForImpact,
                inhibitSystemRecovery,
                diskContentWipe,
                diskStructureWipe,
                computer.router.internalNetwork.internalDefacement,
                computer.router.externalNetwork.externalDefacement

        # multiFactorAuthentication //(0.99325)]
            developer info: "Sources for distribution result: https://security.googleblog.com/2019/05/new-research-how-effective-is-basic.html, https://www.zdnet.com/article/microsoft-using-multi-factor-authentication-blocks-99-9-of-account-hacks/"
            user info: "https://attack.mitre.org/mitigations/M1032/" 
            ->  credentialStuffing,
                localAccount,
                domainAccount,
                domainAccounts,
                passwordGuessing,
                passwordCracking,
                passwordSpraying,
                networkSniffing

        # passwordPolicies 
            user info: "https://attack.mitre.org/mitigations/M1027/" 
            ->  passwordGuessing,
                passwordCracking,
                passwordSpraying,
                credentialStuffing,
                credentialsInFiles,
                defaultAccounts,
                localAccounts,
                privateKeys

        # applicationIsolationAndSandboxing // Restrict execution of code to a virtual environment on or in transit to an endpoint system.
            user info: "https://attack.mitre.org/mitigations/M1048/"
            ->  service.browser.driveByCompromise

        # doNotMitigate // Execution Guardrails likely should not be mitigated with preventative controls because it may protect unintended targets from being compromised.
            user info: "https://attack.mitre.org/mitigations/M1055/"
            ->  environmentalKeying                

        # disableOrRemoveFeatureOrProgram 
            user info: "https://attack.mitre.org/techniques/T1064/"
            ->  javaScriptOrJScript,
                visualBasic,
                communicationThroughRemovableMedia,
                commandAndScriptingInterpreter,
                exfiltrationOverBluetooth,
                manInTheMiddle,
                runVirtualInstance,
                vNC

        # activeDirectoryConfiguration
            user info: "https://attack.mitre.org/mitigations/M1015/"
            ->  credentialsInFiles

        # audit 
            user info: "https://attack.mitre.org/mitigations/M1047/"
            ->  archiveViaUtility,
                confluence,
                sharepoint,
                credentialsInFiles,
                computer.router.externalNetwork.dataFromCloudStorageObject,
                privateKeys,
                python,
                vNC

        # applicationDeveloperGuidance
            user info: "https://attack.mitre.org/mitigations/M1013/"

        # codeSigning //(0.28)]
            user info: "https://attack.mitre.org/mitigations/M1045/" 
            ->  commandAndScriptingInterpreter,
                matchLegitimateNameOrLocation,
                service.applicationDeploymentSoftware,
                service.implantContainerImage

        # limitHardwareInstallation
            user info: "https://attack.mitre.org/mitigations/M1034/"
            developer info: "Binary probability relation."
            ->  computer.hardwareAdditions,
                computer.exfiltrationOverPhysicalMedium     

        # operatingSystemConfiguration 
            user info: "https://attack.mitre.org/mitigations/M1028/"
            ->  communicationThroughRemovableMedia,
                domainDiscovery,
                exfiltrationOverOtherNetworkMedium,
                inhibitSystemRecovery,
                installRootCertificate,
                localAccount,
                domainAccount

        # softwareConfiguration
            user info: "https://attack.mitre.org/mitigations/M1054/"
            ->  installRootCertificate,
                service.browser.stealWebSessionCookie,
                service.browser.webSessionCookie    

        # executionPrevention // Block execution of code on a system through application whitelisting, blacklisting, and/or script blocking.            
            user info: "https://attack.mitre.org/mitigations/M1038/"
            ->  applicationWindowDiscovery,
                commandAndScriptingInterpreter,
                binaryPadding,
                service.browser.browserExtensions,
                computer.collectAudio,
                dataCompressed,
                detailedRemoteSystemDiscovery,
                domainDiscovery,
                javaScriptOrJScript,
                matchLegitimateNameOrLocation,
                python,
                runVirtualInstance, 
                systemInformationDiscovery,
                visualBasic,
                userAccount.userExecution,
                userAccount.user.maliciousFile
             
        # privilegedAccountManagement //(0.30)]
            developer info: "Sources for distribution results : https://lp.alpha-gen.co.uk/2018-global-state-of-pam/"
            user info: "https://attack.mitre.org/mitigations/M1026/"
            ->  commandAndScriptingInterpreter,
                domainAccounts,
                localAccounts,
                webPortalCapture

        # encryptSensitiveInformation 
            user info: "https://attack.mitre.org/mitigations/M1041/"
            ->  indicatorRemovalOnHost,
                networkSniffing,
                privateKeys,
                storedDataManipulation,
                computer.router.externalNetwork.dataFromCloudStorageObject  

        # remoteDataStorage 
            user info: "https://attack.mitre.org/mitigations/M1029/"
            ->  automatedCollection,
                indicatorRemovalOnHost,
                storedDataManipulation,
                service.useThirdpartySoftware              

        # limitSoftwareInstallation
            user info: "https://attack.mitre.org/mitigations/M1033/"
            ->  python,
                vNC,
                service.browser.browserExtensions

        # updateSoftware //(0.567125)]
            user info: "https://attack.mitre.org/mitigations/M1051/"
            ->  firmwareCorruption

        # userAccountControl
            user info: "https://attack.mitre.org/mitigations/M1052/"
            ->  service.trustedRelationship

        # exploitProtection
            user info: "https://attack.mitre.org/mitigations/M1050/"
    }
    
    asset Windows extends OS {
        | abuseElevationControlMechanism
            user info: "Adversaries may circumvent mechanisms designed to control elevate privileges to gain higher-level permissions."
            +>  attemptBypassUserAccessControl

        | accountManipulation //(0.101)]
            user info: "Account manipulation may aid adversaries in maintaining access to credentials and certain permission levels within an environment." 
            developer info: "Sources used for probability distribution result: https://www.fireeye.com/current-threats/annual-threat-report/mtrends.html, https://attack.mitre.org/techniques/T1098/, https://www.us-cert.gov/ncas/alerts/TA18-074A" 
            +>  exchangeEmailDelegatePermissions

        & at
            user info: "Adversaries may abuse the at.exe utility to perform task scheduling for initial or recurring execution of malicious code."
            +>  attemptScheduledTask, // at can be used to schedule a task on a system
                executeCode

        | attemptAppCertDLLs @hidden
            +>  appCertDLLs 
            
        & appCertDLLs
            developer info: "Binaries probability distribution. Source for distribution results : Process Injection result and https://www.elastic.co/fr/blog/ten-process-injection-techniques-technical-survey-common-and-trending-process"
            user info: "This value can be abused to obtain persistence and privilege escalation by causing a malicious DLL to be loaded and run in the context of separate processes on the computer."
            +>  processInjection

        | attemptAppInitDLLs @hidden
            ->  appInitDLLs
            
        & appInitDLLs //(0.79)*Exponential(127.1)]
            developer info: "Sources for distribution results: Work on processInjection and https://www.spiceworks.com/marketing/network-security/pdf-report/"
            +>  persistence

        | attemptAccessibilityFeatures @hidden
            +>  accessibilityFeatures

        & accessibilityFeatures
            user info: "This helps attackers to open a System-level command shell, where the attackers can execute arbitrary Windows commands, including adding or modifying accounts on the system."
            developer info: "Binary probability distribution."
            +>  persistence

        | attemptBITSJobs @hidden
            +>  bITSJobs

        & bITSJobs //(0.264)]
            user info: "Adversaries may abuse BITS to download, execute, and even clean up after running malicious code."
            developer info: "TTC assumed instant. Sources used for probability distribution: https://blog.trendmicro.com/trendlabs-security-intelligence/tropic-trooper-new-strategy/, https://gs.statcounter.com/os-version-market-share/windows/desktop/worldwide, https://netmarketshare.com/operating-system-market-share.aspx, https://en.wikipedia.org/wiki/Windows_Desktop_Gadgets, https://www.fireeye.com/blog/threat-research/2018/03/suspected-chinese-espionage-group-targeting-maritime-and-engineering-industries.html" 
            +>  executeCode,
                persistence,
                attemptExfiltrationOverAternativeProtocol // BITS upload functionalities can be used to perform Exfiltration Over Alternative Protocol

        | bootOrLogonAutostartExecution
            +>  registryRunKeysOrStartupFolder,
                authenticationPackage,
                attemptTimeProviders,
                attemptWinlogonHelperDLL,
                attemptLSASSDriver,
                attemptShortcutModification,
                securitySupportProvider,
                portMonitors

        | attemptBootOrLogonInitializationScripts @hidden
            ->  bootOrLogonInitializationScripts

        & bootOrLogonInitializationScripts
            user info: "Adversaries may use scripts automatically executed at boot or logon initialization to establish persistence."
            ->  attemptLogonScripts,
                networkLogonScripts

        | networkLogonScripts
            user info: "Adversaries may use network logon scripts automatically executed at logon initialization to establish persistence."
            ->  computer.router.internalNetwork.persistence

        & clearWindowsEventLogs
            user info: "Adversaries may clear Windows Event Logs to hide the activity of an intrusion."
            +>  attemptPowerShell, // these logs may be cleared through PowerShell
                bypassAntivirus,
                bypassHostIntrusionPrevention,
                bypassLogAnalysis

        & cmstp
            user info: "Adversaries may abuse CMSTP to proxy execution of malicious code."
            developer info: "Binary probability distribution."
            +>  attemptBypassUserAccessControl, // leads to Bypass User Account Control attack
                codeProxyExecution,
                bypassAntivirus

        | codeSigningCertificate //(0.72)*Exponential(96)]
            user info: "Adversaries may create, acquire, or steal code signing materials to sign their malware or tools."
            developer info: "Sources for distribution results:https://www.venafi.com/blog/study-how-well-are-you-protecting-code-signing-certificates#:~:text=The%20study%20found%20that%20although,process%20for%20code%20signing%20certificates,https://duo.com/decipher/attackers-are-signing-malware-with-valid-certificates,https://cqureacademy.com/blog/windows-internals/code-signing"
            ->  attemptBypassUserAccessControl

        | collectHashInformation
            +>  attemptPassTheHash, // leads to Pass the Hash attack
                networkSniffing // leads to Network Sniffing attack

        & commandAndScriptingInterpreter //(0.24)]
            developer info: "Sources for distribution results: https://www.itjungle.com/2020/06/22/security-gaining-attention-on-ibm-i-but-more-progress-needed/"
            user info: "Adversaries may abuse command and script interpreters to execute commands, scripts, or binaries."
            +>  windowsCommandShell,
                attemptPowerShell

        | attemptComponentObjectModel @hidden
            user info: "Adversaries may use the Windows Component Object Model (COM) and Distributed Component Object Model (DCOM) for local code execution or to execute on remote systems as part of lateral movement. By default, only Administrators may remotely activate and launch COM objects through DCOM."
            ->  componentObjectModel

        & componentObjectModel //(96)]
            user info: "Adversaries may use the Windows Component Object Model (COM) and Distributed Component Object Model (DCOM) for local code execution or to execute on remote systems as part of lateral movement. By default, only Administrators may remotely activate and launch COM objects through DCOM."
            ->  executeCode

        | createOrModifySystemProcess
            user info: "Adversaries may create or modify system-level processes to repeatedly execute malicious payloads as part of persistence."
            +>  attemptWindowsService

        | attemptDistributedComponentObjectModel @hidden
            +>  distributedComponentObjectModel

        & distributedComponentObjectModel //(96)]
            user info: "Adversaries may use Valid Accounts to interact with remote machines by taking advantage of Distributed Component Object Model (DCOM)."
            +>  computer.router.internalNetwork.remoteCOMExecution

        | attemptControlPanel @hidden
            +>  controlPanel

        & controlPanel //(0.00006)]
            user info: "Adversaries may abuse control.exe to proxy execution of malicious payloads."
            developer info: "TTC assumed instant, see mitreattacklang/enterpriselang probabilities/controlPanelItems.md for details. Sources used for probability distribution result: https://attack.mitre.org/software/S0172/, https://threatvector.cylance.com/en_us/home/reaver-mapping-connections-between-disparate-chinese-apt-groups.html, https://nvd.nist.gov/vuln/detail/CVE-2017-11882#vulnConfigurationsArea, https://unit42.paloaltonetworks.com/unit42-new-malware-with-ties-to-sunorcal-discovered/, https://community.spiceworks.com/software/articles/2873-data-snapshot-the-state-of-productivity-suites-in-the-workplace"
            +>  executeCode,
                bypassApplicationControl,
                service.browser.phishing // malicious Control Panel items can be delivered via Phishing campaigns

        | componentObjectModelHijacking
            user info: "Adversaries can use Component Object Model (COM) system to insert malicious code that can be executed. When that system component is executed through normal system operation the adversary's code will be executed instead."
            +>  processInjection,
                persistence            

        | componentFirmware //(0.0000934)*Exponential(360)]
            user info: "Adversaries may compromise computer components and install malicious firmware that will execute adversary code outside of the operating system and main system firmware or BIOS."
            developer info: "https://attack.mitre.org/groups/, https://media.kasperskycontenthub.com/wp-content/uploads/sites/43/2018/03/08064459/Equation_group_questions_and_answers.pdf, https://eclypsium.com/2019/12/20/anatomy-of-a-firmware-attack/, https://www.youtube.com/watch?v=loBX_vEXxVA&feature=youtu.be"       
            +>  bypassFileMonitoring,
                bypassHostIntrusionPrevention, 
                bypassAntivirus         

        & compiledHTMLFile //(0.93)*Exponential(1)]
            user info: "Adversaries may abuse this technology to conceal malicious code, can be triggered by User Execution."
            developer info: "Sources for distribution results : https://blog.rootshell.be/2017/12/19/malware-delivered-via-compiled-html-help-file/"
            +>  computer.user.attemptUserExecution, // leads to User Execution attack
                bypassApplicationWhitelisting,
                bypassDigitalCertificateValidation   

        | attemptCOR_PROFILER @hidden
            ->  cOR_PROFILER

        & cOR_PROFILER
            user info: "Adversaries may leverage the COR_PROFILER environment variable to hijack the execution flow of programs that load the .NET CLR."
            +>  persistence,
                attemptBypassUserAccessControl, // to elevate privileges 
                attemptComponentObjectModel,
                impareDefenses

        | credentialAPIHooking
            developer info:"Binary probability distribution. Sources for distribution results : Process Injection findings and https://www.elastic.co/fr/blog/ten-process-injection-techniques-technical-survey-common-and-trending-process"  
            user info: "Adversaries may hook into Windows application programming interface (API) functions to collect user credentials."
            +>  userAccount.userCredentials

        & credentialsInRegistry //(0.02055)*Exponential(2618)]
            developer info: "Sources for distribution result: https://www.fireeye.com/current-threats/annual-threat-report/mtrends.html, https://www.crowdstrike.com/resources/reports/observations-from-the-front-lines-of-threat-hunting-2019/, https://attack.mitre.org/techniques/T1552/002/"
            +>  userAccount.userCredentials

        | dCShadow
            developer info: "Binary probability distribution."
            user info: "This technique may bypass system logging and security monitors such as security information and event management (SIEM) products."
            +>  attemptSIDHistoryInjection,
                bypassLogAnalysis

        & dCSync
            user info: "Adversaries may attempt to access credentials and other sensitive information by abusing a Windows Domain Controller's application programming interface (API) to simulate the replication process from a remote domain controller using a technique called DCSync."
            +>  attemptGoldenTicket, // hashes can then in turn be used to create a Golden Ticket for use in Pass the Ticket
                attemptSilverTicket,
                accountManipulation // hashes can then be used to change an account's password

        & dynamicLinkLibraryInjection
            developer info: "Binary probability distribution. Probability carried by Process Injection main technique"
            user info: "Adversaries may inject dynamic-link libraries (DLLs) into processes in order to evade process-based defenses as well as possibly elevate privileges."
            ->  bypassAntivirus,
                bypassApplicationControl

        & portableExecutableInjection
            developer info: "Binary probability distribution. Probability carried by Process Injection main technique"
            user info: "Adversaries may inject portable executables (PE) into processes in order to evade process-based defenses as well as possibly elevate privileges." 
            +>  bypassAntivirus,
                bypassApplicationControl

        & threadExecutionHijacking
            developer info: "Binary probability distribution. Probability carried by Process Injection main technique"
            user info: "Adversaries may inject malicious code into hijacked processes in order to evade process-based defenses as well as possibly elevate privileges." 
            +>  bypassAntivirus,
                bypassApplicationControl

        & asynchronousProcedureCall
            developer info: "Binary probability distribution. Probability carried by Process Injection main technique"
            user info: "Adversaries may inject malicious code into processes via the asynchronous procedure call (APC) queue in order to evade process-based defenses as well as possibly elevate privileges."
            ->  bypassAntivirus,
                bypassApplicationControl

        & threadLocalStorage
            developer info: "Binary probability distribution. Probability carried by Process Injection main technique"
            user info: "Adversaries may inject malicious code into processes via thread local storage (TLS) callbacks in order to evade process-based defenses as well as possibly elevate privileges."
            ->  bypassAntivirus,
                bypassApplicationControl

        | deobfuscateOrDecodeFilesOrInformation 
            +>  bypassAntivirus,
                bypassHostIntrusionPrevention,
                bypassSignatureBasedDetection,
                computer.router.externalNetwork.bypassNetworkIntrusionDetection,
                computer.router.internalNetwork.bypassNetworkIntrusionDetection     

        & disableWindowsEventLogging
            user info: "Adversaries may disable Windows event logging to limit data that can be leveraged for detections and audits."
            +>  bypassLogAnalysis

        | attemptDLLSearchOrderHijacking @hidden
            ->  dLLSearchOrderHijacking 

        & dLLSearchOrderHijacking //(0.16)]
            user info: "Adversaries may take advantage of the Windows DLL search order and programs that ambiguously specify DLLs to gain privilege escalation and persistence."
            developer info: "TTC is extremely low (< 0.00001 seconds) and is excluded. Sources used for probability distribution: https://redcanary.com/threat-detection-report/techniques/dll-search-order-hijacking/. Sources for TTC (not used): http://blog.nsfocus.net/dridex-banking-malware-sample-technical-analysis-solution/, https://threatresearch.ext.hp.com/dridex-threat-analysis-july-2019-variant/"
            +>  bypassProcessWhitelisting,
                attemptBypassUserAccessControl,
                userAccount.userRights,
                attemptLSASSDriver,
                service.attemptExploitationForPrivilegeEscalation                   
               
        | dLLSideLoading //(0.0755)]
            developer info: "Sources used for probability result: https://www.fireeye.com/current-threats/annual-threat-report/mtrends.html, https://krisk.io/post/sok-attack-securecomm19.pdf"
            ->  bypassProcessWhitelisting,
                bypassAntivirus,
                attemptLSASSDriver

        & domainControllerAuthentication
            user info: "Adversaries may patch the authentication process on a domain control to bypass the typical authentication mechanisms and enable access to accounts."

        | attemptLSASSDriver @hidden 
            +>  lSASSDriver

        & lSASSDriver //(0.5)*Exponential(0.1)]
            user info: "Adversaries may target lsass.exe drivers to obtain execution and/or persistence. By either replacing or adding illegitimate drivers (e.g., DLL Side-Loading or DLL Search Order Hijacking), an adversary can achieve arbitrary code execution triggered by continuous LSA operations."
            +>  executeCode,
                persistence

        & cachedDomainCredentials
            user info: "Adversaries may attempt to access cached domain credentials used to allow authentication to occur in the event a domain controller is unavailable."
            +>  collectHashInformation,
                attemptDomainAccounts

        | eventTriggeredExecution
            user info: "Adversaries may establish persistence and/or elevate privileges using system mechanisms that trigger execution based on specific events."
            +>  changeDefaultFileAssociation,
                screensaver,
                attemptWindowsManagementInstrumentationEventSubscription,
                netshHelperDLL,
                attemptAccessibilityFeatures,
                attemptAppCertDLLs,
                attemptAppInitDLLs,
                attemptApplicationShimming,
                imageFileExecutionOptionsInjection,
                powerShellUserProfile,
                powerShellAdminProfile,             
                componentObjectModelHijacking

        | hideArtifacts
            user info: "Adversaries may attempt to hide artifacts associated with their behaviors to evade detection."
            +>  ntfsFileAttributes,
                attemptHiddenWindow

        & lSASecrets
            user info: "Adversaries with SYSTEM access to a host may attempt to access Local Security Authority (LSA) secrets, which can contain a variety of different credential materials, such as credentials for service accounts."
            +>  userAccount.userCredentials

        | hijackExecutionFlow
            user info: "Adversaries may execute their own malicious payloads by hijacking the way operating systems run programs."
            +>  attemptCOR_PROFILER,
                attemptDLLSearchOrderHijacking,
                dLLSideLoading,
                executableInstallerFilePermissionsWeakness,
                pathInterception,
                attemptServicesFilePermissionsWeakness,
                servicesRegistryPermissionsWeakness

        | impareDefenses
            user info: "Adversaries may maliciously modify components of a victim environment in order to hinder or disable defensive mechanisms."
            +>  disableWindowsEventLogging

        | indicatorRemovalOnHost //(0.04)]
            developer info: "Sources used for distribution result: Red Canary top 50 ATT&CK techniques (private google sheets document), https://krisk.io/publication/mitre-attack-securecomm19/, https://www.crowdstrike.com/resources/reports/observations-from-the-front-lines-of-threat-hunting-2019/, https://content.fireeye.com/m-trends/rpt-m-trends-2020, https://www.welivesecurity.com/wp-content/uploads/2017/02/Read-The-Manual.pdf, https://www.proofpoint.com/us/threat-insight/post/leviathan-espionage-actor-spearphishes-maritime-and-defense-targets"
            user info: "Adversaries may delete or alter generated artifacts on a host system, including logs or captured files such as quarantined malware." 
            +>  clearWindowsEventLogs,
                networkShareConnectionRemoval 

        | inputCapture //(0.071)]
            user info: "Adversaries can use methods of capturing user input for obtaining credentials for Valid Accounts and information Collection that include keylogging and user input field interception."
            developer info: "Sources used for distribution result: https://www.statista.com/statistics/271037/distribution-of-most-common-malware-file-types/, https://www.rsaconference.com/industry-topics/blog/do-malware-authors-dream-of-original-code, http://keyllama.com/KeyLlamaUSB.pdf"
            +>  credentialAPIHooking,
                attemptGUIInputCapture

        & lateralToolTransfer
            user info: "Adversaries may transfer tools or other files between systems in a compromised environment."
            +>  attemptWindowsAdminShares, // copy files laterally between internal victim systems using inherent file sharing protocols
                attemptRemoteDesktopProtocol

        & manInTheMiddle //(0.35)*Exponential(1)]
            developer info: "Sources for distribution results: https://capec.mitre.org/data/definitions/94.html, https://www.csoonline.com/article/3340117/what-is-a-man-in-the-middle-attack-how-mitm-attacks-work-and-how-to-prevent-them.html#:~:text=Though%20not%20as%20common%20as,are%20difficult%20to%20come%20by."
            user info: "Adversaries may attempt to position themselves between two or more networked devices using a man-in-the-middle (MiTM) technique to support follow-on behaviors such as Network Sniffing or Transmitted Data Manipulation."
            +>  attemptLLMNR_NBT_NS_PoisoningAndSMBRelay

        | masquerading //(0.34)*Exponential(1)]
            user info: "Masquerading occurs when the name or location of an executable, legitimate or malicious, is manipulated or abused for the sake of evading defenses and observation."
            developer info: "TTC is time until attack is over, which is time until masquerading file is discovered. Sources used for probability distribution: https://redcanary.com/threat-detection-report/techniques/masquerading/, https://www.tripwire.com/state-of-security/security-data-protection/security-controls/file-integrity-monitoring/, https://www.cm-alliance.com/cybersecurity-blog/understanding-how-file-integrity-monitoring-works, https://en.wikipedia.org/wiki/System_File_Checker"
            +>  invalidCodeSignature,
                masqueradeTaskOrService

        | modifyAuthenticationProcess
            user info: "Adversaries may modify authentication mechanisms and processes to access user credentials or enable otherwise unwarranted access to accounts."
            +>  domainControllerAuthentication,
                attemptPasswordFilterDLL

        & mshta //(0.3329)*Exponential(491)]
            user info: "Mshta is a utility that executes Microsoft HTML Applications. It can be used to proxy execute malicious .hta files, and can also be used to bypass application whitelisting."
            developer info: "Sources used for distribution: https://lolbas-project.github.io/lolbas/Binaries/Mshta/, https://netmarketshare.com/operating-system-market-share.aspx?, https://redcanary.com/blog/microsoft-html-application-hta-abuse-part-deux/"
            +>  fileProxyExecution,
                bypassDigitalCertificateValidation,
                bypassApplicationControl

        & msiexec
            user info: "Adversaries may abuse msiexec.exe to proxy execution of malicious payloads."
            +>  codeProxyExecution     

        & odbcconf
            user info: "Adversaries may abuse odbcconf.exe to proxy execution of malicious payloads."
            +>  codeProxyExecution

        & exchangeEmailDelegatePermissions
            user info: "Adversaries may grant additional permission levels, such as ReadPermission or FullAccess, to maintain persistent access to an adversary-controlled email account."
            +>  internalSpearphishing
     
        | executeCode 
            +>  componentFirmware,
                service.attemptExploitationForPrivilegeEscalation,
                computer.infectedWindowsComputer         

        | attemptExecutionThroughAPI @hidden
            +>  executionThroughAPI       

        & executionThroughAPI //(0.56)]
            user info: "Adversary tools may directly use the Windows application programming interface (API) to execute binaries." 
            developer info: "TTC assumed instant. Sources for probability distribution: https://krisk.io/post/sok-attack-securecomm19.pdf, https://www.recordedfuture.com/mitre-attack-tactics/, https://attack.mitre.org/techniques/T1106/"
            ->  executeCode,
                processInjection

        & executionThroughModuleLoad //(0.93)*Exponential(1)]
            developer info: "Sources for distribution results: Results on spearphishing and https://community.broadcom.com/symantecenterprise/communities/community-home/librarydocuments/viewdocument?DocumentKey=bc9e2e2e-028c-4ba1-863f-72a4700dbdc2&CommunityKey=1ecf5f55-9545-44d6-b0f4-4e4a7f5f5e68&tab=librarydocuments, https://www.cybereason.com/blog/information-stealing-malware-targeting-brazil-full-research"
            user info: "Adversaries can use this functionality as a way to execute arbitrary code on a system."
            +>  executeCode    
        
        & extraWindowMemoryInjection
            developer info:"Binary probability distribution. Sources for distribution results : Process Injection findings and https://www.elastic.co/fr/blog/ten-process-injection-techniques-technical-survey-common-and-trending-process"
            user info: "Execution granted through EWM injection may allow access to both the target process's memory and possibly elevated privileges."
            ->  bypassAntivirus,
                bypassApplicationControl

        | fileAndDirectoryPermissionsModification //(0.2174)]
            user info: "File and directory permissions are commonly managed by discretionary access control lists (DACLs) specified by the file or directory owner."
            developer info: "Sources used for distribution result: https://attack.mitre.org/software/S0402, https://securelist.com/threats-to-macos-users/93116/, https://www.carbonblack.com/2019/02/12/tau-threat-intelligence-notification-new-macos-malware-variant-of-shlayer-osx-discovered/"
            +>  windowsFileAndDirectoryPermissionsModification

        & windowsFileAndDirectoryPermissionsModification
            developer info: "Binary probability distribution."
            user info: "Adversaries may modify file or directory permissions/attributes to evade access control lists (ACLs) and access protected files."
            ->  attemptAccessibilityFeatures, // leads to Accessibility Features attack
                bootOrLogonInitializationScripts, //leads to Logon Scripts attack
                hijackExecutionFlow

        | fileSystemLogicalOffsets
            user info: "Windows allows programs to have direct access to logical volumes. This technique bypasses Windows file access controls as well as file system monitoring tools."
            +>  bypassFileMonitoring,
                bypassFileSystemAccessControls

        | attemptFileSystemPermissionsWeakness @hidden
            ->  fileSystemPermissionsWeakness

        & fileSystemPermissionsWeakness //(1)]
            developer info: "Sources for distribution result: https://www.csoonline.com/article/3390663/check-your-access-control-permissions-before-hackers-do.html, https://www.varonis.com/blog/data-breach-statistics/,https://capec.mitre.org/data/definitions/17.html"
            user info: "Adversaries may use this technique to replace legitimate binaries with malicious ones as a means of executing code at a higher permissions level."
            ->  executeCode,
                persistence,
                attemptDLLSearchOrderHijacking,
                attemptBypassUserAccessControl

        & forcedAuthentication
            user info: "Adversaries may take advantage of this behavior to gain access to user account hashes through forced SMB authentication."
            +>  templateInjection,
                bruteForce

        & groupPolicyModification
            user info: "Malicious GPO modifications can be used to implement Scheduled Task, Disabling Security Tools, Remote File Copy, Create Account, Service Execution and more."
            +>  attemptScheduledTask, // leads to Scheduled Task attack
                attemptDisableOrModifyTools, // leads to Disabling Security Tools attack
                remoteFileCopy, // leads to Remote File Copy attack
                attemptServiceExecution, // leads to Service Execution attack
                adminAccount.attemptCreateAccount,
                bypassSystemAccessControls,
                bypassFileSystemAccessControls

        & groupPolicyPreferences
            user info: "Adversaries may attempt to find unsecured credentials in Group Policy Preferences (GPP)."
            +>  userAccount.userCredentials

        | attemptGUIInputCapture @hidden
            ->  gUIInputCapture

        & gUIInputCapture
            developer info: "Binary probability distribution."
            user info: "Adversaries may mimic common operating system GUI components to prompt users for credentials with a seemingly legitimate prompt."
            +>  bypassUserAccessControl,
                userAccount.userCredentials,
                privateKeysWithPassphrase

        | attemptHiddenWindow @hidden
            ->  hiddenWindow

        & hiddenWindow //(0.22)]
            user info: "A common use for this is when applications run in the system tray, but don't also want to show up in the Dock. However, adversaries can abuse this feature and hide their running window."
            developer info: "Sources for probability distribution: https://www.carbonblack.com/resources/threat-research/cybersecurity-outlook-report/#download"

        | imageFileExecutionOptionsInjection
            developer info: "Binary probability distribution. Soucres for distribution results: process Injection findings and https://www.elastic.co/fr/blog/ten-process-injection-techniques-technical-survey-common-and-trending-process"
            user info: "Directly modifying IEFO and silent process exit Registry values may be abused to obtain persistence and privilege escalation by causing a malicious executable to be loaded and run in the context of separate processes on the computer."
            +>  bypassAutorunsAnalysis,
                processInjection

        | indirectCommandExecution
            user info: "Adversaries may abuse the Windows system features for Defense Evasion."
            +>  executeCode,
                bypassStaticFileAnalysis,
                bypassApplicationWhitelisting,
                bypassProcessWhitelisting,
                bypassFileOrPathWhitelisting

        & installUtil
            developer info: "Binary probability distribution."
            user info: "Adversaries may use InstallUtil to proxy execution of code through a trusted Windows utility."
            +>  codeProxyExecution  

        | interProcessCommunication
            user info: "Adversaries may abuse inter-process communication (IPC) mechanisms for local code or command execution."
            ->  attemptComponentObjectModel,
                attemptDynamicDataExchange

        & invalidCodeSignature
            user info: "Adversaries may attempt to mimic features of valid code signatures to increase the chance of deceiving a user, analyst, or tool."

        | serviceExhaustionFlood //}
            user info: "Adversaries may target the different network services provided by systems to conduct a DoS."
            +>  attemptServiceStop

        | stealOrForgeKerberosTickets
            developer info: "Binary probability dsitribution. Distribution carried by oSCredentialDumping"
            user info: "Adversaries may attempt to subvert Kerberos authentication by stealing or forging Kerberos tickets to enable Pass the Ticket."
            ->  goldenTicket,
                silverTicket,
                kerberoasting

        | attemptGoldenTicket @hidden
            ->  goldenTicket

        & goldenTicket
            developer info: "Binary probability dsitribution. carried by oSCredentialDumping"
            user info: "Adversaries who have the KRBTGT account password hash may forge Kerberos ticket-granting tickets (TGT), also known as a golden ticket."
            +>  attemptPassTheTicket,
                dCShadow

        | attemptSilverTicket @hidden
            ->  silverTicket

        & silverTicket
            developer info: "Binary probability dsitribution. carried by oSCredentialDumping"
            user info: "Adversaries who have the password hash of a target service account (e.g. SharePoint, MSSQL) may forge Kerberos ticket granting service (TGS) tickets, also known as silver tickets."
            +>  attemptPassTheTicket

        & visualBasic
            user info: "Adversaries may abuse Visual Basic (VB) for execution."
            +>  attemptHiddenWindow

        & javaScriptOrJScript
            user info: "Adversaries may abuse JavaScript / JScript to execute various behaviors. Common uses include hosting malicious scripts on websites as part of a Drive-by Compromise or downloading and executing these script files as secondary payloads."
            +>  attemptHiddenWindow

        & kerberoasting
            developer info: "Binary probability dsitribution. carried by oSCredentialDumping"
            user info: "Adversaries possessing a valid Kerberos ticket-granting ticket (TGT) may request one or more Kerberos ticket-granting service (TGS) service tickets for any SPN from a domain controller (DC)."
            ->  attemptSilverTicket,
                bruteForce,
                persistence,
                service.attemptExploitationForPrivilegeEscalation,
                validAccounts

        | attemptLLMNR_NBT_NS_PoisoningAndSMBRelay @hidden
            ->  lLMNR_NBT_NS_PoisoningAndSMBRelay

        & lLMNR_NBT_NS_PoisoningAndSMBRelay
            developer info: "Binary probability distribution. Probability carried by MiTM technique."
            user info: "AAdversaries can spoof an authoritative source for name resolution on a victim network by responding to LLMNR (UDP 5355)/NBT-NS (UDP 137) traffic. The adversary can then collect the hash information sent over the wire through tools that monitor the ports for traffic or through Network Sniffing and crack the hashes offline through Brute Force to obtain the plaintext passwords."
            +>  networkSniffing,
                bruteForce

        | attemptLSASSMemory @hidden
            +>  lSASSMemory

        & lSASSMemory
            user info: "Adversaries may attempt to access credential material stored in the process memory of the Local Security Authority Subsystem Service (LSASS)."
            +>  useAlternateAuthenticationMaterial // harvest credential materials for Lateral Movement

        | useAlternateAuthenticationMaterial
            user info: "Adversaries may use alternate authentication material, such as password hashes, Kerberos tickets, and application access tokens, in order to move laterally within an environment and bypass normal system access controls."
            ->  passTheHash,
                passTheTicket,
                service.browser.webSessionCookie,
                service.applicationAccessToken

        & manInTheBrowser
            user info: "Adversaries can take advantage of security vulnerabilities and inherent functionality in browser software to change content, modify behavior, and intercept information as part of various man in the browser techniques."
            +>  service.browser.driveByCompromise

        | masqueradeTaskOrService
            user info: "Adversaries may attempt to manipulate the name of a task or service to make it appear legitimate or benign."
            +>  bypassHostIntrusionPrevention

        & modifyRegistry //(0.0661)]
            user info: "Adversaries may interact with the Windows Registry to hide configuration information within Registry keys, remove information as part of cleaning up, or as part of other techniques to aid in Persistence and Execution. An adversary may modify these Registry keys to add new SSPs."
            developer info: "Sources for distribution result: https://www.fireeye.com/current-threats/annual-threat-report/mtrends.html, https://www.usenix.org/legacyurl/view-current-malware-behaviors, https://krisk.io/post/sok-attack-securecomm19.pdf, https://docs.microsoft.com/en-us/previous-versions/windows/it-pro/windows-server-2012-R2-and-2012/cc732643(v=ws.11)?redirectedfrom=MSDN"
            +>  persistence,
                securitySupportProvider,
                bypassHostForensicAnalysis

        | netshHelperDLL
            user info: "Adversaries can use netsh.exe with helper DLLs to proxy execution of arbitrary code in a persistent manner."
            +>  persistence

        | networkShareConnectionRemoval
            user info: "Adversaries may remove share connections that are no longer useful in order to clean up traces of their operation."
            +>  bypassHostForensicAnalysis

        & nTDS
            user info: "Adversaries may attempt to access or create a copy of the Active Directory domain database in order to steal credential information, as well as obtain other information about domain members such as devices, users, and access rights."
            +>  collectHashInformation

        | attemptWindowsService @hidden
            ->  windowsService

        & windowsService
            user info: "Adversaries may install a new service that can be configured to execute at startup by using utilities to interact with services or by directly modifying the Registry."
            +>  service.attemptExploitationForPrivilegeEscalation, // an adversary may also use a service to escalate privileges from administrator to SYSTEM
                masquerading, // benign software with Masquerading
                persistence

        & ntfsFileAttributes //(0.00702)]
            developer info: "Sources for distribution result: Red Canary ATT&CK technique percentages (private google sheets document), https://www.fireeye.com/current-threats/annual-threat-report/mtrends.html, https://krisk.io/publication/mitre-attack-securecomm19/, https://cdn2.hubspot.net/hubfs/3354902/Cybereason%20Labs%20Analysis%20Operation%20Cobalt%20Kitty.pdf, https://www.volexity.com/blog/2016/11/09/powerduke-post-election-spear-phishing-campaigns-targeting-think-tanks-and-ngos/"
            user info: "Adversaries may store malicious data or binaries in file attribute metadata instead of directly in files, to evade some defenses, such as static indicator scanning tools and anti-virus."
            ->  bypassSignatureBasedDetection,
                bypassHostForensicAnalysis,
                bypassAntivirus

        | officeApplicationStartup
            user info: "There are multiple mechanisms that can be used with Office for persistence when an Office-based application is started."
            ->  service.officeTemplateMacros,
                service.officeTest,
                service.outlookForms,
                service.outlookHomePage,
                service.outlookRules,
                service.addIns

        | attemptPasswordFilterDLL @hidden
            +>  passwordFilterDLL    

        & passwordFilterDLL
            user info: "Adversaries can register malicious password filters to harvest credentials from local computers and/or entire domains."
            +>  adminAccount.adminCredentials

        | attemptPassTheHash @hidden
            ->  passTheHash

        & passTheHash //(0.16)*Exponential(480)]
            user info: "This method bypasses standard authentication steps that require a cleartext password, moving directly into the portion of the authentication that uses the password hash."
            developer info: "Sources used for distribution result: https://www.securityweek.com/pass-hash-remains-poorly-defended-threat-vector, https://www.youtube.com/watch?v=6em5TUASfHM, https://www.youtube.com/watch?v=bTYR_xYSDIk"
            +>  computer.router.internalNetwork.remoteSystemsConnection, // PtH may be used to perform actions on local or remote systems
                bypassSystemAccessControls

        | attemptPassTheTicket @hidden
            ->  passTheTicket

        & passTheTicket
            developer info: "Binary probability distribution"
            user info: "Pass the ticket (PtT) is a method of authenticating to a system using Kerberos tickets without having access to an account's password."
            +>  computer.router.internalNetwork.remoteAccess // gain remote access 

        | parentPIDSpoofing
            user info: "Adversaries may spoof the parent process identifier (PPID) of a new process to evade process-monitoring defenses or to elevate privileges."
            +>  bypassHostForensicAnalysis,
                bypassHeuristicDetection,
                service.browser.attemptSpearphishingAttachment,
                service.attemptExploitationForPrivilegeEscalation,
                commandAndScriptingInterpreter

        & executableInstallerFilePermissionsWeakness
            user info: "Adversaries may execute their own malicious payloads by hijacking the binaries used by an installer."
            +>  attemptDLLSearchOrderHijacking,
                attemptBypassUserAccessControl

        & pathInterception //(0.0352)]
            user info: "Adversaries may take advantage of performing path interception: unquoted paths, path environment variable misconfigurations, and search order hijacking."
            developer info: "Sources used for distribution result: https://content.fireeye.com/m-trends/rpt-m-trends-2020, http://www.hexacorn.com/blog/2016/03/26/beyond-good-ol-run-key-part-37/"
            ->  pathInterceptionByPATHEnvironmentVariable,
                pathInterceptionBySearchOrderHijacking,
                pathInterceptionByUnquotedPath

        | pathInterceptionByPATHEnvironmentVariable
            user info: "Adversaries may execute their own malicious payloads by hijacking environment variables used to load libraries."

        & pathInterceptionBySearchOrderHijacking
            user info: "Adversaries may execute their own malicious payloads by hijacking the search order used to load other programs."
            +>  attemptDLLSearchOrderHijacking        

        | pathInterceptionByUnquotedPath
            user info: "Adversaries may execute their own malicious payloads by hijacking vulnerable file path references."
            ->  executeCode,
                persistence

        | preOSBoot
            user info: "Adversaries may abuse Pre-OS Boot mechanisms as a way to establish persistence on a system."
            +>  attemptSystemFirmware,
                componentFirmware,
                bootkit

        | scheduledTaskOrJob
            developer info: "Binary probability distribution."
            user info: "Adversaries may abuse task scheduling functionality to facilitate initial or recurring execution of malicious code."
            +>  attemptScheduledTask,
                at

        & securityAccountManager
            user info: "Adversaries may attempt to extract credential material from the Security Account Manager (SAM) database either through in-memory techniques or through the Windows Registry where the SAM database is stored." 
            +>  collectHashInformation,
                attemptLocalAccounts

        | serverSoftwareComponent
            user info: "Adversaries may abuse legitimate extensible development features of servers to establish persistent access to systems."
            +>  attemptSQLStoredProcedures,
                attemptTransportAgent

        | attemptServicesFilePermissionsWeakness @hidden
            +>  servicesFilePermissionsWeakness

        & servicesFilePermissionsWeakness //(1)]
            developer info: "Sources for distribution result: https://www.csoonline.com/article/3390663/check-your-access-control-permissions-before-hackers-do.html, https://www.varonis.com/blog/data-breach-statistics/,https://capec.mitre.org/data/definitions/17.html"
            user info: "Adversaries may execute their own malicious payloads by hijacking the binaries used by services."
            +>  service.attemptExploitationForPrivilegeEscalation,
                persistence

        & servicesRegistryPermissionsWeakness
            user info: "Adversaries may execute their own malicious payloads by hijacking the Registry entries used by services."
            +>  service.attemptExploitationForPrivilegeEscalation,
                persistence

        | attemptSQLStoredProcedures @hidden
            +>  sQLStoredProcedures

        & sQLStoredProcedures
            user info: "Adversaries may abuse Microsoft transport agents to establish persistent access to systems."
            +>  persistence

        | subvertTrustControls
            user info: "Adversaries may undermine security controls that will either warn users of untrusted activity or prevent execution of untrusted programs."
            +>  codeSigningCertificate,
                sIPAndTrustProviderHijacking

        | systemServices
            user info: "Adversaries may abuse system services or daemons to execute commands or programs."
            +>  serviceExecution

        | attemptTransportAgent @hidden
            +>  transportAgent

        & transportAgent
            user info: "Adversaries may abuse SQL stored procedures to establish persistent access to systems."
            +>  persistence

        | attemptPowerShell @hidden
            user info: "Adversaries can use PowerShell to perform a number of actions, including discovery of information and execution of code."
            +>  powerShell,
                windowsRemoteManagement, // call with the winrm
                computer.user.attemptUserExecution,
                commandAndScriptingInterpreter

        & powerShell //(0.55)]
            user info: "Administrator permissions are required to use PowerShell to connect to remote systems."    
            developer info: "The process takes a few seconds to complete, so the TTC has excluded. It would be //(28800)] if included. Sources used for probability distribution: https://redcanary.com/threat-detection-report/techniques/powershell/"  
            +>  computer.router.internalNetwork.remoteSystemsConnection,
                computer.router.externalNetwork.attemptTransmittedDataManipulation,
                attemptIndicatorBlocking, // tampering settings that control the collection and flow of event telemetry
                attemptGUIInputCapture, // collect credentials
                parentPIDSpoofing, // spoof the PPID of PowerShell/Rundll32 to be explorer.exe rather than an Office document delivered as part of Spearphishing Attachment
                systemChecks,
                persistence,
                attemptHiddenWindow // make windows hidden

        | attemptPowerShellUserProfile @hidden
            user info: "Adversaries may gain persistence and elevate privileges in certain situations by abusing PowerShell profiles."
            ->  powerShellUserProfile

        & powerShellUserProfile //(2)]
            developer info: "sources for distribution results : https://www.quora.com/ITs-how-often-do-you-use-PowerShell-And-what-do-you-think-about-it"
            user info: "Adversaries may gain persistence and elevate privileges in certain situations by abusing PowerShell profiles."   
            +>  persistence

        | attemptPowerShellAdminProfile @hidden
            user info: "Adversaries may gain persistence and elevate privileges in certain situations by abusing PowerShell profiles."
            +>  powerShellAdminProfile
        
        & powerShellAdminProfile //(0.5)*Exponential(2)]
            developer info: "sources for distribution results : https://www.quora.com/ITs-how-often-do-you-use-PowerShell-And-what-do-you-think-about-it"
            user info: "Adversaries may gain persistence and elevate privileges in certain situations by abusing PowerShell profiles."   
            +>  service.attemptExploitationForPrivilegeEscalation,
                persistence

        & processDoppelganging
            developer info: "Binary probability distribution. Probability carried by Process Injection main technique"
            user info: "Process Doppelgänging involves replacing the memory of a legitimate process, enabling the veiled execution of malicious code that may evade defenses and detection."
            +>  bypassAntivirus,
                bypassApplicationControl    

        & processHollowing //(1440)]
            developer info: "Sources for distribution result: https://redcanary.com/threat-detection-report/techniques/, https://www.fireeye.com/current-threats/annual-threat-report/mtrends.html, https://adalogics.com/blog/the-state-of-advanced-code-injections, https://www.youtube.com/watch?v=G6AoZ5F4CH8, https://www.youtube.com/watch?v=k2pLF56gXXw&feature=youtu.be&t=106"
            user info: "Execution of the malicious code is masked under a legitimate process and may evade defenses and detection analysis."
            +>  bypassAntivirus,
                bypassApplicationControl

        | processInjection //(0.35)*Exponential(127.1)] 
            user info: "Process injection is a method of executing arbitrary code in the address space of a separate live process. It can be used for Defense Evasion and Privilege Escalation."
            developer info: "Sources used for probability distribution: https://redcanary.com/threat-detection-report/techniques/process-injection/, https://labs.sentinelone.com/trickbot-update-brief-analysis-of-a-recent-trickbot-payload/, https://www.wilbursecurity.com/2020/03/trickbot-to-ryuk-in-two-hours/, https://www.trustwave.com/en-us/resources/blogs/spiderlabs-blog/tale-of-the-two-payloads-trickbot-and-nitol/"
            +>  dynamicLinkLibraryInjection,
                portableExecutableInjection,
                threadExecutionHijacking,
                asynchronousProcedureCall,
                threadLocalStorage,
                extraWindowMemoryInjection,
                processHollowing,
                processDoppelganging

        | codeProxyExecution
            ->  bypassApplicationControl,
                bypassDigitalCertificateValidation

        | fileProxyExecution
            ->  bypassApplicationControl,
                bypassDigitalCertificateValidation

        & rDPHijacking
            user info: "Adversaries may hijack a legitimate user’s remote desktop session to move laterally within an environment."
            +>  userAccount.userCredentials,
                remoteSystemDiscovery

        | rDPSessionHijacking
            user info: "Adversaries may also perform RDP session hijacking which involves stealing a legitimate user's remote session."

        | registryRunKeysOrStartupFolder //(0.17125)]
            user info: "Adversaries can use these configuration locations to execute malware, such as remote access tools, to maintain persistence through system reboots. Adversaries may also use Masquerading to make the Registry entries look as if they are associated with legitimate programs."
            developer info: "Sources used for distribution result: https://dsimg.ubm-us.net/envelope/395823/551993/Fileless%20Attack%20Survival%20Guide.pdf, https://content.carbonblack.com/c/vmwcb-threat-report-?x=f_lWMB"
            +>  masquerading, // leads to Masquerading attack
                service.remoteAccessSoftware,
                persistence

        & regsvcsOrRegasm
            developer info: "Binary probability distribution."
            user info: "Adversaries can use Regsvcs and Regasm to proxy execution of code through a trusted Windows utility. Both utilities may be used to bypass process whitelisting."
            +>  codeProxyExecution, 
                attemptComponentObjectModel // register .NET Component Object Model (COM) assemblies

        & regsvr32
            developer info: "Binary probability distribution."
            user info: "Adversaries may take advantage of this functionality to proxy execution of code to avoid triggering security tools. Regsvr32.exe can also be used to specifically bypass process whitelisting using functionality to load COM scriptlets to execute DLLs under user permissions."
            +>  bypassAntivirus,
                codeProxyExecution,
                componentObjectModelHijacking // establish Persistence via Component Object Model Hijacking

        | attemptRemoteDesktopProtocol @hidden
            +>  remoteDesktopProtocol

        & remoteDesktopProtocol //(0.5561)*Exponential(480)]
            user info: "Adversaries may connect to a remote system over RDP/RDS to expand access if the service is enabled and allows access to accounts with known credentials. Adversaries may also perform RDP session hijacking which involves stealing a legitimate user's remote session. It can also lead to Remote System Discovery and Privilege Escalation by stealing a Domain Admin or higher privileged account session."
            developer info: "Sources used for distribution result: https://www.fireeye.com/blog/threat-research/2020/02/mtrends-2020-insights-from-the-front-lines.html, https://duo.com/decipher/attackers-combine-attacks-against-rdp-with-ransomware, https://www.securitymagazine.com/articles/90983-percent-of-organizations-exhibit-malicious-remote-desktop-protocol-rdp-behaviors, https://medium.com/enterprise-nxt/2020-ransomware-attacks-still-mostly-through-unsecured-rdp-b167fefcd490, https://www.youtube.com/watch?v=Olgso_oXQa8"
            +>  attemptAccessibilityFeatures,
                remoteSystemDiscovery,
                rDPSessionHijacking,
                computer.router.internalNetwork.attemptExfiltrationOverC2Channel

        & replicationThroughRemovableMedia //(0.45)*Exponential(3.429)]
            user info: "Adversaries may move onto systems, possibly those on disconnected or air-gapped networks, by copying malware to removable media and taking advantage of Autorun features when the media is inserted into a system and executes."
            developer info: "Sources for distribution result: https://ieeexplore.ieee.org/abstract/document/7546509, https://threatpost.com/never-trust-a-found-usb-drive-black-hat-demo-shows-why/119653/"
            +>  communicationThroughRemovableMedia,
                computer.peripheralDevice.infectedMedia

        | rootkit //(0.01255)]
            user info: "Adversaries may use rootkits to hide the presence of programs, files, network connections, services, drivers, and other system components."
            developer info: "Sources used for distribution: https://www.csoonline.com/article/3222066/how-to-detect-and-remove-a-rootkit-in-windows-10.html, https://investors.fireeye.com/static-files/56c2c6ec-3cdc-4fd2-967e-29205d2e982e, https://intezer.com/blog/linux/hiddenwasp-malware-targeting-linux-systems/"
            +>  credentialAPIHooking, // leads to hooking attack
                attemptSystemFirmware // leads to system firmware attack

        & rundll32
            developer info: "Binary probability distribution."
            user info: "Adversaries may abuse rundll32.exe to proxy execution of malicious code."
            +>  bypassAntivirus,
                parentPIDSpoofing, // spoof the PPID of PowerShell/Rundll32 to be explorer.exe rather than an Office document delivered as part of Spearphishing Attachment
                codeProxyExecution,
                attemptControlPanel // rundll32.exe can also be used to execute Control Panel Item files

        & screensaver //(0.01605)*Exponential(96)]
            user info: "Adversaries can use screensaver settings to maintain persistence by setting the screensaver to run malware after a certain timeframe of user inactivity."
            developer info: "Sources for distribution result: https://malware.wikia.org/wiki/MyDoom, https://unit42.paloaltonetworks.com/mydoom-still-active-in-2019/, https://www.menlosecurity.com/blog/only-4-percent-of-users-click-on-phishing-emails.-yet-those-4-percent-never-learn, https://study.sagepub.com/chiricogsp, https://www.welivesecurity.com/wp-content/uploads/2017/08/eset-gazer.pdf" 
            +>  persistence

        | searchOrderHijacking
            user info: "Search order hijacking occurs when an adversary abuses the order in which Windows searches for programs that are not given a path."
            ->  attemptDLLSearchOrderHijacking // Search order hijacking is a common practice for DLL Search Order Hijacking   

        & securitySupportProvider
            user info: "An adversary may modify these Registry keys to add new SSPs."
            +>  persistence

        | attemptServiceExecution @hidden
            +>  serviceExecution

        & serviceExecution
            developer info: "Binary probability distribution."
            user info: "Adversaries may execute a binary, command, or script via a method that interacts with Windows services, such as the Service Control Manager."
            +>  attemptWindowsService // Adversaries may also directly start services through Service Execution

        | attemptServiceRegistryPermissionsWeakness @hidden
            +>  serviceRegistryPermissionsWeakness

        & serviceRegistryPermissionsWeakness
            user info: "When the service starts or is restarted, then the adversary-controlled program will execute, allowing the adversary to gain persistence and/or privilege escalation to the account context the service is set to execute."
            ->  service.attemptExploitationForPrivilegeEscalation

        | attemptShortcutModification @hidden
            +>  shortcutModification

        & shortcutModification //(0.03)]
            developer info: "Sources for distribution result: https://ics-cert.kaspersky.com/reports/2019/09/30/threat-landscape-for-industrial-automation-systems-h1-2019/, https://www.crowdstrike.com/resources/reports/observations-from-the-front-lines-of-threat-hunting/, https://www.fireeye.com/current-threats/annual-threat-report/mtrends.html, https://www.welivesecurity.com/wp-content/uploads/2018/10/ESET_GreyEnergy.pdf, https://www.pwc.co.uk/cyber-security/pdf/cloud-hopper-annex-b-final.pdf"
            user info: "Adversaries could use shortcuts to execute their tools for persistence. Adversaries could also edit the target path or entirely replace an existing shortcut so their tools will be executed instead of the intended legitimate program."
            +>  executeCode,
                persistence,
                masquerading // create a new shortcut as a means of indirection that may use Masquerading to look like a legitimate program

        | attemptSIDHistoryInjection @hidden
            user info: "Adversaries may use SID mechanism for privilege escalation. This manipulation may result in elevated access to local resources and/or access to otherwise inaccessible domains via lateral movement techniques such as Remote Services, Windows Admin Shares, or Windows Remote Management."
            +>  sIDHistoryInjection

        & sIDHistoryInjection
            developer info: "Binary probability dsitribution. Distribution carried by parents"
            user info: "This is a helper attack step. Adversaries may utilize DCShadow to perform SID-History Injection and/or manipulate AD objects (such as accounts, access control lists, schemas) to establish backdoors for Persistence."           
            ->  persistence,
                service.remoteServices, // leads to Remote Services attack
                attemptWindowsAdminShares, // leads to Windows Admin Shares attack    
                windowsRemoteManagement // leads to Windows Remote Management attack          

        | signedBinaryProxyExecution
            developer info: "Binary probability distribution."
            user info: "Several Microsoft signed binaries that are default on Windows installations can be used to proxy execution of other files. This behavior may be abused by adversaries to execute malicious files that could bypass application whitelisting and signature validation on systems."
            ->  compiledHTMLFile,
                attemptControlPanel,
                cmstp,
                installUtil,
                mshta,
                msiexec,
                odbcconf,
                regsvcsOrRegasm,
                regsvr32,
                rundll32        

        | signedScriptProxyExecution
            developer info: "Binary probability distribution."
            user info: "Scripts signed with trusted certificates can be used to proxy execution of malicious files."
            +>  pubPrn

        & pubPrn
            user info: "Adversaries may use the trusted PubPrn script to proxy execution of malicious files."
            +>  fileProxyExecution

        | attemptSIPAndTrustProviderHijacking @hidden
            +>  sIPAndTrustProviderHijacking

        & sIPAndTrustProviderHijacking
            user info: "Adversaries may abuse this architecture to subvert trust controls and bypass security policies that allow only legitimately signed code to execute on a system."
            +>  bypassApplicationControl,
                bypassAutorunsAnalysis,
                bypassDigitalCertificateValidation,
                bypassUserModeSignatureValidation 

        | attemptSoftwarePacking @hidden
            ->  softwarePacking

        & softwarePacking //(0.56784)]
            user info: "Packing an executable changes the file signature in an attempt to avoid signature-based detection."
            developer info: "Sources for distribution result: https://www.carbonblack.com/resources/threat-research/cybersecurity-outlook-report/#download, https://attack.mitre.org/techniques/T1045/, http://www.matcode.com/mpress.htm, https://upx.github.io/, https://d3gpjj9d20n0p3.cloudfront.net/fortiguard/research/DetectingMalwareThreats.pdf, https://www.researchgate.net/publication/301902892_Entropy_analysis_to_classify_unknown_packing_algorithms_for_malware_detection, https://www.academia.edu/7383312/Obfuscation_The_Hidden_Malware, https://www.lastline.com/labsblog/malware-packing/, www.blackhat.com/presentations/bh-usa-06/BH-US-06-Morgenstern.pdf"
            ->  indicatorRemovalFromTools,
                bypassSignatureBasedDetection,
                bypassAntivirus,
                bypassHeuristicDetection

        | systemServiceDiscovery //(0.0122)]
            user info: "Adversaries may try to get information about registered services."
            developer info: "Sources for distribution result: https://www.fireeye.com/current-threats/annual-threat-report/mtrends.html, https://krisk.io/publication/mitre-attack-securecomm19/, https://attack.mitre.org/techniques/T1007/, https://docs.microsoft.com/en-us/previous-versions/windows/it-pro/windows-xp/bb491010(v=technet.10)?redirectedfrom=MSDN"
            +>  service.serviceInformation 

        | attemptTaintSharedContent @hidden
            user info: "This is a helper attack step that requires access to shared folders."
            +>  computer.router.internalNetwork.taintSharedContent   

        & templateInjection
            user info: "Adversaries may abuse this technology to initially conceal malicious code to be executed."
            +>  bypassStaticFileAnalysis, 
                forcedAuthentication, // leads to Forced Authentication attack
                service.browser.spearphishingAttachment, // can be delivered via Spearphishing Attachment
                attemptTaintSharedContent // can be delivered via Taint Shared Content

        | attemptTimeProviders @hidden
            +>  timeProviders

        & timeProviders
            user info: "Adversaries may abuse Windows Time service to establish Persistence, specifically by registering and enabling a malicious DLL as a time provider."
            ->  persistence

        | trustedDeveloperUtilities
            developer info: "Binary probability distribution."
            user info: "An adversary can use tracker.exe to proxy execution of an arbitrary DLL into another process. Since tracker.exe is also signed it can be used to bypass application whitelisting solutions."
            +>  mSBuild

        & mSBuild
            user info: "Adversaries may use MSBuild to proxy execution of code through a trusted Windows utility."
            ->  codeProxyExecution

        | unquotedPaths
            user info: "An adversary can place an executable in a higher level directory of the path, and Windows will resolve that executable instead of the intended executable."
            ->  executeCode   

        | attemptServiceStop @hidden //}
            +>  serviceStop

        & serviceStop //} //(0.0837)]
            developer info: "Sources for distribution result: https://www.fireeye.com/current-threats/annual-threat-report/mtrends.html, https://blog.talosintelligence.com/2018/02/olympic-destroyer.html, https://docs.microsoft.com/en-us/windows/win32/api/winsvc/nf-winsvc-changeserviceconfigw, https://www.fireeye.com/blog/threat-research/2017/05/wannacry-malware-profile.html, https://www.crowdstrike.com/blog/big-game-hunting-with-ryuk-another-lucrative-targeted-ransomware/"
            user info: "Adversaries may stop services in order to conduct Data Destruction or Data Encrypted for Impact on the data stores of services like Exchange and SQL Server."
            +>  attemptDataDestruction,
                attemptDataEncryptedForImpact

        | attemptScheduledTask @hidden
            ->  scheduledTask  

        & scheduledTask //(0.33)*Exponential(54.3)]
            user info: "An adversary may use task scheduling to execute programs at system startup or on a scheduled basis for persistence, to conduct remote Execution as part of Lateral Movement, to gain SYSTEM privileges, or to run a process under the context of a specified account."
            developer info: "Sources used for probability results: https://docs.microsoft.com/en-us/previous-versions/windows/it-pro/windows-xp/bb490866(v=technet.10)?redirectedfrom=MSDN, https://redcanary.com/threat-detection-report/techniques/scheduled-task/, https://labs.sentinelone.com/trickbot-update-brief-analysis-of-a-recent-trickbot-payload/, https://www.wilbursecurity.com/2020/03/trickbot-to-ryuk-in-two-hours/, https://www.trustwave.com/en-us/resources/blogs/spiderlabs-blog/tale-of-the-two-payloads-trickbot-and-nitol/, https://www.esentire.com/assets/resourcefiles/eSentire-2019-Annual-Threat-Intelligence-Report-2019-Perspectives-and-2020-Predictions.pdf, https://blog.malwarebytes.com/cybercrime/2015/03/scheduled-tasks/, https://www.zdnet.com/article/microsoft-says-new-dexphot-malware-infected-more-than-80000-computers/"
            +>  executeCode,
                service.attemptExploitationForPrivilegeEscalation,
                persistence,
                remoteScheduledTask

        & remoteScheduledTask
            +>  computer.router.internalNetwork.remoteExecution

        | attemptSystemTimeDiscovery @hidden
            ->  systemTimeDiscovery

        & systemTimeDiscovery //(0.19744)]
            developer info: "Sources used for distribution result: https://www.fireeye.com/current-threats/annual-threat-report/mtrends.html, https://www.crowdstrike.com/resources/reports/observations-from-the-front-lines-of-threat-hunting-2019/, https://krisk.io/publication/mitre-attack-securecomm19/, https://attack.mitre.org/software/S0039/"
            user info: "The information could be useful for performing other techniques, such as executing a file with a Scheduled Task, or to discover locality information based on time zone to assist in victim targeting."
            ->  attemptScheduledTask

        | unsecuredCredentials
            user info: "Aversaries may search compromised systems to find and obtain insecurely stored credentials."
            +>  credentialsInRegistry,
                groupPolicyPreferences

        | attemptWindowsAdminShares @hidden
            ->  windowsAdminShares

        & windowsAdminShares //(0.28)*Exponential(4114)]
            developer info: "Sources used for probability distribution: https://redcanary.com/threat-detection-report/techniques/windows-admin-shares/, https://www.contextis.com/us/blog/lateral-movement-a-deep-look-into-psexec"
            +>  networkShareConnectionRemoval, // leads to Network Share Connection Removal attack
                windowsManagementInstrumentation // leads to Windows Management Instrumentation attack

        & windowsCommandShell
            developer info: "Adversaries may abuse the Windows command shell for execution."
            ->  executeCode

        | windowsManagementInstrumentation //(0.26)*Exponential(43.49)]
            user info: "An adversary can use WMI to interact with local and remote systems and use it as a means to perform many tactic functions."
            developer info: "TTC is upper bound of likely time needed. Sources used for probability distribution result: https://redcanary.com/threat-detection-report/techniques/windows-management-instrumentation/, https://www.fireeye.com/content/dam/fireeye-www/global/en/current-threats/pdfs/wp-windows-management-instrumentation.pdf, https://www.microsoft.com/security/blog/2017/06/27/new-ransomware-old-techniques-petya-adds-worm-capabilities/, https://securelist.com/olympicdestroyer-is-here-to-trick-the-industry/84295/"
            +>  systemInformationDiscovery, // extract information about the operating system
                systemChecks,
                executeCode,
                inhibitSystemRecovery,
                attemptIndicatorBlocking // tampering settings that control the collection and flow of event telemetry

        | attemptWindowsManagementInstrumentationEventSubscription @hidden
            +>  windowsManagementInstrumentationEventSubscription

        & windowsManagementInstrumentationEventSubscription //(0.26)*Exponential(43.49)]
            developer info: "We assume the dsitribution to be the same as for windowsManagementInstrumentation"
            user info: "Adversaries may use the capabilities of WMI to subscribe to an event and execute arbitrary code when that event occurs, providing persistence on a system."
            +>  persistence

        | attemptWindowsRemoteManagement @hidden
            +>  windowsRemoteManagement

        & windowsRemoteManagement
            developer info: "Binary probability distribution. Use of Valid Acounts"
            user info: "WinRM allows a user to interact with a remote system."
            +>  computer.router.internalNetwork.remoteExecution,
                service.externalRemoteServices // Windows Remote Management can also be used externally  

        | attemptWinlogonHelperDLL @hidden
            +>  winlogonHelperDLL

        & winlogonHelperDLL
            user info: "Adversaries may take advantage of these features to repeatedly execute malicious code and establish Persistence."
            +>  persistence

        & remoteFileCopy //(0.29)]
            user info: "Files may be copied from one system to another to stage adversary tools or other files over the course of an operation."
            developer info: "TTC is very low (10-20 seconds) and is excluded. Sources used for probability result: https://redcanary.com/threat-detection-report/techniques/remote-file-copy/. For estimates on TTC please see remoteFileCopy.md in the Dropbox/MAL work/enterpriselang probability findings/folder."
            +>  attemptWindowsAdminShares, // Adversaries may also copy files laterally between internal victim systems to support Lateral Movement with remote Execution using inherent file sharing protocols such as file sharing over SMB to connected network shares or with authenticated connections with Windows Admin Shares or Remote Desktop Protocol.
                attemptRemoteDesktopProtocol

        | attemptRegistryKeysEnabled @hidden
            ->  registryKeysEnabled

        & registryKeysEnabled
            ->  attemptDynamicDataExchange

        & dataEncryptedForImpact //} //(0.366)*Exponential(12)]
            user info: "Adversaries may encrypt data on target systems or on large numbers of systems in a network to interrupt availability to system and network resources. To maximize impact on the target organization, malware designed for encrypting data may have worm-like features to propagate across a network by leveraging other attack techniques like Valid Accounts, Credential Dumping, and Windows Admin Shares."
            developer info: "Sources used for probability distribution result: https://www.google.com/url?sa=t&rct=j&q=&esrc=s&source=web&cd=&ved=2ahUKEwje19GOp5rqAhXnl4sKHSJbDFcQFjANegQIMBAB&url=https%3A%2F%2Fwww.checkpoint.com%2Fdownloads%2Fproducts%2Fransomware-defense-survey-for-enterprise.pdf&usg=AOvVaw1Om5gqIJ3-Gcf7efzgIby9, https://news.sophos.com/en-us/2020/05/12/the-state-of-ransomware-2020/, https://www.exabeam.com/library/anatomy-ransomware-attack/"
            +>  attemptWindowsAdminShares

        | attemptDynamicDataExchange @hidden
            +>  dynamicDataExchange 

        & dynamicDataExchange //(0.93)*Exponential(1)]
            developer info: "Sources for distribution results : https://www.fortinet.com/blog/threat-research/cybercriminals-exploiting-microsoft-s-vulnerable-dynamic-data-exchange-protocol"
            user info: "Windows Dynamic Data Exchange (DDE) is a client-server protocol for one-time and/or continuous inter-process communication (IPC) between applications."
            +>  commandAndScriptingInterpreter,
                executeCode

        | captureAPICalls
            user info: "Some API calls include parameters that reveal user authentication credentials for Credential Access."
            ->  userAccount.userCredentials

        | attemptLogonScripts
            ->  logonScripts

        & logonScripts //(288)]
            user info: "An adversary can then create a logon session for the user using the LogonUser function. The function will return a copy of the new session's access token and the adversary can use SetThreadToken to assign the token to a thread."
            developer info: "Sources for probability distribution: http://www.hexacorn.com/blog/2014/11/14/beyond-good-ol-run-key-part-18/, "
            ->  attemptAccessTokenManipulation,
                adminAccount.adminRights   

        | attemptSystemFirmware @hidden
            +>  systemFirmware
        
        & systemFirmware
            user info: "System firmware may be modified by an adversary to perform or assist in malicious activity."
            +>  systemShutdownOrReboot,
                attemptDataDestruction

        | systemShutdownOrReboot //}
            user info: "Adversaries may shutdown/reboot systems to interrupt access to, or aid in the destruction of, those systems."  

        & queryRegistry //(0.05226)]
            developer info: "Sources for distribution result: https://www.fireeye.com/current-threats/annual-threat-report/mtrends.html, https://www.crowdstrike.com/resources/reports/observations-from-the-front-lines-of-threat-hunting-2019/, https://attack.mitre.org/software/S0075/, https://docs.microsoft.com/en-us/previous-versions/windows/it-pro/windows-server-2012-R2-and-2012/cc742028(v=ws.11), https://www.welivesecurity.com/wp-content/uploads/2020/05/ESET_Turla_ComRAT.pdf"
            user info: "The Registry contains a significant amount of information about the operating system, configuration, software, and security. Some of the information may help adversaries to further their operation within a network."
            +>  commandAndScriptingInterpreter,
                systemChecks,
                systemInformationDiscovery

        & networkShareDiscovery //(0.0129)]
            developer info: "Sources for distribution result: https://www.fireeye.com/current-threats/annual-threat-report/mtrends.html, https://krisk.io/publication/mitre-attack-securecomm19/, https://attack.mitre.org/software/S0039/"
            +>  computer.router.internalNetwork.networkShareDiscovery

        | attemptAccessTokenManipulation @hidden
            +>  accessTokenManipulation

        & accessTokenManipulation //(0.20715)]
            user info: "Adversaries may use access tokens to operate under a different user or system security context to perform actions and evade detection."
            developer info: "Sources for probability distribution result: https://krisk.io/post/sok-attack-securecomm19.pdf, https://pentestlab.blog/2017/04/03/token-manipulation/"
            +>  tokenImpersonationOrTheft,
                createProcessWithAToken,
                makeAndImpersonateToken,
                parentPIDSpoofing,
                attemptSIDHistoryInjection

        | tokenImpersonationOrTheft
            user info: "Adversaries may duplicate then impersonate another user's token to escalate privileges and bypass access controls."
            ->  service.attemptExploitationForPrivilegeEscalation
        
        | createProcessWithAToken
            user info: "Adversaries may create a new process with a duplicated token to escalate privileges and bypass access controls."
            ->  service.attemptExploitationForPrivilegeEscalation

        | makeAndImpersonateToken
            user info: "Adversaries may make and impersonate tokens to escalate privileges and bypass access controls."
            ->  service.attemptExploitationForPrivilegeEscalation

        | attemptBypassUserAccessControl @hidden
            ->  bypassUserAccessControl

        & bypassUserAccessControl //(0.277)]
            developer info: "TTC assumed instant. Sources for probability distribution: https://attack.mitre.org/software/S0129/, https://www.forcepoint.com/sites/default/files/resources/files/forcepoint-security-labs-monsoon-analysis-report.pdf, https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2014-6352, https://gs.statcounter.com/os-version-market-share/windows/desktop/worldwide, https://netmarketshare.com/operating-system-market-share.aspx, https://www.eset.com/afr/about/newsroom/press-releases-afr/research/dissection-of-sednit-espionage-group-1/, https://github.com/hfiref0x/UACME"
            +>  service.attemptExploitationForPrivilegeEscalation
   
        | obfuscatedFilesOrInformation //(0.7395)]
            user info: "Adversaries may use Obfuscated Files or Information to hide artifacts of an intrusion from analysis."     
            developer info: "TTC assumed instant. Sources for distribution result: https://www.recordedfuture.com/mitre-attack-tactics/, https://krisk.io/post/sok-attack-securecomm19.pdf, https://nakedsecurity.sophos.com/2010/07/27/large-piece-malware/"
            +>  attemptSoftwarePacking

        | oSCredentialDumping //(0.08785)]
            user info: "Credential dumping is the process of obtaining account login and password information, normally in the form of a hash or a clear text password, from the operating system and software."
            developer info: "Sources for distribution result: https://www.picussecurity.com/picus-10-critical-mitre-attck-techniques, https://www.fireeye.com/current-threats/annual-threat-report/mtrends.html, https://krisk.io/post/sok-attack-securecomm19.pdf, https://redcanary.com/threat-detection-report/techniques/credential-dumping/, https://github.com/gentilkiwi/mimikatz" 
            +>  attemptLSASSMemory,
                securityAccountManager,
                nTDS,
                lSASecrets,
                cachedDomainCredentials,
                dCSync,
                stealOrForgeKerberosTickets

        | peripheralDeviceDiscovery //(1)]
            developer info: "Sources for distribution results: https://capec.mitre.org/data/definitions/646.html, https://www.welivesecurity.com/wp-content/uploads/2016/10/eset-sednit-part-2.pdf, https://github.com/mal-lang/malcompiler/wiki/Supported-distribution-functions" 
            +>  computer.peripheralDeviceDiscovery

        | portMonitors
            user info: "Adversaries can use this technique to load malicious code at startup that will persist on system reboot and execute as SYSTEM."
            +>  executeCode,
                service.attemptExploitationForPrivilegeEscalation,
                persistence

        | emailCollection
            developer info: "Binary probability distribution. (Probabilities carried by children)"
            user info: "Adversaries may target user email to collect sensitive information from a target."
            +>  localEmailCollection,
                remoteEmailCollection,
                emailForwardingRule,
                service.remoteEmailCollection,
                service.emailForwardingRule
       
        & localEmailCollection //(0.892)*Exponential(95.58)]
            developer info: "Sources for distribution results: https://www.lifewire.com/what-is-the-average-size-of-an-email-message-1171208#:~:text=Email%20size%20is%20determined%20by%20much%20more%20than%20just%20the%20message&text=The%20average%20size%20of%20an,text%20or%20about%2037.5%20pages., https://www.litmus.com/blog/the-2017-email-client-market-share-infographic/, more in emailCollection.md"
            user info: "Adversaries may target user email on local systems to collect sensitive information."
            ->  sensitiveDataCollected

        & remoteEmailCollection //(0.892)*Exponential(35.19)]
            developer info: "Sources for distribution results: https://www.lifewire.com/what-is-the-average-size-of-an-email-message-1171208#:~:text=Email%20size%20is%20determined%20by%20much%20more%20than%20just%20the%20message&text=The%20average%20size%20of%20an,text%20or%20about%2037.5%20pages., https://www.litmus.com/blog/the-2017-email-client-market-share-infographic/, more in emailCollection.md"
            user info: "Adversaries may target an Exchange server or Office 365 to collect sensitive information."
            ->  attemptRemoteDesktopProtocol, // https://www.us-cert.gov/ncas/alerts/TA18-086A
                sensitiveDataCollected

        & emailForwardingRule //(0.00061)]
            developer info: "Sources for distribution results: https://www.textrequest.com/blog/how-many-emails-do-people-get-every-day/, more in emailCollection.md"
            user info: "Adversaries may setup email forwarding rules to collect sensitive information."
            ->  sensitiveDataCollected

        | attemptApplicationShimming @hidden
            ->  applicationShimming
            
        & applicationShimming
            developer info:"Binary probability distribution. Sources for distribution results : Process Injection findings and https://www.elastic.co/fr/blog/ten-process-injection-techniques-technical-survey-common-and-trending-process"
            user info: "Utilizing these shims may allow an adversary to perform several malicious acts such as elevate privileges, install backdoors, disable defenses like Windows Defender, etc."
            +>  persistence, // use application shim databases for persistence
                processInjection,
                credentialAPIHooking, // the shim database uses Hooking to redirect the code as necessary in order to communicate with the OS
                attemptBypassUserAccessControl // certain shims can be used to Bypass User Account Control (UAC)

        & authenticationPackage
            developer info: "Binary probability distribution"
            user info: "Adversaries can use Windows Authentication Packages for persistence for persistence."
            +>  persistence   

        | changeDefaultFileAssociation
            user info: "Adversaries may establish persistence by executing malicious content triggered by a file type association."
            +>  persistence

        | trustedDomainInfo // leads to SID-History Injection, Pass the Ticket, and Kerberoasting attacks
            user info: "The information discovered may help the adversary conduct SID-History Injection, Pass the Ticket, and Kerberoasting."

        & domainTrustDiscovery //(0.13)*Exponential(127.1)]
            developer info: "Sources used for probability distribution: https://redcanary.com/threat-detection-report/techniques/domain-trust-discovery/, https://labs.sentinelone.com/trickbot-update-brief-analysis-of-a-recent-trickbot-payload/, https://www.wilbursecurity.com/2020/03/trickbot-to-ryuk-in-two-hours/, https://www.trustwave.com/en-us/resources/blogs/spiderlabs-blog/tale-of-the-two-payloads-trickbot-and-nitol/"
            +>  trustedDomainInfo

        | attemptBootkit @hidden
            +>  bootkit

        & bootkit //(0.46)]
            developer info: "TTC assumed instant, see Dropbox/enterpriselang probability findings/bootkit.md for more info. sources used for distribution result: https://www.eset.com/afr/about/newsroom/press-releases-afr/research/dissection-of-sednit-espionage-group-1/, https://gs.statcounter.com/os-version-market-share/windows/desktop/worldwide, https://netmarketshare.com/operating-system-market-share.aspx?, https://www.fireeye.com/blog/threat-research/2015/12/fin1-targets-boot-record.html, https://www.hanselman.com/blog/HowManyPCsInTheWorldHaveTheNETFrameworkInstalled.aspx" 
            +>  persistence
            
        | videoCapture //(0.74)*Exponential(0.1)]
            developer info: "Sources for distribution results: http://www.storiprotection.fr/EagleEye.pdf, http://zugara.com/webcam-penetration-rates-adoption"
            +>  computer.collectVideo            

        & xslScriptProcessing //(0.93)*Exponential(1)]
            developer info: "Sources used for probability distribution: https://reaqta.com/2018/03/spear-phishing-campaign-leveraging-msxsl/"
            user info: "Adversaries may abuse this functionality to execute arbitrary files while potentially bypassing application whitelisting defenses."
            +>  executeCode,
                windowsManagementInstrumentation, // leads to Windows Management Instrumentation attack
                bypassAntivirus,
                bypassApplicationWhitelisting,
                bypassDigitalCertificateValidation

        # activeDirectoryConfiguration
            user info: "https://attack.mitre.org/mitigations/M1015/"
            +>  cachedDomainCredentials,
                dCSync,
                goldenTicket,
                groupPolicyPreferences,
                passTheTicket,
                sIDHistoryInjection

        # antivirus //(0.53)]
            user info: "https://attack.mitre.org/mitigations/M1049/"
            developer info: "Sources for distribution result: https://ieeexplore.ieee.org/abstract/document/5665797; https://www.sans.org/reading-room/whitepapers/analyst/endpoint-protection-response-survey-38460; https://www.businesswire.com/news/home/20100804005348/en/Cyveillance-Testing-Finds-AV-Vendors-Detect-Average"
            +>  powerShell,
                softwarePacking,
                templateInjection

        # applicationIsolationAndSandboxing // Restrict execution of code to a virtual environment on or in transit to an endpoint system.
            user info: "https://attack.mitre.org/mitigations/M1048/"
            +>  distributedComponentObjectModel,
                componentObjectModel,
                dynamicDataExchange

        # audit 
            user info: "https://attack.mitre.org/mitigations/M1047/"
            +>  at,
                credentialsInRegistry,
                domainTrustDiscovery,
                bypassUserAccessControl,
                dLLSearchOrderHijacking,
                dLLSideLoading,
                emailForwardingRule,
                executableInstallerFilePermissionsWeakness,
                groupPolicyPreferences,
                pathInterception,
                remoteDesktopProtocol,
                rDPHijacking,
                servicesFilePermissionsWeakness,
                scheduledTask,
                sQLStoredProcedures,
                transportAgent,
                windowsService

        # behaviorPreventionOnEndpoint
            user info : "https://attack.mitre.org/mitigations/M1040/"
            +>  dynamicDataExchange,
                dynamicLinkLibraryInjection,
                extraWindowMemoryInjection,
                portableExecutableInjection,
                threadExecutionHijacking,
                asynchronousProcedureCall,
                threadLocalStorage,
                processHollowing,
                processDoppelganging
        
        # codeSigning //(0.28)]
            user info: "https://attack.mitre.org/mitigations/M1045/"  
            +>  invalidCodeSignature,
                powerShell,
                powerShellUserProfile,
                powerShellAdminProfile,
                sQLStoredProcedures,
                transportAgent

        # credentialAccessProtection
            user info: "https://attack.mitre.org/mitigations/M1043/"
            ->  lSASSDriver,
                lSASSMemory

        # executionPrevention
            user info: "https://attack.mitre.org/mitigations/M1038/"
            +>  accessibilityFeatures,
                appCertDLLs,
                appInitDLLs,
                cmstp,
                controlPanel,
                compiledHTMLFile,
                cOR_PROFILER,
                dLLSearchOrderHijacking,
                executionThroughAPI,
                executionThroughModuleLoad,
                installUtil,
                mshta,
                networkShareDiscovery,
                odbcconf,
                pathInterception,
                pubPrn,
                queryRegistry,
                regsvcsOrRegasm,
                screensaver,
                sIPAndTrustProviderHijacking,
                systemTimeDiscovery,
                windowsCommandShell,
                winlogonHelperDLL,
                xslScriptProcessing,
                computer.router.internalNetwork.taintSharedContent

        # exploitProtection
            user info: "https://attack.mitre.org/mitigations/M1050/"
            +>  regsvr32,
                rundll32,
                computer.router.internalNetwork.taintSharedContent

        # limitHardwareInstallation
            user info: "https://attack.mitre.org/mitigations/M1034/"
            developer info: "Binary probability relation."
            +>  replicationThroughRemovableMedia

        # multiFactorAuthentication //(0.99325)]
            developer info: "Sources for distribution result: https://security.googleblog.com/2019/05/new-research-how-effective-is-basic.html, https://www.zdnet.com/article/microsoft-using-multi-factor-authentication-blocks-99-9-of-account-hacks/"
            user info: "https://attack.mitre.org/mitigations/M1032/" 
            +>  domainControllerAuthentication

        # operatingSystemConfiguration
            user info: "https://attack.mitre.org/mitigations/M1028/" 
            +>  at,
                passwordFilterDLL,
                bITSJobs,
                cachedDomainCredentials,
                lSASSMemory,
                rDPHijacking,
                remoteDesktopProtocol,
                scheduledTask,
                securityAccountManager

        # passwordPolicies 
            user info: "https://attack.mitre.org/mitigations/M1027/" 
            +>  cachedDomainCredentials,
                credentialsInRegistry,
                dCSync,
                kerberoasting,
                lSASSMemory,
                lSASecrets,
                nTDS,
                passTheHash,
                passTheTicket,
                securityAccountManager,
                silverTicket,
                windowsAdminShares               

        # privilegedProcessIntegrity  
            user info: "https://attack.mitre.org/mitigations/M1025/"
            ->  authenticationPackage,
                domainControllerAuthentication,
                lSASSDriver,
                lSASSMemory,
                securitySupportProvider 

        # privilegedAccountManagement //(0.30)]
            developer info: "Sources for distribution results : https://lp.alpha-gen.co.uk/2018-global-state-of-pam/"
            user info: "https://attack.mitre.org/mitigations/M1026/"
            +>  at,
                bootkit,
                bypassUserAccessControl,
                cachedDomainCredentials,
                componentObjectModel,
                credentialsInRegistry,
                dCSync,
                distributedComponentObjectModel,
                domainControllerAuthentication,
                goldenTicket,
                kerberoasting,
                lSASSMemory,
                lSASecrets,
                msiexec,
                nTDS,
                passTheHash,
                rDPHijacking,
                scheduledTask,
                securityAccountManager,
                silverTicket,
                sQLStoredProcedures,
                transportAgent,
                windowsFileAndDirectoryPermissionsModification

        # restrictFileAndDirectoryPermissions
            user info: "https://attack.mitre.org/mitigations/M1022/"
            +>  clearWindowsEventLogs,
                controlPanel,
                cOR_PROFILER,
                dLLSideLoading,
                bootOrLogonInitializationScripts,
                logonScripts,
                modifyRegistry,
                ntfsFileAttributes,
                pathInterception,
                powerShellUserProfile,
                powerShellAdminProfile,
                sIPAndTrustProviderHijacking,
                serviceStop,
                serviceExecution,
                servicesRegistryPermissionsWeakness,
                timeProviders,
                disableWindowsEventLogging,
                windowsFileAndDirectoryPermissionsModification

        # restrictRegistryPermissions // Restrict the ability to modify certain hives or keys in the Windows Registry.
            user info: "https://attack.mitre.org/mitigations/M1024/"
            +>  sIPAndTrustProviderHijacking,
                serviceStop,
                serviceRegistryPermissionsWeakness,
                timeProviders

        # restrictLibraryLoading
            user info: "https://attack.mitre.org/mitigations/M1044/"
            ->  dLLSearchOrderHijacking,
                lSASSDriver       

        # remoteDataStorage 
            user info: "https://attack.mitre.org/mitigations/M1029/"
            +>  clearWindowsEventLogs

        # softwareConfiguration
            user info: "https://attack.mitre.org/mitigations/M1054/"
            +>  powerShellUserProfile,
                powerShellAdminProfile,
                dynamicDataExchange

        # bootIntegrity 
            user info: "https://attack.mitre.org/mitigations/M1046/"
            +>  bootkit,
                systemFirmware      

        # encryptSensitiveInformation
            user info: "https://attack.mitre.org/mitigations/M1041/"
            +>  kerberoasting,
                localEmailCollection,
                nTDS,
                remoteEmailCollection,
                silverTicket,
                emailForwardingRule,
                clearWindowsEventLogs

        # disableOrRemoveFeatureOrProgram
            user info: "https://attack.mitre.org/mitigations/M1042/"
            +>  cmstp,
                distributedComponentObjectModel,
                installUtil,
                lLMNR_NBT_NS_PoisoningAndSMBRelay,
                mshta,
                odbcconf,
                powerShell,
                rDPHijacking,
                registryKeysEnabled,
                regsvcsOrRegasm,
                remoteDesktopProtocol,
                replicationThroughRemovableMedia,
                screensaver,
                templateInjection,
                mSBuild,
                windowsRemoteManagement,
                dynamicDataExchange

        # updateSoftware //(0.567125)]
            user info: "https://attack.mitre.org/mitigations/M1051/" 
            +>  appInitDLLs,
                applicationShimming,
                bypassUserAccessControl,
                dLLSideLoading,
                groupPolicyPreferences,
                passTheHash,
                systemFirmware
        
        # userAccountControl
            user info: "https://attack.mitre.org/mitigations/M1052/"
            +>  applicationShimming, 
                bypassUserAccessControl,
                executableInstallerFilePermissionsWeakness,
                servicesFilePermissionsWeakness,
                passTheHash
    }

    asset Linux extends OS {
        | abuseElevationControlMechanism
            user info: "Adversaries may circumvent mechanisms designed to control elevate privileges to gain higher-level permissions."
            +>  attemptSetuidAndSetgid,
                sudoAndSudoCaching

        | accountManipulation //(0.101)]
            user info: "Account manipulation may aid adversaries in maintaining access to credentials and certain permission levels within an environment." 
            developer info: "Sources used for probability distribution result: https://www.fireeye.com/current-threats/annual-threat-report/mtrends.html, https://attack.mitre.org/techniques/T1098/, https://www.us-cert.gov/ncas/alerts/TA18-074A" 
            +>  attemptSSHAuthorizedKeys

        & at
            user info: "Adversaries may abuse the at utility to perform task scheduling for initial or recurring execution of malicious code."
            +>  executeCode

        | attemptBootkit @hidden
            +>  bootkit

        & bootkit //(0.46)]
            developer info: "TTC assumed instant, see Dropbox/enterpriselang probability findings/bootkit.md for more info. sources used for distribution result: https://www.eset.com/afr/about/newsroom/press-releases-afr/research/dissection-of-sednit-espionage-group-1/, https://gs.statcounter.com/os-version-market-share/windows/desktop/worldwide, https://netmarketshare.com/operating-system-market-share.aspx?, https://www.fireeye.com/blog/threat-research/2015/12/fin1-targets-boot-record.html, https://www.hanselman.com/blog/HowManyPCsInTheWorldHaveTheNETFrameworkInstalled.aspx"
            +>  persistence

        | bootOrLogonAutostartExecution
            +>  kernelModulesAndExtensions

        | attemptClearCommandHistory @hidden
            ->  clearCommandHistory       

        & clearCommandHistory
            developer info: "Binary probability distribution."
            user info: "Adversaries can abuse this by searching these files for cleartext passwords. Additionally, adversaries can use a variety of methods to prevent their own commands from appear in these logs." 
            +>  bypassLogAnalysis, 
                bypassHostForensicAnalysis

        & clearLinuxSystemLogs
            user info: "Adversaries may clear system logs to hide evidence of an intrusion. macOS and Linux both keep track of system or user-initiated actions via system logs."

        & commandAndScriptingInterpreter //(0.24)]
            developer info: "Sources for distribution results: https://www.itjungle.com/2020/06/22/security-gaining-attention-on-ibm-i-but-more-progress-needed/"
            user info: "Adversaries may abuse command and script interpreters to execute commands, scripts, or binaries."
            +>  unixShell

        | createOrModifySystemProcess
            user info: "Adversaries may create or modify system-level processes to repeatedly execute malicious payloads as part of persistence."
            +>  attemptSystemdService

        | credentialsFromPasswordStores
            user info: "Adversaries may search for common password storage locations to obtain user credentials."
            +>  securitydMemory

        & cron
            user info: "Adversaries may abuse the cron utility to perform task scheduling for initial or recurring execution of malicious code."
            +>  persistence

        & _etc_passwdAND_etc_shadow
            user info: "Adversaries may attempt to dump the contents of /etc/passwd and /etc/shadow to enable offline password cracking."
            +>  collectHashInformation

        | eventTriggeredExecution
            user info: "Adversaries may establish persistence and/or elevate privileges using system mechanisms that trigger execution based on specific events."
            +>  attemptBash_profileAndBashrc,
                trap

        | spaceAfterFileName //(1)]
            developer info: "Binary probability distribution. Based on the abuse of system features. Sources: https://attack.mitre.org/techniques/T1151/, https://www.welivesecurity.com/2016/07/06/new-osxkeydnap-malware-hungry-credentials/"
            +>  computer.user.attemptUserExecution

        | attemptBash_profileAndBashrc @hidden
            ->  bash_profileAndBashrc

        & bash_profileAndBashrc
            developer info: "Binary probability distribution. With File permissions, the adversary may instantly perform this technique."
            user info: "Adversaries can insert code into these files to gain persistence each time a user logs in or opens a new shell."
            +>  persistence

        | attemptBashHistory @hidden
            ->  bashHistory

        & bashHistory //(0.5)*Exponential(1)]
            developer info: "Sources for distribution results: https://www.darkreading.com/endpoint/average-employee-manages-nearly-200-passwords/d/d-id/1330304, http://blog.lastpass.com/2017/11/lastpass-reveals-8-truths-about-passwords-in-the-new-password-expose/ "
            user info: "Adversaries may search the bash command history on compromised systems for insecurely stored credentials."
            +>  indicatorRemovalOnHost,
                userAccount.userCredentials

        | hijackExecutionFlow
            user info: "Adversaries may execute their own malicious payloads by hijacking the way operating systems run programs."
            +>  lD_PRELOAD

        | fileAndDirectoryPermissionsModification //(0.2174)]
            user info: "File and directory permissions are commonly managed by discretionary access control lists (DACLs) specified by the file or directory owner."
            developer info: "Sources used for distribution result: https://attack.mitre.org/software/S0402, https://securelist.com/threats-to-macos-users/93116/, https://www.carbonblack.com/2019/02/12/tau-threat-intelligence-notification-new-macos-malware-variant-of-shlayer-osx-discovered/"
            +>  linuxFileAndDirectoryPermissionsModification

        & linuxFileAndDirectoryPermissionsModification
            developer info: "Binary probability distribution."
            user info: "Adversaries may modify file or directory permissions/attributes to evade access control lists (ACLs) and access protected files."
            ->  attemptBash_profileAndBashrc,
                hijackExecutionFlow

        | impareDefenses
            user info: "Adversaries may maliciously modify components of a victim environment in order to hinder or disable defensive mechanisms."
            +>  hISTCONTROL

        | indicatorRemovalOnHost //(0.04)]
            developer info: "Sources used for distribution result: Red Canary top 50 ATT&CK techniques (private google sheets document), https://krisk.io/publication/mitre-attack-securecomm19/, https://www.crowdstrike.com/resources/reports/observations-from-the-front-lines-of-threat-hunting-2019/, https://content.fireeye.com/m-trends/rpt-m-trends-2020, https://www.welivesecurity.com/wp-content/uploads/2017/02/Read-The-Manual.pdf, https://www.proofpoint.com/us/threat-insight/post/leviathan-espionage-actor-spearphishes-maritime-and-defense-targets"
            user info: "Adversaries may delete or alter generated artifacts on a host system, including logs or captured files such as quarantined malware." 
            +>  clearLinuxSystemLogs,
                attemptClearCommandHistory 

        & hISTCONTROL
            user info: "Adversaries can use this to operate without leaving traces by simply prepending a space to all of their terminal commands."     
            +>  bypassLogAnalysis,
                bypassHostForensicAnalysis

        | infectedOS
            +>  attemptBashHistory

        & kernelModulesAndExtensions
            user info: "Adversaries can use loadable kernel modules to covertly persist on a system and evade defenses."
            +>  rootkit        

        & lD_PRELOAD
            user info: "Adversaries may execute their own malicious payloads by hijacking the dynamic linker used to load libraries."
            ->  service.attemptExploitationForPrivilegeEscalation,
                attemptProcMemory // populate a target process with more available gadgets

        | masquerading //(0.34)*Exponential(1)]
            user info: "Masquerading occurs when the name or location of an executable, legitimate or malicious, is manipulated or abused for the sake of evading defenses and observation."
            developer info: "TTC is time until attack is over, which is time until masquerading file is discovered. Sources used for probability distribution: https://redcanary.com/threat-detection-report/techniques/masquerading/, https://www.tripwire.com/state-of-security/security-data-protection/security-controls/file-integrity-monitoring/, https://www.cm-alliance.com/cybersecurity-blog/understanding-how-file-integrity-monitoring-works, https://en.wikipedia.org/wiki/System_File_Checker"
            +>  masqueradeTaskOrService,
                spaceAfterFileName,
                spaceAfterFileName

        | modifyAuthenticationProcess
            user info: "Adversaries may modify authentication mechanisms and processes to access user credentials or enable otherwise unwarranted access to accounts."
            +>  pluggableAuthenticationModules

        | masqueradeTaskOrService
            user info: "Adversaries may attempt to manipulate the name of a task or service to make it appear legitimate or benign."
            +>  bypassHostIntrusionPrevention

        | oSCredentialDumping //(0.08785)]
            user info: "Credential dumping is the process of obtaining account login and password information, normally in the form of a hash or a clear text password, from the operating system and software."
            developer info: "Sources for distribution result: https://www.picussecurity.com/picus-10-critical-mitre-attck-techniques, https://www.fireeye.com/current-threats/annual-threat-report/mtrends.html, https://krisk.io/post/sok-attack-securecomm19.pdf, https://redcanary.com/threat-detection-report/techniques/credential-dumping/, https://github.com/gentilkiwi/mimikatz" 
            +>  procFilesystem,
                _etc_passwdAND_etc_shadow

        & pluggableAuthenticationModules
            user info: "Adversaries may modify pluggable authentication modules (PAM) to access user credentials or enable otherwise unwarranted access to accounts."

        & portKnocking
            user info: "This technique has been observed to both for the dynamic opening of a listening port as well as the initiating of a connection to a listening server on a different system."
            +>  bypassDefensiveNetworkServiceScanning

        & procFilesystem
            user info: "Adversaries may gather credentials from information stored in the Proc filesystem or /proc."
            +>  collectHashInformation

        & ptraceSystemCalls
            developer info: "Binary probability distribution. Probability carried by Process Injection main technique"
            user info: "Adversaries may inject malicious code into processes via ptrace (process trace) system calls in order to evade process-based defenses as well as possibly elevate privileges."
            ->  bypassAntivirus,
                bypassApplicationControl

        | preOSBoot
            user info: "Adversaries may abuse Pre-OS Boot mechanisms as a way to establish persistence on a system."
            +>  bootkit

        | attemptProcMemory @hidden
            ->  procMemory

        & procMemory
            developer info: "Binary probability distribution. Probability carried by Process Injection main technique"
            user info: "Adversaries may inject malicious code into processes via the /proc filesystem in order to evade process-based defenses as well as possibly elevate privileges."
            ->  bypassAntivirus,
                bypassApplicationControl

        | processInjection //(0.35)*Exponential(127.1)] 
            user info: "Process injection is a method of executing arbitrary code in the address space of a separate live process. It can be used for Defense Evasion and Privilege Escalation."
            developer info: "Sources used for probability distribution: https://redcanary.com/threat-detection-report/techniques/process-injection/, https://labs.sentinelone.com/trickbot-update-brief-analysis-of-a-recent-trickbot-payload/, https://www.wilbursecurity.com/2020/03/trickbot-to-ryuk-in-two-hours/, https://www.trustwave.com/en-us/resources/blogs/spiderlabs-blog/tale-of-the-two-payloads-trickbot-and-nitol/"
            +>  ptraceSystemCalls,
                attemptProcMemory,
                vDSOHijacking

        | scheduledTaskOrJob
            developer info: "Binary probability distribution."
            user info: "Adversaries may abuse task scheduling functionality to facilitate initial or recurring execution of malicious code."
            +>  at,
                cron

        | serverSoftwareComponent
            user info: "Adversaries may abuse legitimate extensible development features of servers to establish persistent access to systems."
            +>  attemptSQLStoredProcedures,
                attemptTransportAgent

        | attemptSetuidAndSetgid @hidden
            +>  setuidAndSetgid      

        & setuidAndSetgid
            user info: "An adversary can take advantage of this to either do a shell escape or exploit a vulnerability in an application with the setsuid or setgid bits to get code running in a different user's context."
            ->  service.attemptExploitationForPrivilegeEscalation,
                persistence  

        & securitydMemory //(0.0158)]
            user info: "If an adversary can obtain root access (allowing them to read securityd's memory), then they can scan through memory to find the correct sequence of keys in relatively few tries to decrypt the user's logon keychain."
            developer info: "Sources used for distribution result: https://attack.mitre.org/software/S0276/, https://macos.checkpoint.com/, https://juusosalonen.com/post/30923743427/breaking-into-the-os-x-keychain, https://github.com/juuso/keychaindump"
            +>  userAccount.userCredentials

        & sSH
            user info: "Adversaries may use Valid Accounts to log into remote machines using Secure Shell (SSH). The adversary may then perform actions as the logged-on user."
            +>  computer.router.internalNetwork.c2Connected

        | attemptSSHAuthorizedKeys @hidden
            +>  sSHAuthorizedKeys

        & sSHAuthorizedKeys
            user info: "Adversaries may modify the SSH authorized_keys file to maintain persistence on a victim host."
            ->  persistence

        & sSHHijacking //(0.51)]
            developer info: "Sources for distribution results: http://book.itep.ru/depository/security/vulnerability/AST-0125626_Ponemon_2014_SSH_Security_Vulnerability_Report.pdf" 
            user info: "In order to move laterally from a compromised host, adversaries may take advantage of trust relationships established with other systems via public key authentication in active SSH sessions by hijacking an existing connection to another system."
            +>  sSHCredentialInterception

        | attemptSQLStoredProcedures @hidden
            +>  sQLStoredProcedures

        & sQLStoredProcedures
            user info: "Adversaries may abuse SQL stored procedures to establish persistent access to systems."
            +>  persistence

        & sudoAndSudoCaching //(288)]
            developer info: "Sources for distribution results: https://www.sudo.ws/man/1.8.15/sudoers.man.html"
            user info: "Adversaries can abuse poor configurations of this to escalate privileges without needing the user's password."
            +>  service.attemptExploitationForPrivilegeEscalation

        | attemptSystemdService @hidden
            ->  systemdService

        & systemdService
            user info: "Adversaries have used systemd functionality to establish persistent access to victim systems by creating and/or modifying service unit files that cause systemd to execute malicious commands at recurring intervals, such as at system boot."
            +>  persistence

        | attemptTransportAgent @hidden
            +>  transportAgent

        & transportAgent
            user info: "Adversaries may abuse SQL stored procedures to establish persistent access to systems."
            +>  persistence

        | trap //(0.1)]
            user info: "Adversaries can use this to register code to be executed when the shell encounters specific interrupts either to gain execution or as a persistence mechanism."
            developer info: "Arbitrary distribution. See trap.md file."
            +>  executeCode,
                persistence

        & unixShell
            developer info: "Adversaries may abuse Unix shell commands and scripts for execution."
            ->  executeCode

        | unsecuredCredentials
            user info: "Aversaries may search compromised systems to find and obtain insecurely stored credentials."
            +>  bashHistory

        & vDSOHijacking
            developer info: "Binary probability distribution. Probability carried by Process Injection main technique"
            user info: "Adversaries may inject malicious code into processes via VDSO hijacking in order to evade process-based defenses as well as possibly elevate privileges."
            ->  bypassAntivirus,
                bypassApplicationControl

        | executeCode 
            +>  computer.infectedLinuxComputer 

        # antivirus //(0.53)]
            user info: "https://attack.mitre.org/mitigations/M1049/"
            developer info: "Sources for distribution result: https://ieeexplore.ieee.org/abstract/document/5665797; https://www.sans.org/reading-room/whitepapers/analyst/endpoint-protection-response-survey-38460; https://www.businesswire.com/news/home/20100804005348/en/Cyveillance-Testing-Finds-AV-Vendors-Detect-Average"
            +>  kernelModulesAndExtensions

        # audit 
            user info: "https://attack.mitre.org/mitigations/M1047/"
            +>  at,
                cron,
                sQLStoredProcedures,
                transportAgent

        # behaviorPreventionOnEndpoint
            user info : "https://attack.mitre.org/mitigations/M1040/"
            +>  ptraceSystemCalls,
                procMemory,
                vDSOHijacking

        # bootIntegrity 
            user info: "https://attack.mitre.org/mitigations/M1046/"
            +>  bootkit

        # codeSigning //(0.28)]
            user info: "https://attack.mitre.org/mitigations/M1045/"  
            +>  sQLStoredProcedures,
                transportAgent

        # disableOrRemoveFeatureOrProgram
            user info: "https://attack.mitre.org/mitigations/M1042/"
            +>  sSH,
                sSHAuthorizedKeys,
                sSHHijacking

        # encryptSensitiveInformation
            user info: "https://attack.mitre.org/mitigations/M1041/"
            +>  clearLinuxSystemLogs

        # executionPrevention
            +>  kernelModulesAndExtensions,
                unixShell,
                lD_PRELOAD

        # environmentVariablePermissions // Prevent modification of environment variables by unauthorized users and groups.
            user info: "https://attack.mitre.org/mitigations/M1039/"
            ->  clearCommandHistory,
                hISTCONTROL              

        # limitSoftwareInstallation
            user info: "https://attack.mitre.org/mitigations/M1033/"
            +>  systemdService

        # multiFactorAuthentication //(0.99325)]
            developer info: "Sources for distribution result: https://security.googleblog.com/2019/05/new-research-how-effective-is-basic.html, https://www.zdnet.com/article/microsoft-using-multi-factor-authentication-blocks-99-9-of-account-hacks/"
            user info: "https://attack.mitre.org/mitigations/M1032/"
            +>  pluggableAuthenticationModules,
                sSH
            
        # operatingSystemConfiguration
            user info: "https://attack.mitre.org/mitigations/M1028/" 
            +>  bashHistory,
                hISTCONTROL,
                setuidAndSetgid,
                sudoAndSudoCaching

        # passwordPolicies // Set and enforce secure password policies for accounts 
            user info: "https://attack.mitre.org/mitigations/M1027/"
            +>  sSHHijacking,
                procFilesystem,
                _etc_passwdAND_etc_shadow

        # privilegedAccountManagement //(0.30)]
            developer info: "Sources for distribution results : https://lp.alpha-gen.co.uk/2018-global-state-of-pam/"
            user info: "https://attack.mitre.org/mitigations/M1026/"
            +>  bootkit,
                _etc_passwdAND_etc_shadow,
                sSHHijacking,
                sQLStoredProcedures,
                sudoAndSudoCaching,
                pluggableAuthenticationModules,
                procFilesystem,
                ptraceSystemCalls,
                transportAgent,
                linuxFileAndDirectoryPermissionsModification

        # restrictFileAndDirectoryPermissions
            user info: "https://attack.mitre.org/mitigations/M1022/"
            +>  bash_profileAndBashrc,
                clearCommandHistory,
                clearLinuxSystemLogs,
                sSHAuthorizedKeys,
                sSHHijacking,
                sudoAndSudoCaching,
                systemdService,
                procMemory,
                linuxFileAndDirectoryPermissionsModification

        # remoteDataStorage 
            user info: "https://attack.mitre.org/mitigations/M1029/"
            +>  clearLinuxSystemLogs
    }

    asset MacOS extends OS {
        | abuseElevationControlMechanism
            user info: "Adversaries may circumvent mechanisms designed to control elevate privileges to gain higher-level permissions."
            +>  attemptSetuidAndSetgid,
                sudoAndSudoCaching,
                attemptElevatedExecutionWithPrompt

        | accountManipulation //(0.101)]
            user info: "Account manipulation may aid adversaries in maintaining access to credentials and certain permission levels within an environment." 
            developer info: "Sources used for probability distribution result: https://www.fireeye.com/current-threats/annual-threat-report/mtrends.html, https://attack.mitre.org/techniques/T1098/, https://www.us-cert.gov/ncas/alerts/TA18-074A" 
            +>  attemptSSHAuthorizedKeys

        | attemptBashHistory @hidden
            ->  bashHistory

        & bashHistory //(0.5)*Exponential(1)]
            user info: "Adversaries may search the bash command history on compromised systems for insecurely stored credentials."
            +>  indicatorRemovalOnHost,
                adminAccount.adminCredentials,
                userAccount.userCredentials

        | attemptBash_profileAndBashrc @hidden
            ->  bash_profileAndBashrc

        & bash_profileAndBashrc
            developer info: "Binary probability distribution."
            user info: "Adversaries can insert code into these files to gain persistence each time a user logs in or opens a new shell."
            ->  persistence

        | bootOrLogonAutostartExecution
            +>  kernelModulesAndExtensions,
                reopenedApplications,
                attemptPlistModification

        | attemptBootOrLogonInitializationScripts @hidden
            ->  bootOrLogonInitializationScripts

        & bootOrLogonInitializationScripts
            user info: "Adversaries may use scripts automatically executed at boot or logon initialization to establish persistence."
            ->  attemptLogonScripts,
                rc_common,
                attemptStartupItems

        & clearMacSystemLogs
            user info: "Adversaries may clear system logs to hide evidence of an intrusion. macOS and Linux both keep track of system or user-initiated actions via system logs."

        | codeSigningCertificate //(0.72)*Exponential(96)]
            user info: "Adversaries may create, acquire, or steal code signing materials to sign their malware or tools."
            developer info: "Sources for distribution results:https://www.venafi.com/blog/study-how-well-are-you-protecting-code-signing-certificates#:~:text=The%20study%20found%20that%20although,process%20for%20code%20signing%20certificates,https://duo.com/decipher/attackers-are-signing-malware-with-valid-certificates,https://cqureacademy.com/blog/windows-internals/code-signing"

        & commandAndScriptingInterpreter //(0.24)]
            developer info: "Sources for distribution results: https://www.itjungle.com/2020/06/22/security-gaining-attention-on-ibm-i-but-more-progress-needed/"
            user info: "Adversaries may abuse command and script interpreters to execute commands, scripts, or binaries."
            +>  unixShell,
                appleScript

        | eventTriggeredExecution
            user info: "Adversaries may establish persistence and/or elevate privileges using system mechanisms that trigger execution based on specific events."
            +>  attemptEmond,
                attemptBash_profileAndBashrc,
                trap,
                lC_LOAD_DYLIB_Addition

        & visualBasic
            user info: "Adversaries may abuse Visual Basic (VB) for execution."
            +>  attemptHiddenWindow

        & javaScriptOrJScript
            user info: "Adversaries may abuse JavaScript / JScript to execute various behaviors. Common uses include hosting malicious scripts on websites as part of a Drive-by Compromise or downloading and executing these script files as secondary payloads."
            +>  attemptHiddenWindow

        | attemptClearCommandHistory @hidden
            ->  clearCommandHistory       

        & clearCommandHistory
            developer info: "Binary probability distribution."
            user info: "Adversaries can abuse this by searching these files for cleartext passwords. Additionally, adversaries can use a variety of methods to prevent their own commands from appear in these logs." 
            +>  bypassLogAnalysis, 
                bypassHostForensicAnalysis

        | createOrModifySystemProcess
            user info: "Adversaries may create or modify system-level processes to repeatedly execute malicious payloads as part of persistence."
            +>  attemptLaunchAgent,
                attemptLaunchDaemon

        | credentialsFromPasswordStores
            user info: "Adversaries may search for common password storage locations to obtain user credentials."
            +>  attemptKeychain,
                securitydMemory

        & cron
            user info: "Adversaries may abuse the cron utility to perform task scheduling for initial or recurring execution of malicious code."
            +>  persistence

        & dylibHijacking //(0.16)] 
            user info: "Adversaries can take advantage of ambiguous paths to plant dylibs to gain privilege escalation or persistence."
            developer info: "Based on the results for dLLSearchOrderHijacking.  Sources used for probability distribution: https://redcanary.com/threat-detection-report/techniques/dll-search-order-hijacking/. Sources for TTC (not used): http://blog.nsfocus.net/dridex-banking-malware-sample-technical-analysis-solution/, https://threatresearch.ext.hp.com/dridex-threat-analysis-july-2019-variant/"
            ->  service.attemptExploitationForPrivilegeEscalation // leads to Exploitation for Privilege Escalation attack

        | attemptElevatedExecutionWithPrompt @hidden
            +>  elevatedExecutionWithPrompt

        & elevatedExecutionWithPrompt
            developer info: "Binary probability distribution. Sources for distribution result: https://www.carbonblack.com/blog/tau-threat-intelligence-notification-new-macos-malware-variant-of-shlayer-osx-discovered/"
            user info: "Adversaries may leverage the AuthorizationExecuteWithPrivileges API to escalate privileges by prompting the user for credentials."
            +>  service.attemptExploitationForPrivilegeEscalation,
                persistence

        | attemptEmond @hidden
            ->  emond

        & emond //(2)]
            developer info: "Source for distribution result : https://www.xorrior.com/emond-persistence/"
            user info: "Adversaries may use Event Monitor Daemon (emond) to establish persistence by scheduling malicious commands to run on predictable event triggers."
            +>  persistence,
                service.attemptExploitationForPrivilegeEscalation

        | fileAndDirectoryPermissionsModification //(0.2174)]
            user info: "File and directory permissions are commonly managed by discretionary access control lists (DACLs) specified by the file or directory owner."
            developer info: "Sources used for distribution result: https://attack.mitre.org/software/S0402, https://securelist.com/threats-to-macos-users/93116/, https://www.carbonblack.com/2019/02/12/tau-threat-intelligence-notification-new-macos-malware-variant-of-shlayer-osx-discovered/"
            +>  macFileAndDirectoryPermissionsModification

        & macFileAndDirectoryPermissionsModification
            developer info: "Binary probability distribution."
            user info: "Adversaries may modify file or directory permissions/attributes to evade access control lists (ACLs) and access protected files."
            ->  attemptBash_profileAndBashrc,
                hijackExecutionFlow

        | executeCode 
            +>  computer.infectedMacOSComputer

        | attemptGatekeeperBypass @hidden
            +> gatekeeperBypass

        & gatekeeperBypass
            developer info: "Binary probability distribution."
            user info: "Apps loaded onto the system from USB flash drive, optical disk, external hard drive, or even from a drive shared over the local network won't set this flag. Additionally, other utilities or events like drive-by downloads don't necessarily set it either. This completely bypasses the built-in Gatekeeper check."
            +>  bypassApplicationControl,
                bypassAntivirus 

        | attemptGUIInputCapture @hidden
            ->  gUIInputCapture

        & gUIInputCapture
            developer info: "Binary probability distribution."
            user info: "Adversaries may mimic common operating system GUI components to prompt users for credentials with a seemingly legitimate prompt."
            +>  userAccount.userCredentials

        | hideArtifacts
            user info: "Adversaries may attempt to hide artifacts associated with their behaviors to evade detection."
            +>  attemptHiddenWindow,
                hiddenUsers

        | hijackExecutionFlow
            user info: "Adversaries may execute their own malicious payloads by hijacking the way operating systems run programs."
            +>  dylibHijacking

        | indicatorRemovalOnHost //(0.04)]
            developer info: "Sources used for distribution result: Red Canary top 50 ATT&CK techniques (private google sheets document), https://krisk.io/publication/mitre-attack-securecomm19/, https://www.crowdstrike.com/resources/reports/observations-from-the-front-lines-of-threat-hunting-2019/, https://content.fireeye.com/m-trends/rpt-m-trends-2020, https://www.welivesecurity.com/wp-content/uploads/2017/02/Read-The-Manual.pdf, https://www.proofpoint.com/us/threat-insight/post/leviathan-espionage-actor-spearphishes-maritime-and-defense-targets"
            user info: "Adversaries may delete or alter generated artifacts on a host system, including logs or captured files such as quarantined malware." 
            +>  clearMacSystemLogs,
                attemptClearCommandHistory  

        | inputCapture //(0.071)]
            user info: "Adversaries can use methods of capturing user input for obtaining credentials for Valid Accounts and information Collection that include keylogging and user input field interception."
            developer info: "Sources used for distribution result: https://www.statista.com/statistics/271037/distribution-of-most-common-malware-file-types/, https://www.rsaconference.com/industry-topics/blog/do-malware-authors-dream-of-original-code, http://keyllama.com/KeyLlamaUSB.pdf"
            +>  attemptGUIInputCapture

        & hiddenUsers
            user info: "By using the Create Account technique with a userID under 500 and enabling this property (setting it to Yes), an adversary can hide their user accounts much more easily."
            +>  adminAccount.attemptCreateAccount

        | attemptHiddenWindow @hidden
            ->  hiddenWindow

        & hiddenWindow //(0.22)]
            user info: "A common use for this is when applications run in the system tray, but don't also want to show up in the Dock. However, adversaries can abuse this feature and hide their running window."
            developer info: "Sources for probability distribution: https://www.carbonblack.com/resources/threat-research/cybersecurity-outlook-report/#download"

        & hISTCONTROL
            user info: "Adversaries can use this to operate without leaving traces by simply prepending a space to all of their terminal commands."     
            +>  bypassLogAnalysis,
                bypassHostForensicAnalysis

        | impareDefenses
            user info: "Adversaries may maliciously modify components of a victim environment in order to hinder or disable defensive mechanisms."
            +>  hISTCONTROL

        | infectedOS
            +>  attemptBashHistory

        & invalidCodeSignature
            user info: "Adversaries may attempt to mimic features of valid code signatures to increase the chance of deceiving a user, analyst, or tool."

        & kernelModulesAndExtensions
            user info: "Adversaries can use loadable kernel modules to covertly persist on a system and evade defenses."
            +>  rootkit  

        | attemptLaunchAgent @hidden
            +>  launchAgent

        & launchAgent
            developer info: "Binary probability distribution."
            user info: "Adversaries may install a new launch agent that can be configured to execute at login by using launchd or launchctl to load a plist into the appropriate directories."     
            +>  persistence

        & launchctl
            developer info: "Binary probability distribution."
            user info: "Adversaries can abuse this functionality to execute code or even bypass whitelisting if launchctl is an allowed process."
            +>  attemptLaunchAgent,
                attemptLaunchDaemon 

        & launchd
            user info: "Adversaries may abuse the Launchd daemon to perform task scheduling for initial or recurring execution of malicious code."
            +>  executeCode,
                persistence   

        | attemptLaunchDaemon @hidden
            ->  launchDaemon

        & launchDaemon
            developer info: "Binary probability distribution."
            user info: "Launch Daemons may be created with administrator privileges, but are executed under root privileges, so an adversary may also use a service to escalate privileges from administrator to root. Adversary can modify a current Launch Daemon's executable and gain persistence or Privilege Escalation."
            +>  persistence,
                attemptLaunchAgent,
                service.attemptExploitationForPrivilegeEscalation   

        & lC_LOAD_DYLIB_Addition
            user info: "Adversaries can remediate the issue that any changes will invalidate digital signatures on binaries because the binary is being modified by simply removing the LC_CODE_SIGNATURE command from the binary so that the signature isn't checked at load time."
            +>  persistence

        | attemptLogonScripts @hidden
            +>  logonScripts

        & logonScripts
            ->  adminAccount.adminRights  

        | masquerading //(0.34)*Exponential(1)]
            user info: "Masquerading occurs when the name or location of an executable, legitimate or malicious, is manipulated or abused for the sake of evading defenses and observation."
            developer info: "TTC is time until attack is over, which is time until masquerading file is discovered. Sources used for probability distribution: https://redcanary.com/threat-detection-report/techniques/masquerading/, https://www.tripwire.com/state-of-security/security-data-protection/security-controls/file-integrity-monitoring/, https://www.cm-alliance.com/cybersecurity-blog/understanding-how-file-integrity-monitoring-works, https://en.wikipedia.org/wiki/System_File_Checker"
            +>  invalidCodeSignature,        
                attemptElevatedExecutionWithPrompt // combine with elevatedExecutionWithPrompt to trick the user into granting escalated privileges to malicious code

        | modifyAuthenticationProcess
            user info: "Adversaries may modify authentication mechanisms and processes to access user credentials or enable otherwise unwarranted access to accounts."
            +>  pluggableAuthenticationModules

        | obfuscatedFilesOrInformation //(0.7395)]
            user info: "Adversaries may use Obfuscated Files or Information to hide artifacts of an intrusion from analysis."     
            developer info: "TTC assumed instant. Sources for distribution result: https://www.recordedfuture.com/mitre-attack-tactics/, https://krisk.io/post/sok-attack-securecomm19.pdf, https://nakedsecurity.sophos.com/2010/07/27/large-piece-malware/"
            +>  attemptSoftwarePacking

        | attemptPlistModification @hidden
            +>  plistModification

        & plistModification
            user info: "Adversaries can modify these plist files to point to their own code, can use them to execute their code in the context of another user, bypass whitelisting procedures, or even use them as a persistence mechanism."
            developer info: "Binary probability distribution."
            +>  bypassApplicationWhitelisting,
                bypassProcessWhitelisting,
                bypassFileOrPathWhitelisting,
                executeCode,
                reopenedApplications,
                service.attemptExploitationForPrivilegeEscalation,
                persistence

        & pluggableAuthenticationModules
            user info: "Adversaries may modify pluggable authentication modules (PAM) to access user credentials or enable otherwise unwarranted access to accounts."

        & portKnocking
            user info: "This technique has been observed to both for the dynamic opening of a listening port as well as the initiating of a connection to a listening server on a different system."
            +>  bypassDefensiveNetworkServiceScanning

        & rc_common
            developer info: "Binary probability distribution. (Root rights) https://attack.mitre.org/techniques/T1037/004/"
            user info: "Adversaries can use the rc.common file as a way to hide code for persistence that will execute on each reboot as the root user."
            +>  persistence

        & reopenedApplications
            developer info: "Binary probability distribution. Plist Modification: https://attack.mitre.org/techniques/T1547/007/"
            user info: "An adversary can modify one of these files directly to include a link to their malicious executable to provide a persistence mechanism each time the user reboots their machine."
            +>  persistence

        | scheduledTaskOrJob
            developer info: "Binary probability distribution."
            user info: "Adversaries may abuse task scheduling functionality to facilitate initial or recurring execution of malicious code."
            +>  cron,
                launchd

        & securitydMemory //(0.0158)]
            user info: "If an adversary can obtain root access (allowing them to read securityd's memory), then they can scan through memory to find the correct sequence of keys in relatively few tries to decrypt the user's logon keychain."
            developer info: "Sources used for distribution result: https://attack.mitre.org/software/S0276/, https://macos.checkpoint.com/, https://juusosalonen.com/post/30923743427/breaking-into-the-os-x-keychain, https://github.com/juuso/keychaindump"
            +>  userAccount.userCredentials

        | attemptSetuidAndSetgid @hidden
            ->  setuidAndSetgid

        & setuidAndSetgid
            user info: "An adversary can take advantage of this to either do a shell escape or exploit a vulnerability in an application with the setsuid or setgid bits to get code running in a different user's context."
            ->  service.attemptExploitationForPrivilegeEscalation,
                persistence

        | attemptSoftwarePacking @hidden
            ->  softwarePacking

        & softwarePacking //(0.56784)]
            user info: "Packing an executable changes the file signature in an attempt to avoid signature-based detection."
            developer info: "Sources for distribution result: https://www.carbonblack.com/resources/threat-research/cybersecurity-outlook-report/#download, https://attack.mitre.org/techniques/T1045/, http://www.matcode.com/mpress.htm, https://upx.github.io/, https://d3gpjj9d20n0p3.cloudfront.net/fortiguard/research/DetectingMalwareThreats.pdf, https://www.researchgate.net/publication/301902892_Entropy_analysis_to_classify_unknown_packing_algorithms_for_malware_detection, https://www.academia.edu/7383312/Obfuscation_The_Hidden_Malware, https://www.lastline.com/labsblog/malware-packing/, www.blackhat.com/presentations/bh-usa-06/BH-US-06-Morgenstern.pdf"
            ->  indicatorRemovalFromTools,
                bypassSignatureBasedDetection,
                bypassAntivirus,
                bypassHeuristicDetection 

        | source
            developer info: "Binary probability distribution."
            +>  executeCode

        | systemServices
            user info: "Adversaries may abuse system services or daemons to execute commands or programs."
            +>  launchctl

        & sSH
            user info: "Adversaries may use Valid Accounts to log into remote machines using Secure Shell (SSH). The adversary may then perform actions as the logged-on user."
            +>  computer.router.internalNetwork.c2Connected

        | attemptSSHAuthorizedKeys @hidden
            +>  sSHAuthorizedKeys

        & sSHAuthorizedKeys
            user info: "Adversaries may modify the SSH authorized_keys file to maintain persistence on a victim host."
            ->  persistence

        & sSHHijacking //(0.51)]
            developer info: "Sources for distribution results: http://book.itep.ru/depository/security/vulnerability/AST-0125626_Ponemon_2014_SSH_Security_Vulnerability_Report.pdf" 
            user info: "In order to move laterally from a compromised host, adversaries may take advantage of trust relationships established with other systems via public key authentication in active SSH sessions by hijacking an existing connection to another system."
            +>  sSHCredentialInterception

        | subvertTrustControls
            user info: "Adversaries may undermine security controls that will either warn users of untrusted activity or prevent execution of untrusted programs."
            +>  codeSigningCertificate,  
                gatekeeperBypass

        | attemptSudoAndSudoCaching @hidden
            ->  sudoAndSudoCaching
            
        & sudoAndSudoCaching //(288)]
            developer info: "Sources for distribution results: https://www.sudo.ws/man/1.8.15/sudoers.man.html"
            user info: "Adversaries can abuse poor configurations of this to escalate privileges without needing the user's password."
            +>  service.attemptExploitationForPrivilegeEscalation

        | trap //(0.1)]
            developer info: "Arbitrary distribution. See trap.md file."
            user info: "Adversaries can use this to register code to be executed when the shell encounters specific interrupts either to gain execution or as a persistence mechanism."
            +>  executeCode,
                persistence

        | videoCapture //(0.74)*Exponential(0.1)]
            developer info: "Sources for distribution results: http://www.storiprotection.fr/EagleEye.pdf, http://zugara.com/webcam-penetration-rates-adoption"
            +>  computer.collectVideo     

        | spaceAfterFileName //(1)]
            developer info: "Binary probability distribution. Based on the abuse of system features. Sources: https://attack.mitre.org/techniques/T1151/, https://www.welivesecurity.com/2016/07/06/new-osxkeydnap-malware-hungry-credentials/"
            +>  computer.user.attemptUserExecution

        & networkShareDiscovery //(0.0129)]
            developer info: "Sources for distribution result: https://www.fireeye.com/current-threats/annual-threat-report/mtrends.html, https://krisk.io/publication/mitre-attack-securecomm19/"
            +>  computer.router.internalNetwork.networkShareDiscovery

        & unixShell
            developer info: "Adversaries may abuse Unix shell commands and scripts for execution."
            ->  executeCode

        | unsecuredCredentials
            user info: "Aversaries may search compromised systems to find and obtain insecurely stored credentials."
            +>  bashHistory

        | windowsManagementInstrumentation
            ->  commandAndScriptingInterpreter

        | attemptKeychain @hidden
            ->  keychain

        & keychain
            user info: "If an adversary knows the credentials for the login keychain, then they can get access to all the other credentials stored in this vault."
            +>  userAccount.userCredentials

        & appleScript
            developer info: "Binary probability distribution."
            ->  executeCode,
                attemptGUIInputCapture // collect credentials
                
        | attemptStartupItems @hidden
            +>  startupItems

        & startupItems
            user info: "An adversary can create the appropriate folders/files in the StartupItems directory to register their own persistence mechanism."
            ->  persistence,
                service.attemptExploitationForPrivilegeEscalation // leads to Exploitation for Privilege Escalation attack 

        # antivirus //(0.53)]
            user info: "https://attack.mitre.org/mitigations/M1049/"
            developer info: "Sources for distribution result: https://ieeexplore.ieee.org/abstract/document/5665797; https://www.sans.org/reading-room/whitepapers/analyst/endpoint-protection-response-survey-38460; https://www.businesswire.com/news/home/20100804005348/en/Cyveillance-Testing-Finds-AV-Vendors-Detect-Average"
            +>  kernelModulesAndExtensions,
                softwarePacking

        # audit 
            user info: "https://attack.mitre.org/mitigations/M1047/"
            +>  lC_LOAD_DYLIB_Addition,
                cron,
                launchd

        # codeSigning //(0.28)]
            user info: "https://attack.mitre.org/mitigations/M1045/"  
            +>  appleScript,
                invalidCodeSignature,
                lC_LOAD_DYLIB_Addition

        # disableOrRemoveFeatureOrProgram
            user info: "https://attack.mitre.org/mitigations/M1042/"
            +>  emond,
                reopenedApplications,
                sSH,
                sSHAuthorizedKeys,
                sSHHijacking

        # executionPrevention
            +>  appleScript,
                elevatedExecutionWithPrompt,
                gatekeeperBypass,
                hiddenWindow,
                kernelModulesAndExtensions,
                lC_LOAD_DYLIB_Addition,
                networkShareDiscovery,
                unixShell

        # encryptSensitiveInformation
            user info: "https://attack.mitre.org/mitigations/M1041/"
            +>  clearMacSystemLogs

        # environmentVariablePermissions // Prevent modification of environment variables by unauthorized users and groups.
            user info: "https://attack.mitre.org/mitigations/M1039/"
            ->  clearCommandHistory,
                hISTCONTROL   

        # multiFactorAuthentication //(0.99325)]
            developer info: "Sources for distribution result: https://security.googleblog.com/2019/05/new-research-how-effective-is-basic.html, https://www.zdnet.com/article/microsoft-using-multi-factor-authentication-blocks-99-9-of-account-hacks/"
            user info: "https://attack.mitre.org/mitigations/M1032/"
            +>  pluggableAuthenticationModules,
                sSH

        # operatingSystemConfiguration
            user info: "https://attack.mitre.org/mitigations/M1028/" 
            +>  bashHistory,
                hiddenUsers,
                hISTCONTROL,
                setuidAndSetgid,
                sudoAndSudoCaching

        # passwordPolicies // Set and enforce secure password policies for accounts 
            user info: "https://attack.mitre.org/mitigations/M1027/"
            +>  keychain,
                sSHHijacking

        # privilegedAccountManagement //(0.30)]
            developer info: "Sources for distribution results : https://lp.alpha-gen.co.uk/2018-global-state-of-pam/"
            user info: "https://attack.mitre.org/mitigations/M1026/"
            +>  sSHHijacking,
                macFileAndDirectoryPermissionsModification,
                pluggableAuthenticationModules

        # restrictFileAndDirectoryPermissions
            user info: "https://attack.mitre.org/mitigations/M1022/"
            +>  bash_profileAndBashrc,
                clearCommandHistory,
                clearMacSystemLogs,
                dylibHijacking,
                logonScripts,
                plistModification,
                sSHAuthorizedKeys,
                sSHHijacking,
                startupItems,
                sudoAndSudoCaching,
                macFileAndDirectoryPermissionsModification

        # remoteDataStorage 
            user info: "https://attack.mitre.org/mitigations/M1029/"
            +>  clearMacSystemLogs
    }    
}

category Network {
    asset Router {
        
    }

    asset InternalNetwork {
        | obfuscateNetworkTraffic

        & applicationLayerConnexion
            ->  c2Connexion,
                bypassNetworkIntrusionDetection,
                router.externalNetwork.bypassNetworkIntrusionDetection

        | attemptDataEncryptedForImpact @hidden
            ->  dataEncryptedForImpact

        & dataEncryptedForImpact //} //(0.366)*Exponential(12)]
            user info: "Adversaries may encrypt data on target systems or on large numbers of systems in a network to interrupt availability to system and network resources. To maximize impact on the target organization, malware designed for encrypting data may have worm-like features to propagate across a network by leveraging other attack techniques like Valid Accounts, Credential Dumping, and Windows Admin Shares."
            developer info: "Sources used for probability distribution result: https://www.google.com/url?sa=t&rct=j&q=&esrc=s&source=web&cd=&ved=2ahUKEwje19GOp5rqAhXnl4sKHSJbDFcQFjANegQIMBAB&url=https%3A%2F%2Fwww.checkpoint.com%2Fdownloads%2Fproducts%2Fransomware-defense-survey-for-enterprise.pdf&usg=AOvVaw1Om5gqIJ3-Gcf7efzgIby9, https://news.sophos.com/en-us/2020/05/12/the-state-of-ransomware-2020/, https://www.exabeam.com/library/anatomy-ransomware-attack/"

        & dataExfiltration
            ->  router.externalNetwork.dataExfiltration

        & internalDefacement //} //(0.31)*Exponential(10.67)]
            user info: "An adversary may deface systems internal to an organization in an attempt to intimidate or mislead users."
            developer info: "Time here is: assumed time defacement will last. Sources used for probability distribution result: https://www.google.com/url?sa=t&rct=j&q=&esrc=s&source=web&cd=&ved=2ahUKEwi5m_fWpY7qAhUaxMQBHU6yBxoQFjAKegQIMhAB&url=https%3A%2F%2Fdocuments.trendmicro.com%2Fassets%2Fwhite_papers%2Fwp-a-deep-dive-into-defacement.pdf&usg=AOvVaw2zOWHBoWsMXdfxK_fLTP_G, https://www.internetlivestats.com/total-number-of-websites/, https://www.helpnetsecurity.com/2020/04/03/back-up-data/, https://books.google.se/books?id=c7CpBAAAQBAJ&printsec=frontcover&dq=Cyber+Blockades&hl=en&sa=X&ved=0ahUKEwj4qsnGq47qAhVRXpoKHWACBqkQ6AEIKDAA#v=onepage&q=Cyber%20Blockades&f=false"
            ->  router.computer.os.service.browser.driveByCompromise // website defacement may also be used as setup, or a precursor, for future attacks such as Drive-by Compromise

        | attemptExfiltrationOverC2Channel @hidden
             ->  exfiltrationOverC2Channel

         & exfiltrationOverC2Channel //(0.79224)*Exponential(1878)]
            developer info: "Sources for distribution results: https://repo.zenk-security.com/Techniques%20d.attaques%20%20.%20%20Failles/Exfiltration%20Techniques%20-%20An%20examination%20And%20Emulation.pdf, https://www.mcafee.com/enterprise/en-us/assets/reports/rp-data-exfiltration.pdf"
            user info: " Data exfiltration is performed over the Command and Control channel."
             ->  dataExfiltration

        E firewallExists
            <-  router.firewall
            ->  router.firewall.bypassFirewall

        | bypassNetworkIntrusionDetection 

        | bypassProxies

        | attemptTransmittedDataManipulation @hidden
            ->  transmittedDataManipulation

        & transmittedDataManipulation //} //(24)]
            user info: "By manipulating transmitted data, adversaries may attempt to affect a business process, organizational understanding, and decision making. "

        & c2Connexion
            ->  c2Connected

        & exchangeServerCollection
            user info: "Adversaries may leverage a user's credentials and interact directly with the Exchange server to acquire information from within a network."
            ->  router.computer.os.dataCollected

        | networkShareDiscovery
            user info: "Networks often contain shared network drives and folders that enable users to access file directories on various systems across a network. "
        
        | internalNetworkResourcesInformation

        | remoteSystemsConnection
            ->  router.internalNetwork.dataFromNetworkSharedDrive

        | webShell //(0.1586)*Exponential(1)]
            user info: "Web shells may serve as Redundant Access or as a persistence mechanism."
            developer info: "Sources used for distribution result: https://www.fireeye.com/current-threats/annual-threat-report/mtrends.html, https://media.defense.gov/2020/Jun/09/2002313081/-1/-1/0/CSI-DETECT-AND-PREVENT-WEB-SHELL-MALWARE-20200422.PDF"
            ->  persistence

        | persistence 
        
        | remoteAccess

        | remoteCOMExecution
            user info: "Adversaries may use the Windows Component Object Model (COM) and Distributed Component Object Model (DCOM) to execute on remote systems as part of lateral movement."

        | remoteExecution

        | c2Connected 
            ->  communicate,
                dataObfuscation,
                packetCapture,
                dataEncryptedForImpact, // https://us-cert.cisa.gov/ncas/alerts/aa20-107a
                attemptExfiltrationOverC2Channel // https://us-cert.cisa.gov/ncas/alerts/aa20-107a

        | communicate 

        | generateDomainNames 

        | dataObfuscation //(0.685)]
            user info: "This encompasses many methods, such as adding junk data to protocol traffic, using steganography, commingling legitimate traffic with C2 communications traffic, or using a non-standard data encoding system."
            developer info: "TTC instant/not applicable. sources used for probability distribution: https://www.academia.edu/7383312/Obfuscation_The_Hidden_Malware, https://books.google.se/books?id=tHK6CAAAQBAJ&pg=PA175&lpg=PA175&dq=percent+of+malware+using+obfuscation&source=bl&ots=uAffxqpZX2&sig=ACfU3U2kkIrqzLLQ8ipOR2RwkRPzc8Jp1A&hl=en&sa=X&ved=2ahUKEwio69vRhZrqAhVMEncKHYwLAwsQ6AEwC3oECGQQAQ#v=onepage&q=percent%20of%20malware%20using%20obfuscation&f=false"
            ->  junkData,
                router.computer.os.steganography,
                attemptProtocolImpersonation

        & junkData
            user info: "Adversaries may add junk data to protocols used for command and control to make detection more difficult."
            ->  bypassNetworkIntrusionDetection 

        | attemptProtocolImpersonation @hidden
            ->  protocolImpersonation

        & protocolImpersonation
            user info: "Adversaries may impersonate legitimate protocols or web service traffic to disguise command and control activity and thwart analysis efforts."
            ->  communicate

        | packetCapture

        & taintSharedContent
            user info: "Once a user opens the shared tainted content, tfhe malicious portion can be executed to run the adversary's code on a remote system."

        | dataFromNetworkSharedDrive //(0.892)*Exponential(9.952)]
            developer info: "Sources for distribution results : see automatedCollection.md file"
            user info: "Adversaries may search network shares on computers they have compromised to find files of interest."

        # encryptSensitiveInformation
            user info:"https://attack.mitre.org/mitigations/M1041/"   
            ->  transmittedDataManipulation,
                exchangeServerCollection

        # executionPrevention             
            user info: "https://attack.mitre.org/mitigations/M1038/"
            ->  router.computer.os.networkServiceScan

        # filterNetworkTraffic //(0.8217)]
            developer info: "Sources for distribution result: https://www.cmu.edu/mits/files/breaking-the-ddos-attack-chain.pdf, https://www.researchgate.net/publication/220240884_An_Effective_DDoS_Attack_Detection_and_Packet-Filtering_Scheme, https://www.akamai.com/us/en/multimedia/documents/report/trends-in-the-cost-of-web-application-ddos-attacks-apac-ponemon-report.pdf, https://uk.pcmag.com/encryption/127134/trend-micro-home-network-security, http://www.securenetconsulting.co.uk/2016/06/why-you-need-dns-firewall-in-your.html, https://www.itproportal.com/2011/04/19/firewalls-only-60-cent-effective-against-malware/"
            user info: "https://attack.mitre.org/mitigations/M1037/"   
            ->  router.computer.os.nonApplicationLayerProtocol,
                router.computer.os.directNetworkFlood,
                router.computer.os.endpointDenialOfService,
                router.computer.os.lateralToolTransfer,
                router.computer.os.manInTheMiddle,
                router.computer.os.dNS,
                router.computer.os.vNC,
                router.computer.os.protocolTunneling,
                router.computer.os.multiHopProxy,
                router.computer.os.reflectionAmplification,
                router.computer.os.exfiltrationOverAternativeProtocol,
                router.computer.os.bITSJobs,
                router.computer.os.lLMNR_NBT_NS_PoisoningAndSMBRelay,
                router.computer.os.forcedAuthentication 

        # limitAccessToResourceOverNetwork
            user info: "https://attack.mitre.org/mitigations/M1035/"   
            ->  router.computer.os.manInTheMiddle,
                router.computer.os.remoteDesktopProtocol,
                router.computer.os.windowsAdminShares,
                router.computer.os.rDPHijacking,
                router.computer.hardwareAdditions,
                router.computer.os.service.externalRemoteServices

        # multiFactorAuthentication //(0.99325)]
            developer info: "Sources for distribution result: https://security.googleblog.com/2019/05/new-research-how-effective-is-basic.html, https://www.zdnet.com/article/microsoft-using-multi-factor-authentication-blocks-99-9-of-account-hacks/"
            user info: "https://attack.mitre.org/mitigations/M1032/"
            ->  exchangeServerCollection,
                router.externalNetwork.dataFromCloudStorageObject

        # networkIntrusionPrevention
            user info: "https://attack.mitre.org/mitigations/M1031/"
            ->  applicationLayerConnexion,
                c2Connexion,
                dataExfiltration,
                exfiltrationOverC2Channel,
                generateDomainNames,
                junkData,
                protocolImpersonation,
                router.computer.os.userAccount.userExecution,
                router.computer.user.maliciousLink,
                router.computer.os.service.browser.spearphishingAttachment,
                router.computer.os.nonApplicationLayerProtocol,
                router.computer.os.encryptedChannel,
                router.computer.os.dataCompressed,
                router.computer.os.domainGenerationAlgorithms,
                router.computer.os.internalProxy,
                router.computer.os.externalProxy,
                router.computer.os.exfiltrationOverAternativeProtocol,
                router.computer.os.standardEncoding,
                router.computer.os.nonStandardEncoding,
                router.computer.os.fallbackChannels,
                router.computer.os.lateralToolTransfer,
                router.computer.os.manInTheMiddle,
                router.computer.os.multiStageChannels,
                router.computer.os.networkServiceScan,
                router.computer.os.protocolTunneling,
                router.computer.os.remoteFileCopy,
                router.computer.os.applicationLayerProtocol,
                router.computer.os.nonStandardPort,
                router.computer.os.templateInjection,
                router.computer.os.lLMNR_NBT_NS_PoisoningAndSMBRelay

        # networkSegmentation
            user info: "https://attack.mitre.org/mitigations/M1030/"
            ->  router.computer.os.service.applicationDeploymentSoftware,
                router.computer.os.manInTheMiddle,
                router.computer.os.nonStandardPort,
                router.computer.os.nonApplicationLayerProtocol,
                router.computer.os.domainAccount,
                router.computer.os.exfiltrationOverAternativeProtocol,
                router.computer.os.privateKeys,
                router.computer.os.runtimeDataManipulation,
                router.computer.os.domainTrustDiscovery,
                router.computer.os.lLMNR_NBT_NS_PoisoningAndSMBRelay,
                router.computer.os.rDPHijacking,
                router.computer.os.serviceStop

        # sSLOrTLSInspection
            user info: "https://attack.mitre.org/mitigations/M1020/"
            ->  obfuscateNetworkTraffic,
                router.computer.os.encryptedChannel,
                router.computer.os.domainFronting
    }

    asset NetworkSharedDrive extends InternalNetwork {
        & taintSharedContent
            user info: "Once a user opens the shared tainted content, tfhe malicious portion can be executed to run the adversary's code on a remote system."
            +>  router.computer.os.executeCode

        | dataFromNetworkSharedDrive //(0.892)*Exponential(9.952)]
            developer info: "Sources for distribution results : see automatedCollection.md file"
            user info: "Adversaries may search network shares on computers they have compromised to find files of interest."
            +>  router.computer.os.sensitiveDataCollected
    }

    asset ExternalNetwork {
        | obfuscateNetworkTraffic

        | bypassNetworkIntrusionDetection

        | dataExfiltration

        & dataFromCloudStorageObject //(0.11)]
            developer info: "Sources for distribution results: https://www.helpnetsecurity.com/2020/01/28/accessing-cloud-services/#:~:text=Shadow%20IT%20continues%20to%20expand,the%20cloud%20provider%20is%20breached., https://go.netskope.com/rs/665-KFP-612/images/2020-02-February%20Cloud%20and%20Threat%20Report-WEB%20%281%29.pdf"
            user info: "Adversaries may access data objects from improperly secured cloud storage."
            ->  router.computer.os.service.sensitiveDataCollected

        | attemptDataEncryptedForImpact @hidden
            ->  dataEncryptedForImpact

        & dataEncryptedForImpact //} //(0.366)*Exponential(12)]
            user info: "Adversaries may encrypt data on target systems or on large numbers of systems in a network to interrupt availability to system and network resources. To maximize impact on the target organization, malware designed for encrypting data may have worm-like features to propagate across a network by leveraging other attack techniques like Valid Accounts, Credential Dumping, and Windows Admin Shares."
            developer info: "Sources used for probability distribution result: https://www.google.com/url?sa=t&rct=j&q=&esrc=s&source=web&cd=&ved=2ahUKEwje19GOp5rqAhXnl4sKHSJbDFcQFjANegQIMBAB&url=https%3A%2F%2Fwww.checkpoint.com%2Fdownloads%2Fproducts%2Fransomware-defense-survey-for-enterprise.pdf&usg=AOvVaw1Om5gqIJ3-Gcf7efzgIby9, https://news.sophos.com/en-us/2020/05/12/the-state-of-ransomware-2020/, https://www.exabeam.com/library/anatomy-ransomware-attack/"

        & externalDefacement //}
            user info: "Websites are a common victim of defacement that often targeted by adversary and hacktivist groups in order to push a political message or spread propaganda."

        & exfiltrationOverWebService
            user info: "Adversaries may use an existing, legitimate external Web service to exfiltrate data rather than their primary command and control channel."
            ->  exfiltrationToCodeRepository,
                exfiltrationToCloudStorage

        | exfiltrationToCodeRepository
            user info: "Adversaries may exfiltrate data to a code repository rather than over their primary command and control channel."
            ->  dataExfiltration

        | exfiltrationToCloudStorage
            user info: "Adversaries may exfiltrate data to a cloud storage service rather than over their primary command and control channel."
            ->  dataExfiltration

        | webService //(0.0445)]
            developer info: "Sources used for distribution result: https://www.fireeye.com/current-threats/annual-threat-report/mtrends.html, https://krisk.io/publication/mitre-attack-securecomm19/, https://www.fireeye.com/blog/threat-research/2019/04/pick-six-intercepting-a-fin6-intrusion.html"
            user info: "Adversaries may use an existing, legitimate external Web service as a means for relaying commands to a compromised system."
            ->  deadDropResolver,
                bidirectionaCommunication,
                oneWayCommunication

        & deadDropResolver
            user info: "Adversaries may use an existing, legitimate external Web service to host information that points to additional command and control (C2) infrastructure."
            ->  router.internalNetwork.c2Connected

        & bidirectionaCommunication
            user info: "Adversaries may use an existing, legitimate external Web service as a means for sending commands to and receiving output from a compromised system over the Web service channel."
            ->  router.internalNetwork.c2Connected
            
        & oneWayCommunication
            user info: "Adversaries may use an existing, legitimate external Web service as a means for sending commands to a compromised system without receiving return output over the Web service channel."
            ->  router.internalNetwork.c2Connected

        | attemptTransmittedDataManipulation @hidden //}
            ->  transmittedDataManipulation
 
        & transmittedDataManipulation //} //(24)]
            user info: "By manipulating transmitted data, adversaries may attempt to affect a business process, organizational understanding, and decision making."
            developer info: "Sources used for distribution: https://www.google.com/url?sa=t&rct=j&q=&esrc=s&source=web&cd=&ved=2ahUKEwiW28Dmk4vqAhXS4KYKHZvADy4QFjABegQIAhAB&url=https%3A%2F%2Fgo.thalesesecurity.com%2Frs%2F480-LWA-970%2Fimages%2F2019-DTR-Global-USL-Web.pdf&usg=AOvVaw2rKeGVWQgkIV7M0vjnCo1g, https://secure2.sophos.com/en-us/medialibrary/Gated%20Assets/white%20papers/the-state-of-encryption-today-wpna.pdf?cmp=701j0000001WskZAAS, www.businesswire.com/news/home/20190221005061/en/Survey-83-Percent-U.S.-Organizations-Accidentally-Exposed, https://content.fireeye.com/apt/rpt-apt38"
            
        # encryptSensitiveInformation
            user info:"https://attack.mitre.org/mitigations/M1041/"   
            ->  transmittedDataManipulation

        # filterNetworkTraffic //(0.8217)] // Modify network and/or host firewall rules, as well as other network controls, to only allow legitimate BITS traffic.
            developer info: "Sources for distribution result: https://www.cmu.edu/mits/files/breaking-the-ddos-attack-chain.pdf, https://www.researchgate.net/publication/220240884_An_Effective_DDoS_Attack_Detection_and_Packet-Filtering_Scheme, https://www.akamai.com/us/en/multimedia/documents/report/trends-in-the-cost-of-web-application-ddos-attacks-apac-ponemon-report.pdf, https://uk.pcmag.com/encryption/127134/trend-micro-home-network-security, http://www.securenetconsulting.co.uk/2016/06/why-you-need-dns-firewall-in-your.html, https://www.itproportal.com/2011/04/19/firewalls-only-60-cent-effective-against-malware/"
            user info: "https://attack.mitre.org/mitigations/M1037/"   
            ->  dataFromCloudStorageObject,
                router.computer.os.endpointDenialOfService,
                router.computer.os.multiHopProxy,
                router.computer.os.directNetworkFlood,
                router.computer.os.reflectionAmplification,
                router.computer.os.bITSJobs

        # networkIntrusionPrevention
            user info: "https://attack.mitre.org/mitigations/M1031/"
            ->  bidirectionaCommunication,
                deadDropResolver,
                oneWayCommunication,
                router.computer.os.service.browser.spearphishingAttachment,
                router.internalNetwork.dataObfuscation,
                router.internalNetwork.exfiltrationOverC2Channel,
                router.internalNetwork.generateDomainNames,
                router.computer.os.nonStandardPort,
                router.computer.os.fallbackChannels,
                router.computer.os.multiStageChannels,
                router.computer.os.remoteFileCopy,
                router.computer.os.applicationLayerProtocol

        # networkSegmentation // Segment networks and systems appropriately to reduce access to critical systems and services to controlled methods.
            user info: "https://attack.mitre.org/mitigations/M1030/"
            ->  router.computer.os.nonStandardPort,
                router.computer.os.privateKeys,
                router.computer.os.runtimeDataManipulation        

        # sSLOrTLSInspection
            user info: "https://attack.mitre.org/mitigations/M1020/"
            ->  obfuscateNetworkTraffic
    }

    asset Firewall {
        & bypassFirewall @hidden
            ->  router.internalNetwork.dataExfiltration,
                router.internalNetwork.c2Connexion

        # filterNetworkTraffic //(0.8217)] // Modify network and/or host firewall rules, as well as other network controls, to only allow legitimate BITS traffic.
            developer info: "Sources for distribution result: https://www.cmu.edu/mits/files/breaking-the-ddos-attack-chain.pdf, https://www.researchgate.net/publication/220240884_An_Effective_DDoS_Attack_Detection_and_Packet-Filtering_Scheme, https://www.akamai.com/us/en/multimedia/documents/report/trends-in-the-cost-of-web-application-ddos-attacks-apac-ponemon-report.pdf, https://uk.pcmag.com/encryption/127134/trend-micro-home-network-security, http://www.securenetconsulting.co.uk/2016/06/why-you-need-dns-firewall-in-your.html, https://www.itproportal.com/2011/04/19/firewalls-only-60-cent-effective-against-malware/"
            user info: "https://attack.mitre.org/mitigations/M1037/"   
            ->  router.computer.os.service.cloudInstanceMetadataAPI,
                router.computer.os.bITSJobs,
                router.computer.os.portKnocking

        # networkSegmentation // Properly configure firewalls and proxies to limit outgoing traffic to only necessary ports for that particular network segment.
            user info: "https://attack.mitre.org/mitigations/M1030/"
            ->  router.computer.os.nonStandardPort,
                router.computer.os.service.externalRemoteServices,
                router.computer.os.remoteDesktopProtocol,
                router.computer.os.distributedComponentObjectModel,
                router.computer.os.windowsRemoteManagement
    }
}

category Hardware {
    asset Computer {
        | infectedComputer
            ->  router.internalNetwork.applicationLayerConnexion,
                router.internalNetwork.attemptDataEncryptedForImpact, // https://us-cert.cisa.gov/ncas/alerts/aa20-049a
                router.externalNetwork.attemptDataEncryptedForImpact, // https://us-cert.cisa.gov/ncas/alerts/aa20-049a
                os.nonStandardPort,
                os.fileDeletion,
                os.attemptPowerShell,
                os.accountManipulation,
                os.screenCapture,
                os.validAccounts,
                peripheralDevice.infectedMedia,
                peripheralDevice.dataFromRemovableMedia

        | infectedWindowsComputer
                
        | infectedLinuxComputer

        | infectedMacOSComputer 

        | unresponsive

        & hardwareAdditions 

        | attemptExfiltrationOverPhysicalMedium @hidden
            ->  exfiltrationOverPhysicalMedium

        & exfiltrationOverPhysicalMedium //(0.79224)*Exponential(7.69)]
            developer info: "Sources for distribution results: https://www.mcafee.com/enterprise/en-us/assets/reports/rp-data-exfiltration.pdf"
            user info: "https://attack.mitre.org/techniques/T1052/"
            ->  exfiltrationOverUSB,
                peripheralDevice.dataExfiltration

        | exfiltrationOverUSB
            user info: "Adversaries may attempt to exfiltrate data over a USB connected physical device."
            ->  peripheralDevice.dataExfiltration

        & collectAudio //(0.74)*Exponential(0.1)]
            developer info: "Sources for distribution results: https://capec.mitre.org/data/definitions/634.html and Video Capture results"
            ->  os.dataCollected
        
        | peripheralDeviceDiscovery
            developer info: "Binary distribution result (endpoint)"
            user info: "Adversaries may attempt to gather information about attached peripheral devices and components connected to a computer system. The information may be used to enhance their awareness of the system and network environment or may be used for further actions."

        | collectVideo
            ->  os.dataCollected

        # disableOrRemoveFeatureOrProgram
            user info: "https://attack.mitre.org/techniques/T1064/"
            ->  exfiltrationOverPhysicalMedium
    }

    asset HardwareAddition extends Computer {
        | physicalAccess //(0.11)*Exponential(8)]
            developer info: "Sources for distribution result: https://www.if-insurance.com/large-enterprises/insight/risk-consulting-magazine/risk-consulting-2019-1/physical-security-controls-of-it-and-ics, https://go.crowdstrike.com/rs/281-OBQ-266/images/Report2020CrowdStrikeGlobalThreatReport.pdf"
            ->  hardwareAdditions,
                os.attemptAccessibilityFeatures
            
        & hardwareAdditions 
            user info: "Adversaries may introduce computer accessories, computers, or networking hardware into a system or network that can be used as a vector to gain access." 
            +>  os.executeCode,
                os.attemptGatekeeperBypass
    }

    asset PeripheralDevice {
        | collectVideo

        | collectAudio //(0.74)*Exponential(0.1)]
            developer info: "Sources for distribution results: https://capec.mitre.org/data/definitions/634.html and Video Capture results"

        | dataExfiltration

        | infectedMedia

        | dataFromRemovableMedia //(0.5352)*Exponential(6.47)]
            developer info: "Sources for distribution results: See dataFromRemovableMedia.md file and automatedCollection.md"
    }

    asset Webcam extends PeripheralDevice {
        | collectVideo
            +>  computer.collectVideo
    }

    asset RemovableMedia extends PeripheralDevice {
        | dataFromRemovableMedia //(0.5352)*Exponential(6.47)]
            developer info: "Sources for distribution results: See dataFromRemovableMedia.md file and automatedCollection.md"
            +>  computer.os.sensitiveDataCollected

        | infectedMedia

        | dataExfiltration
    }
    
    asset Microphone extends PeripheralDevice {
        | collectAudio //(0.74)*Exponential(0.1)]
            developer info: "Sources for distribution results: https://capec.mitre.org/data/definitions/634.html and Video Capture results"
            +>  computer.collectAudio
    }
}

associations {
    User [user] * <--Uses--> * [computer] Computer
    User [user] 1 <--Logsin--> * [userAccount] UserAccount
    AdminAccount [adminAccount] * <--Manages--> * [userAccount] UserAccount
    UserAccount [userAccount] * <--Accesses--> 1 [os] OS
    AdminAccount [adminAccount] * <--Accesses--> 1 [os] OS
    OS [os] 1 <--Runs--> * [service] Service
    Computer [computer] * <--Operates--> * [os] OS
    Router [router] * <--Communicates--> * [computer] Computer
    Firewall [firewall] 1 <--Protects--> 1 [router] Router
    InternalNetwork [internalNetwork] * <--Connects--> * [router] Router
    ExternalNetwork [externalNetwork] * <--Connects--> * [router] Router
    Browser [browser] * <--Accesses--> * [service] Service
    Computer [computer] * <--Serves--> * [peripheralDevice] PeripheralDevice
}
